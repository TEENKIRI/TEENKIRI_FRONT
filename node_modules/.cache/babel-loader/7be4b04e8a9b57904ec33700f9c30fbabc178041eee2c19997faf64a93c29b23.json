{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UserEditPage',\n  data() {\n    return {\n      userEditInfo: {\n        nickname: '',\n        name: '',\n        email: '',\n        phone: '',\n        address: ''\n      },\n      userEditReq: {\n        password: '',\n        confirmPassword: ''\n      },\n      errorMessage: '',\n      successMessage: ''\n    };\n  },\n  created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    async fetchUserInfo() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`);\n        if (response.status === 200 && response.data.result) {\n          this.userEditInfo = response.data.result;\n        } else {\n          this.errorMessage = '회원 정보 조회에 실패했습니다.';\n        }\n      } catch (e) {\n        this.errorMessage = e.response?.data?.status_message || '회원 정보 조회 중 오류가 발생했습니다.';\n      }\n    },\n    async updateUserInfo() {\n      if (this.userEditReq.password && this.userEditReq.password !== this.userEditReq.confirmPassword) {\n        this.errorMessage = '비밀번호가 일치하지 않습니다.';\n        return;\n      }\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`, {\n          nickname: this.userEditInfo.nickname,\n          password: this.userEditReq.password,\n          confirmPassword: this.userEditReq.confirmPassword,\n          address: this.userEditInfo.address\n        });\n        if (response.status === 200) {\n          this.successMessage = '회원 정보가 성공적으로 수정되었습니다.';\n          this.errorMessage = '';\n        } else {\n          this.errorMessage = '회원 정보 수정에 실패했습니다.';\n        }\n      } catch (e) {\n        this.errorMessage = e.response?.data?.status_message || '회원 정보 수정 중 오류가 발생했습니다.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userEditInfo","nickname","email","phone","address","userEditReq","password","confirmPassword","errorMessage","successMessage","created","fetchUserInfo","methods","response","get","process","env","VUE_APP_API_BASE_URL","status","result","e","status_message","updateUserInfo","post"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/UpdateUserInfo.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row justify=\"center\">\n        <v-col cols=\"12\" sm=\"8\" md=\"6\">\n          <v-card>\n            <v-card-title class=\"text-h5 text-center\">회원 정보 수정</v-card-title>\n            <v-card-text>\n              <v-form @submit.prevent=\"updateUserInfo\">\n                <v-text-field\n                  label=\"닉네임\"\n                  v-model=\"userEditInfo.nickname\"\n                  prepend-icon=\"mdi-account\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  label=\"이름\"\n                  v-model=\"userEditInfo.name\"\n                  prepend-icon=\"mdi-account-box\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  label=\"이메일\"\n                  v-model=\"userEditInfo.email\"\n                  prepend-icon=\"mdi-email\"\n                  disabled\n                ></v-text-field>\n                <v-text-field\n                  label=\"핸드폰 번호\"\n                  v-model=\"userEditInfo.phone\"\n                  prepend-icon=\"mdi-phone\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  label=\"주소\"\n                  v-model=\"userEditInfo.address\"\n                  prepend-icon=\"mdi-home\"\n                  required\n                ></v-text-field>\n                <v-divider class=\"my-4\"></v-divider>\n                <v-text-field\n                  label=\"새 비밀번호\"\n                  v-model=\"userEditReq.password\"\n                  type=\"password\"\n                  prepend-icon=\"mdi-lock\"\n                ></v-text-field>\n                <v-text-field\n                  label=\"비밀번호 확인\"\n                  v-model=\"userEditReq.confirmPassword\"\n                  type=\"password\"\n                  prepend-icon=\"mdi-lock-check\"\n                ></v-text-field>\n                <v-btn block type=\"submit\" color=\"primary\">회원 정보 수정</v-btn>\n              </v-form>\n              <v-alert v-if=\"errorMessage\" type=\"error\" class=\"mt-3\">{{ errorMessage }}</v-alert>\n              <v-alert v-if=\"successMessage\" type=\"success\" class=\"mt-3\">{{ successMessage }}</v-alert>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'UserEditPage',\n    data() {\n      return {\n        userEditInfo: {\n          nickname: '',\n          name: '',\n          email: '',\n          phone: '',\n          address: ''\n        },\n        userEditReq: {\n          password: '',\n          confirmPassword: ''\n        },\n        errorMessage: '',\n        successMessage: ''\n      };\n    },\n    created() {\n      this.fetchUserInfo();\n    },\n    methods: {\n      async fetchUserInfo() {\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`);\n          if (response.status === 200 && response.data.result) {\n            this.userEditInfo = response.data.result;\n          } else {\n            this.errorMessage = '회원 정보 조회에 실패했습니다.';\n          }\n        } catch (e) {\n          this.errorMessage = e.response?.data?.status_message || '회원 정보 조회 중 오류가 발생했습니다.';\n        }\n      },\n      async updateUserInfo() {\n        if (this.userEditReq.password && this.userEditReq.password !== this.userEditReq.confirmPassword) {\n          this.errorMessage = '비밀번호가 일치하지 않습니다.';\n          return;\n        }\n        try {\n          const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`, {\n            nickname: this.userEditInfo.nickname,\n            password: this.userEditReq.password,\n            confirmPassword: this.userEditReq.confirmPassword,\n            address: this.userEditInfo.address\n          });\n          if (response.status === 200) {\n            this.successMessage = '회원 정보가 성공적으로 수정되었습니다.';\n            this.errorMessage = '';\n          } else {\n            this.errorMessage = '회원 정보 수정에 실패했습니다.';\n          }\n        } catch (e) {\n          this.errorMessage = e.response?.data?.status_message || '회원 정보 수정 중 오류가 발생했습니다.';\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  /* 필요에 따라 스타일 조정 */\n  </style>\n  "],"mappings":"AA+DE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZH,IAAI,EAAE,EAAE;QACRI,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX,CAAC;MACDC,WAAW,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE;MACnB,CAAC;MACDC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,iBAAiB,CAAC;QACtF,IAAIJ,QAAQ,CAACK,MAAK,KAAM,GAAE,IAAKL,QAAQ,CAACd,IAAI,CAACoB,MAAM,EAAE;UACnD,IAAI,CAACnB,YAAW,GAAIa,QAAQ,CAACd,IAAI,CAACoB,MAAM;QAC1C,OAAO;UACL,IAAI,CAACX,YAAW,GAAI,mBAAmB;QACzC;MACF,EAAE,OAAOY,CAAC,EAAE;QACV,IAAI,CAACZ,YAAW,GAAIY,CAAC,CAACP,QAAQ,EAAEd,IAAI,EAAEsB,cAAa,IAAK,wBAAwB;MAClF;IACF,CAAC;IACD,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACjB,WAAW,CAACC,QAAO,IAAK,IAAI,CAACD,WAAW,CAACC,QAAO,KAAM,IAAI,CAACD,WAAW,CAACE,eAAe,EAAE;QAC/F,IAAI,CAACC,YAAW,GAAI,kBAAkB;QACtC;MACF;MACA,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMhB,KAAK,CAAC0B,IAAI,CAAC,GAAGR,OAAO,CAACC,GAAG,CAACC,oBAAoB,iBAAiB,EAAE;UACtFhB,QAAQ,EAAE,IAAI,CAACD,YAAY,CAACC,QAAQ;UACpCK,QAAQ,EAAE,IAAI,CAACD,WAAW,CAACC,QAAQ;UACnCC,eAAe,EAAE,IAAI,CAACF,WAAW,CAACE,eAAe;UACjDH,OAAO,EAAE,IAAI,CAACJ,YAAY,CAACI;QAC7B,CAAC,CAAC;QACF,IAAIS,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACT,cAAa,GAAI,uBAAuB;UAC7C,IAAI,CAACD,YAAW,GAAI,EAAE;QACxB,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,mBAAmB;QACzC;MACF,EAAE,OAAOY,CAAC,EAAE;QACV,IAAI,CAACZ,YAAW,GAAIY,CAAC,CAACP,QAAQ,EAAEd,IAAI,EAAEsB,cAAa,IAAK,wBAAwB;MAClF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}