{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from 'axios';\nimport ReportCreate from '../report/ReportCreate.vue';\nexport default {\n  components: {\n    ReportCreate\n  },\n  data() {\n    return {\n      questionDetail: null,\n      newComment: '',\n      error: null,\n      deleteDialog: false,\n      userEmail: '',\n      userRole: '',\n      showReportModal: false,\n      reportData: {}\n    };\n  },\n  computed: {\n    isQuestionAuthor() {\n      return this.questionDetail && this.questionDetail.userEmail === this.userEmail;\n    },\n    isAdmin() {\n      return this.userRole === 'ADMIN';\n    },\n    canEditAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    },\n    canAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    }\n  },\n  created() {\n    this.decodeToken();\n    this.fetchQuestionDetail();\n  },\n  methods: {\n    decodeToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const decoded = this.parseJwt(token);\n        this.userEmail = decoded.sub;\n        this.userRole = decoded.role;\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    },\n    async fetchQuestionDetail() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.questionDetail = response.data.result;\n      } catch (error) {\n        this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n      }\n    },\n    async submitComment() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, {\n          qnaId: questionId,\n          content: this.newComment,\n          userId: localStorage.getItem('userId')\n        });\n        this.newComment = '';\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 등록에 실패했습니다.';\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/delete/${commentId}`);\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 삭제에 실패했습니다.';\n      }\n    },\n    confirmDeleteQuestion() {\n      this.deleteDialog = true;\n    },\n    async deleteQuestion() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${questionId}`);\n        this.$router.push('/qna/list');\n      } catch (error) {\n        this.error = '질문 삭제에 실패했습니다.';\n      }\n    },\n    editQuestion() {\n      this.$router.push(`/qna/update/question/${this.$route.params.id}`);\n    },\n    editAnswer() {\n      this.$router.push(`/qna/update/answer/${this.$route.params.id}`);\n    },\n    goToAnswer() {\n      this.$router.push(`/qna/answer/${this.$route.params.id}`);\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    goBack() {\n      this.$router.push('/qna/list');\n    },\n    openReportModal(type, comment = null) {\n      if (type === 'question') {\n        this.reportData = {\n          qnaId: this.questionDetail.id\n        };\n      } else if (type === 'comment' && comment) {\n        this.reportData = {\n          qnaId: this.questionDetail.id,\n          commentId: comment.id\n        };\n      }\n      this.showReportModal = true;\n    },\n    closeReportModal() {\n      this.showReportModal = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","ReportCreate","components","data","questionDetail","newComment","error","deleteDialog","userEmail","userRole","showReportModal","reportData","computed","isQuestionAuthor","isAdmin","canEditAnswer","canAnswer","created","decodeToken","fetchQuestionDetail","methods","token","localStorage","getItem","decoded","parseJwt","sub","role","$router","push","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","questionId","$route","params","id","response","get","process","env","VUE_APP_API_BASE_URL","result","message","submitComment","post","qnaId","content","userId","deleteComment","commentId","confirmDeleteQuestion","deleteQuestion","editQuestion","editAnswer","goToAnswer","formatDate","date","options","year","month","day","hour","minute","Date","toLocaleDateString","goBack","openReportModal","type","comment","closeReportModal"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaDetail.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card v-if=\"questionDetail\">\n      <v-card-title>\n        <h3>{{ questionDetail.title }}</h3>\n        <v-spacer></v-spacer>\n        <!-- 질문 수정 버튼 (작성자만 보이도록) -->\n        <v-btn v-if=\"isQuestionAuthor\" color=\"warning\" @click=\"editQuestion\">질문 수정</v-btn>\n        <!-- 삭제 버튼 (관리자만 보이도록) -->\n        <v-btn v-if=\"isAdmin\" color=\"error\" @click=\"confirmDeleteQuestion\">삭제</v-btn>\n        <!-- 질문 신고 버튼 -->\n        <v-btn color=\"secondary\" @click=\"openReportModal('question')\">신고</v-btn>\n        <!-- 답변하기 버튼 (관리자와 선생님만 보이도록) -->\n        <v-btn v-if=\"canAnswer\" color=\"primary\" @click=\"goToAnswer\">답변하기</v-btn>\n      </v-card-title>\n\n      <v-card-text>\n        <v-row>\n          <v-col cols=\"12\">\n            <p><strong>작성자:</strong> {{ questionDetail.questionUserNickname }}</p>\n            <p><strong>작성 시간:</strong> {{ formatDate(questionDetail.createdTime) }}</p>\n            <p><strong>수정 시간:</strong> {{ formatDate(questionDetail.updatedTime) }}</p>\n            <v-img\n              v-if=\"questionDetail.qimageUrl\"\n              :src=\"questionDetail.qimageUrl\"\n              alt=\"질문 이미지\"\n              max-width=\"400\"\n              class=\"my-3\"\n            />\n            <p><strong>질문 내용:</strong></p>\n            <p>{{ questionDetail.questionText }}</p>\n            <p><strong>강좌명:</strong></p>\n            <p>{{ questionDetail.subjectTitle }}</p>\n          </v-col>\n\n          <v-col cols=\"12\" v-if=\"questionDetail.answerText\">\n            <v-divider class=\"my-3\"></v-divider>\n            <p><strong>답변자:</strong> {{ questionDetail.answeredByNickname }}</p>\n            <p><strong>답변 시간:</strong> {{ formatDate(questionDetail.answeredAt) }}</p>\n            <v-img\n              v-if=\"questionDetail.aimageUrl\"\n              :src=\"questionDetail.aimageUrl\"\n              alt=\"답변 이미지\"\n              max-width=\"400\"\n              class=\"my-3\"\n            />\n            <p><strong>답변 내용:</strong></p>\n            <p>{{ questionDetail.answerText }}</p>\n            <!-- 답변 수정 버튼 (관리자와 선생님만 보이도록) -->\n            <v-btn v-if=\"canEditAnswer\" color=\"warning\" @click=\"editAnswer\">답변 수정</v-btn>\n          </v-col>\n        </v-row>\n\n        <!-- 댓글 목록 -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-divider class=\"my-3\"></v-divider>\n            <h4>댓글</h4>\n            <v-list>\n              <v-list-item v-for=\"comment in questionDetail.comments\" :key=\"comment.id\">\n                <v-list-item-content>\n                  <v-list-item-title>{{ comment.nickname }} ({{ formatDate(comment.createdTime) }})</v-list-item-title>\n                  <v-list-item-subtitle>{{ comment.content }}</v-list-item-subtitle>\n                </v-list-item-content>\n                <!-- 댓글 삭제 버튼 (관리자만 볼 수 있음) -->\n                <v-list-item-action v-if=\"isAdmin\">\n                  <v-btn icon @click=\"deleteComment(comment.id)\">\n                    <v-icon>mdi-delete</v-icon>\n                  </v-btn>\n                </v-list-item-action>\n                <!-- 댓글 신고 버튼 -->\n                <v-list-item-action>\n                  <v-btn icon @click=\"openReportModal('comment', comment)\">\n                    <v-icon>mdi-alert-circle-outline</v-icon>\n                  </v-btn>\n                </v-list-item-action>\n              </v-list-item>\n            </v-list>\n\n            <!-- 댓글 작성 -->\n            <v-form @submit.prevent=\"submitComment\">\n              <v-textarea\n                label=\"댓글 작성\"\n                v-model=\"newComment\"\n                required\n              />\n              <v-btn type=\"submit\" color=\"primary\">댓글 등록</v-btn>\n            </v-form>\n          </v-col>\n        </v-row>\n      </v-card-text>\n\n      <v-card-actions>\n        <v-btn color=\"primary\" @click=\"goBack\">목록으로 돌아가기</v-btn>\n      </v-card-actions>\n    </v-card>\n\n    <v-alert type=\"error\" v-else-if=\"error\">\n      {{ error }}\n    </v-alert>\n\n    <v-progress-circular v-else indeterminate color=\"primary\"></v-progress-circular>\n\n    <!-- 질문 삭제 확인 다이얼로그 -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title class=\"headline\">게시글 삭제</v-card-title>\n        <v-card-text>게시글을 정말 삭제하시겠습니까?</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"deleteDialog = false\">취소</v-btn>\n          <v-btn color=\"error\" text @click=\"deleteQuestion\">삭제</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- 신고 모달 창 -->\n    <ReportCreate \n      v-if=\"showReportModal\" \n      :postId=\"reportData.postId\" \n      :commentId=\"reportData.commentId\" \n      :qnaId=\"reportData.qnaId\" \n      @close=\"closeReportModal\" \n    />\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport ReportCreate from '../report/ReportCreate.vue';\n\nexport default {\n  components: {\n    ReportCreate\n  },\n  data() {\n    return {\n      questionDetail: null,\n      newComment: '',\n      error: null,\n      deleteDialog: false,\n      userEmail: '',\n      userRole: '',\n      showReportModal: false,\n      reportData: {},\n    };\n  },\n  computed: {\n    isQuestionAuthor() {\n      return this.questionDetail && this.questionDetail.userEmail === this.userEmail;\n    },\n    isAdmin() {\n      return this.userRole === 'ADMIN';\n    },\n    canEditAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    },\n    canAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    }\n  },\n  created() {\n    this.decodeToken();\n    this.fetchQuestionDetail();\n  },\n  methods: {\n    decodeToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const decoded = this.parseJwt(token);\n        this.userEmail = decoded.sub;\n        this.userRole = decoded.role;\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(\n          atob(base64)\n            .split('')\n            .map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n        );\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    },\n    async fetchQuestionDetail() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.questionDetail = response.data.result;\n      } catch (error) {\n        this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n      }\n    },\n    async submitComment() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, {\n          qnaId: questionId,\n          content: this.newComment,\n          userId: localStorage.getItem('userId')\n        });\n        this.newComment = '';\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 등록에 실패했습니다.';\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/delete/${commentId}`);\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 삭제에 실패했습니다.';\n      }\n    },\n    confirmDeleteQuestion() {\n      this.deleteDialog = true;\n    },\n    async deleteQuestion() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${questionId}`);\n        this.$router.push('/qna/list');\n      } catch (error) {\n        this.error = '질문 삭제에 실패했습니다.';\n      }\n    },\n    editQuestion() {\n      this.$router.push(`/qna/update/question/${this.$route.params.id}`);\n    },\n    editAnswer() {\n      this.$router.push(`/qna/update/answer/${this.$route.params.id}`);\n    },\n    goToAnswer() {\n      this.$router.push(`/qna/answer/${this.$route.params.id}`);\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    goBack() {\n      this.$router.push('/qna/list');\n    },\n    openReportModal(type, comment = null) {\n      if (type === 'question') {\n        this.reportData = {\n          qnaId: this.questionDetail.id,\n        };\n      } else if (type === 'comment' && comment) {\n        this.reportData = {\n          qnaId: this.questionDetail.id,\n          commentId: comment.id,\n        };\n      }\n      this.showReportModal = true;\n    },\n    closeReportModal() {\n      this.showReportModal = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}