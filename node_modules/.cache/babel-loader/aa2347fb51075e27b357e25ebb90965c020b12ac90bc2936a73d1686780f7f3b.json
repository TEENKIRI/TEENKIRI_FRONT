{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      reports: [],\n      selectedType: '',\n      types: [{\n        text: '전체',\n        value: ''\n      }, {\n        text: 'QnA 신고',\n        value: 'qna'\n      }, {\n        text: '게시글 신고',\n        value: 'post'\n      }, {\n        text: '댓글 신고',\n        value: 'comment'\n      }],\n      page: 1,\n      totalPages: 1,\n      loading: false\n    };\n  },\n  computed: {\n    showQnaCol() {\n      return this.selectedType === '' || this.selectedType === 'qna';\n    },\n    showPostCol() {\n      return this.selectedType === '' || this.selectedType === 'post';\n    },\n    showCommentCol() {\n      return this.selectedType === '' || this.selectedType === 'comment';\n    },\n    filteredReports() {\n      return this.reports.filter(report => {\n        if (this.selectedType === 'qna' && !report.qnaId) return false;\n        if (this.selectedType === 'post' && !report.postId) return false;\n        if (this.selectedType === 'comment' && !report.commentId) return false;\n        return true;\n      });\n    }\n  },\n  methods: {\n    async fetchReports() {\n      this.loading = true;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/report/list`, {\n          params: {\n            type: this.selectedType || '',\n            page: this.page - 1\n          }\n        });\n        this.reports = response.data.result.content;\n        this.totalPages = response.data.result.totalPages;\n      } catch (error) {\n        console.error('신고 목록을 불러오는 중 오류가 발생했습니다:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatReason(reason) {\n      const reasonMap = {\n        SPAM: '스팸홍보/도배글',\n        PORNOGRAPHY: '음란물',\n        ILLEGAL_INFORMATION: '불법정보 포함',\n        HARMFUL_TO_MINORS: '청소년에게 유해한 내용',\n        ABUSIVE_LANGUAGE: '욕설/생명경시/혐오/차별적 표현',\n        PRIVACY_VIOLATION: '개인정보 노출',\n        OFFENSIVE_CONTENT: '불쾌한 표현'\n      };\n      return reasonMap[reason] || '알 수 없는 이유';\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    filterReports() {\n      this.page = 1;\n      this.fetchReports();\n    }\n  },\n  created() {\n    this.fetchReports();\n  }\n};","map":{"version":3,"names":["axios","data","reports","selectedType","types","text","value","page","totalPages","loading","computed","showQnaCol","showPostCol","showCommentCol","filteredReports","filter","report","qnaId","postId","commentId","methods","fetchReports","response","get","process","env","VUE_APP_API_BASE_URL","params","type","result","content","error","console","formatReason","reason","reasonMap","SPAM","PORNOGRAPHY","ILLEGAL_INFORMATION","HARMFUL_TO_MINORS","ABUSIVE_LANGUAGE","PRIVACY_VIOLATION","OFFENSIVE_CONTENT","formatDate","date","options","year","month","day","hour","minute","Date","toLocaleDateString","filterReports","created"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/report/ReportList.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card class=\"elevation-2\">\n        <v-card-title class=\"d-flex align-center justify-space-between\">\n          <h3 class=\"mb-0\">신고 목록</h3>\n          <v-select\n            v-model=\"selectedType\"\n            :items=\"types\"\n            item-title=\"text\"\n            item-value=\"value\"\n            label=\"신고 유형 필터\"\n            @change=\"filterReports\"\n            density=\"compact\"\n            outlined\n            class=\"filter-select\"\n          ></v-select>\n        </v-card-title>\n  \n        <v-divider></v-divider>\n  \n        <v-card-text>\n          <v-simple-table class=\"styled-table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>신고자 이메일</th>\n                <th>피신고자 이메일</th>\n                <th>사유</th>\n                <th>상세사유</th>\n                <th v-if=\"showQnaCol\">QnA ID</th>\n                <th v-if=\"showPostCol\">Post ID</th>\n                <th v-if=\"showCommentCol\">Comment ID</th>\n                <th>생성 시간</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"report in filteredReports\" :key=\"report.id\">\n                <td>{{ report.id }}</td>\n                <td>{{ report.reportEmail }}</td>\n                <td>{{ report.suspectEmail }}</td>\n                <td>{{ formatReason(report.reason) }}</td>\n                <tD>{{ report.details }} </tD>\n                <td v-if=\"showQnaCol\">{{ report.qnaId }}</td>\n                <td v-if=\"showPostCol\">{{ report.postId }}</td>\n                <td v-if=\"showCommentCol\">{{ report.commentId }}</td>\n                <td>{{ formatDate(report.createdTime) }}</td>\n              </tr>\n            </tbody>\n          </v-simple-table>\n  \n          <v-pagination\n            v-if=\"totalPages > 1\"\n            v-model:currentPage=\"page\"\n            :length=\"totalPages\"\n            @input=\"fetchReports\"\n            class=\"mt-4\"\n            align-self=\"center\"\n          ></v-pagination>\n        </v-card-text>\n      </v-card>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        reports: [],\n        selectedType: '',\n        types: [\n          { text: '전체', value: '' },\n          { text: 'QnA 신고', value: 'qna' },\n          { text: '게시글 신고', value: 'post' },\n          { text: '댓글 신고', value: 'comment' }\n        ],\n        page: 1,\n        totalPages: 1,\n        loading: false,\n      };\n    },\n    computed: {\n      showQnaCol() {\n        return this.selectedType === '' || this.selectedType === 'qna';\n      },\n      showPostCol() {\n        return this.selectedType === '' || this.selectedType === 'post';\n      },\n      showCommentCol() {\n        return this.selectedType === '' || this.selectedType === 'comment';\n      },\n      filteredReports() {\n        return this.reports.filter(report => {\n          if (this.selectedType === 'qna' && !report.qnaId) return false;\n          if (this.selectedType === 'post' && !report.postId) return false;\n          if (this.selectedType === 'comment' && !report.commentId) return false;\n          return true;\n        });\n      }\n    },\n    methods: {\n      async fetchReports() {\n        this.loading = true;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/report/list`, {\n            params: {\n              type: this.selectedType || '',\n              page: this.page - 1\n            }\n          });\n          this.reports = response.data.result.content;\n          this.totalPages = response.data.result.totalPages;\n        } catch (error) {\n          console.error('신고 목록을 불러오는 중 오류가 발생했습니다:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n      formatReason(reason) {\n        const reasonMap = {\n          SPAM: '스팸홍보/도배글',\n          PORNOGRAPHY: '음란물',\n          ILLEGAL_INFORMATION: '불법정보 포함',\n          HARMFUL_TO_MINORS: '청소년에게 유해한 내용',\n          ABUSIVE_LANGUAGE: '욕설/생명경시/혐오/차별적 표현',\n          PRIVACY_VIOLATION: '개인정보 노출',\n          OFFENSIVE_CONTENT: '불쾌한 표현'\n        };\n        return reasonMap[reason] || '알 수 없는 이유';\n      },\n      formatDate(date) {\n        if (!date) return '';\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      filterReports() {\n        this.page = 1;\n        this.fetchReports();\n      }\n    },\n    created() {\n      this.fetchReports();\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  \n  .v-card-title {\n    font-size: 24px;\n    font-weight: bold;\n    color: #4a4a4a;\n  }\n  \n  .filter-select {\n    max-width: 250px;\n  }\n  \n  .v-card-text {\n    font-size: 16px;\n    padding-top: 0;\n  }\n  \n  .styled-table {\n    width: 100%;\n    border-collapse: collapse;\n    font-size: 14px;\n    letter-spacing: 0.5px;\n  }\n  \n  .styled-table th, \n  .styled-table td {\n    padding: 15px 20px;\n    text-align: left;\n    border-bottom: 1px solid #e0e0e0;\n  }\n  \n  .styled-table th {\n    background-color: #f5f5f5;\n    font-weight: bold;\n  }\n  \n  .styled-table tr:hover {\n    background-color: #f1f1f1;\n  }\n  \n  .v-pagination {\n    justify-content: center;\n  }\n  \n  .v-pagination .v-btn {\n    color: #1976d2;\n  }\n  \n  .v-pagination .v-btn:hover {\n    background-color: #e3f2fd;\n  }\n  \n  .v-pagination .v-btn--active {\n    background-color: #1976d2;\n    color: white;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}