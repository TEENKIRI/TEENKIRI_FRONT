{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      questions: [],\n      loading: false,\n      currentPage: 1,\n      totalPages: 1,\n      options: {\n        itemsPerPage: 10\n      }\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      this.loading = true;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.options.itemsPerPage\n          }\n        });\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    createNewQuestion() {\n      this.$router.push('/qna/create');\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    answerQuestion(id) {\n      this.$router.push(`/qna/answer/${id}`);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","questions","loading","currentPage","totalPages","options","itemsPerPage","created","fetchQuestions","methods","response","get","process","env","VUE_APP_API_BASE_URL","params","page","size","result","content","console","error","formatDate","date","year","month","day","hour","minute","Date","toLocaleDateString","createNewQuestion","$router","push","viewDetail","id","answerQuestion"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-card>\n          <v-card-title>\n            <h3>QnA 목록</h3>\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" @click=\"createNewQuestion\">질문 작성하기</v-btn>\n          </v-card-title>\n\n          <v-card-text>\n            <v-simple-table class=\"elevation-1\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>질문자</th>\n                  <th>제목</th>\n                  <th>생성 시간</th>\n                  <th>수정 시간</th>\n                  <th>상세보기</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"(item, index) in questions\" :key=\"item.id\">\n                  <td>{{ item.id }}</td>\n                  <td>{{ item.questionUserName }}</td>\n                  <td>{{ item.title }}</td>\n                  <td>{{ formatDate(item.createdTime) }}</td>\n                  <td>{{ formatDate(item.updatedTime) }}</td>\n                  <td>\n                    <v-btn small @click=\"viewDetail(item.id)\" color=\"primary\">상세보기</v-btn>\n                    <v-btn v-if=\"!item.answerText\" small @click=\"answerQuestion(item.id)\" color=\"primary\">답변하기</v-btn>\n                  </td>\n                </tr>\n              </tbody>\n            </v-simple-table>\n          </v-card-text>\n\n          <v-card-actions>\n            <v-pagination\n              v-model=\"currentPage\"\n              :length=\"totalPages\"\n              @input=\"fetchQuestions\"\n              class=\"justify-center\"\n            ></v-pagination>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      questions: [],\n      loading: false,\n      currentPage: 1,\n      totalPages: 1,\n      options: {\n        itemsPerPage: 10,\n      },\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      this.loading = true;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.options.itemsPerPage,\n          }\n        });\n\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    formatDate(date) {\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    createNewQuestion() {\n      this.$router.push('/qna/create');\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    answerQuestion(id) {\n      this.$router.push(`/qna/answer/${id}`);\n    },\n  }\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding-top: 20px;\n}\n</style>\n"],"mappings":";AAsDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE,CAAC;MACbC,OAAO,EAAE;QACPC,YAAY,EAAE;MAChB;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI,CAACN,OAAM,GAAI,IAAI;MACnB,IAAI;QACF,MAAMQ,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,WAAW,EAAE;UAC/EC,MAAM,EAAE;YACNC,IAAI,EAAE,IAAI,CAACb,WAAU,GAAI,CAAC;YAC1Bc,IAAI,EAAE,IAAI,CAACZ,OAAO,CAACC;UACrB;QACF,CAAC,CAAC;QAEF,MAAMY,MAAK,GAAIR,QAAQ,CAACV,IAAI,CAACkB,MAAM;QACnC,IAAIA,MAAK,IAAKA,MAAM,CAACC,OAAO,EAAE;UAC5B,IAAI,CAAClB,SAAQ,GAAIiB,MAAM,CAACC,OAAO;UAC/B,IAAI,CAACf,UAAS,GAAIc,MAAM,CAACd,UAAU;QACrC,OAAO;UACLgB,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEX,QAAQ,CAACV,IAAI,CAAC;QACpD;MACF,EAAE,OAAOqB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,UAAU;QACR,IAAI,CAACnB,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAEDoB,UAAUA,CAACC,IAAI,EAAE;MACf,MAAMlB,OAAM,GAAI;QAAEmB,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,GAAG,EAAE,SAAS;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC;MACzG,OAAO,IAAIC,IAAI,CAACN,IAAI,CAAC,CAACO,kBAAkB,CAAC,OAAO,EAAEzB,OAAO,CAAC;IAC5D,CAAC;IACD0B,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC,CAAC;IACDC,UAAUA,CAACC,EAAE,EAAE;MACb,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,eAAeE,EAAE,EAAE,CAAC;IACxC,CAAC;IACDC,cAAcA,CAACD,EAAE,EAAE;MACjB,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,eAAeE,EAAE,EAAE,CAAC;IACxC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}