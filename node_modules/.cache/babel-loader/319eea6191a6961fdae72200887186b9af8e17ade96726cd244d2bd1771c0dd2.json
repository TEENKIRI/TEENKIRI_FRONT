{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_form, {\n      ref: \"form\",\n      onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_text_field, {\n        modelValue: $data.formData.title,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.title = $event),\n        label: \"제목\",\n        required: \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_textarea, {\n        modelValue: $data.formData.questionText,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.questionText = $event),\n        label: \"내용\",\n        required: \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_file_input, {\n        ref: \"fileInput\",\n        onChange: $options.onFileChange,\n        label: \"이미지 업로드\",\n        accept: \"image/*\"\n      }, null, 8 /* PROPS */, [\"onChange\"]), $data.previewImageSrc ? (_openBlock(), _createBlock(_component_v_img, {\n        key: 0,\n        src: $data.previewImageSrc,\n        \"max-width\": \"200\"\n      }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n        color: \"primary\",\n        type: \"submit\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"저장\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onSubmit\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_form","ref","onSubmit","_withModifiers","$options","submitForm","_component_v_text_field","modelValue","$data","formData","title","_cache","$event","label","required","_component_v_textarea","questionText","_component_v_file_input","onChange","onFileChange","accept","previewImageSrc","_component_v_img","key","src","_createCommentVNode","_component_v_btn","color","type","_createTextVNode","_"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/CreateQuestion.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-form ref=\"form\" @submit.prevent=\"submitForm\">\n      <v-text-field v-model=\"formData.title\" label=\"제목\" required></v-text-field>\n      <v-textarea v-model=\"formData.questionText\" label=\"내용\" required></v-textarea>\n      <v-file-input\n        ref=\"fileInput\"\n        @change=\"onFileChange\"\n        label=\"이미지 업로드\"\n        accept=\"image/*\"\n      ></v-file-input>\n      <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\"></v-img>\n      <v-btn color=\"primary\" type=\"submit\">저장</v-btn>\n    </v-form>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      formData: {\n        title: '',\n        questionText: '',\n        qImage: null, // 파일 첨부\n      },\n      previewImageSrc: null,\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      const files = event.target.files || event.dataTransfer.files;\n      if (files && files.length > 0) {\n        this.formData.qImage = files[0];\n        this.previewImage();\n      } else {\n        this.formData.qImage = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.formData.qImage) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.formData.qImage);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async submitForm() {\n      const formData = new FormData();\n      formData.append('title', this.formData.title);\n      formData.append('questionText', this.formData.questionText);\n      if (this.formData.qImage) {\n        formData.append('image', this.formData.qImage);\n      }\n\n      try {\n        const response = await axios.post(\n          `${process.env.VUE_APP_API_BASE_URL}/qna/create`,\n          formData,\n          {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n          }\n        );\n        console.log(response.data);\n        alert('질문이 성공적으로 작성되었습니다!');\n        this.resetForm();\n        this.$router.push({ name: 'QnaList' }); // 질문 목록 페이지로 이동\n      } catch (error) {\n        const errorMessage =\n          error.response && error.response.data\n            ? error.response.data.message\n            : '질문 작성에 실패했습니다.';\n        alert(errorMessage);\n        console.error('Error details:', error); // 전체 오류 출력\n      }\n    },\n    resetForm() {\n      this.formData.title = '';\n      this.formData.questionText = '';\n      this.formData.qImage = null;\n      this.previewImageSrc = null;\n      if (this.$refs.form) {\n        this.$refs.form.reset(); // 폼 초기화\n      }\n      // Removed the file input reset to avoid accessing null values\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding-top: 50px;\n}\n</style>\n"],"mappings":";;;;;;;;;uBACEA,YAAA,CAacC,sBAAA;IAdhBC,OAAA,EAAAC,QAAA,CAEI,MAWS,CAXTC,YAAA,CAWSC,iBAAA;MAXDC,GAAG,EAAC,MAAM;MAAEC,QAAM,EAF9BC,cAAA,CAEwCC,QAAA,CAAAC,UAAU;;MAFlDR,OAAA,EAAAC,QAAA,CAGM,MAA0E,CAA1EC,YAAA,CAA0EO,uBAAA;QAHhFC,UAAA,EAG6BC,KAAA,CAAAC,QAAQ,CAACC,KAAK;QAH3C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAG6BJ,KAAA,CAAAC,QAAQ,CAACC,KAAK,GAAAE,MAAA;QAAEC,KAAK,EAAC,IAAI;QAACC,QAAQ,EAAR;+CAClDf,YAAA,CAA6EgB,qBAAA;QAJnFR,UAAA,EAI2BC,KAAA,CAAAC,QAAQ,CAACO,YAAY;QAJhD,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAI2BJ,KAAA,CAAAC,QAAQ,CAACO,YAAY,GAAAJ,MAAA;QAAEC,KAAK,EAAC,IAAI;QAACC,QAAQ,EAAR;+CACvDf,YAAA,CAKgBkB,uBAAA;QAJdhB,GAAG,EAAC,WAAW;QACdiB,QAAM,EAAEd,QAAA,CAAAe,YAAY;QACrBN,KAAK,EAAC,SAAS;QACfO,MAAM,EAAC;6CAEIZ,KAAA,CAAAa,eAAe,I,cAA5B1B,YAAA,CAA6E2B,gBAAA;QAXnFC,GAAA;QAWqCC,GAAG,EAAEhB,KAAA,CAAAa,eAAe;QAAE,WAAS,EAAC;0CAXrEI,mBAAA,gBAYM1B,YAAA,CAA+C2B,gBAAA;QAAxCC,KAAK,EAAC,SAAS;QAACC,IAAI,EAAC;;QAZlC/B,OAAA,EAAAC,QAAA,CAY2C,MAAE,CAZ7C+B,gBAAA,CAY2C,IAAE,E;QAZ7CC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}