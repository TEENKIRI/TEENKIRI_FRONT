{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-60738bad\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"board-title\"\n}, \"QnA 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"번호\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"작성자\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"생성 시간\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"수정 시간\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_simple_table = _resolveComponent(\"v-simple-table\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n              color: \"primary\",\n              onClick: $options.createNewQuestion,\n              class: \"create-button\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"질문 작성하기\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_simple_table, null, {\n              default: _withCtx(() => [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, _hoisted_6, $data.userRole === 'ADMIN' ? (_openBlock(), _createElementBlock(\"th\", _hoisted_7, \"답변하기\")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, (question, index) => {\n                return _openBlock(), _createElementBlock(\"tr\", {\n                  key: question.id\n                }, [_createElementVNode(\"td\", null, _toDisplayString(index + 1 + ($data.currentPage - 1) * $data.itemsPerPage), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(question.questionUserName), 1 /* TEXT */), _createElementVNode(\"td\", {\n                  onClick: $event => $options.viewDetail(question.id),\n                  class: \"clickable\"\n                }, _toDisplayString(question.title), 9 /* TEXT, PROPS */, _hoisted_8), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(question.createdTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(question.updatedTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, [$options.canAnswerQuestion && !question.answerText ? (_openBlock(), _createBlock(_component_v_btn, {\n                  key: 0,\n                  small: \"\",\n                  onClick: $event => $options.answerQuestion(question.id),\n                  color: \"primary\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"답변하기\")]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]);\n              }), 128 /* KEYED_FRAGMENT */))])]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_actions, {\n            class: \"pagination\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, {\n              onClick: $options.goToPreviousPage,\n              disabled: $data.currentPage === 1\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Previous\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\", \"disabled\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.totalPages, page => {\n              return _openBlock(), _createBlock(_component_v_btn, {\n                key: page,\n                onClick: $event => $options.goToPage(page),\n                class: _normalizeClass([{\n                  active: $data.currentPage === page\n                }, \"pagination-page\"]),\n                text: \"\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(page), 1 /* TEXT */)]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n            }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n              onClick: $options.goToNextPage,\n              disabled: $data.currentPage === $data.totalPages\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Next\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\", \"disabled\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","key","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","_component_v_col","cols","_component_v_card","_component_v_card_title","_hoisted_1","_component_v_spacer","_component_v_btn","color","onClick","$options","createNewQuestion","_createTextVNode","_","_component_v_card_text","_component_v_simple_table","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","$data","userRole","_createElementBlock","_hoisted_7","_createCommentVNode","_Fragment","_renderList","questions","question","index","id","_toDisplayString","currentPage","itemsPerPage","questionUserName","$event","viewDetail","title","_hoisted_8","formatDate","createdTime","updatedTime","canAnswerQuestion","answerText","small","answerQuestion","_component_v_card_actions","goToPreviousPage","disabled","totalPages","page","goToPage","_normalizeClass","active","text","goToNextPage"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaList.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title>\n              <h3 class=\"board-title\">QnA 목록</h3>\n              <v-spacer></v-spacer>\n              <v-btn color=\"primary\" @click=\"createNewQuestion\" class=\"create-button\">질문 작성하기</v-btn>\n            </v-card-title>\n  \n            <v-card-text>\n              <v-simple-table>\n                <thead>\n                  <tr>\n                    <th>번호</th>\n                    <th>작성자</th>\n                    <th>제목</th>\n                    <th>생성 시간</th>\n                    <th>수정 시간</th>\n                    <th\n                    v-if=\"userRole === 'ADMIN'\" >답변하기</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(question, index) in questions\" :key=\"question.id\">\n                    <td>{{ index + 1 + (currentPage - 1) * itemsPerPage }}</td>\n                    <td>{{ question.questionUserName }}</td>\n                    <td @click=\"viewDetail(question.id)\" class=\"clickable\">{{ question.title }}</td>\n                    <td>{{ formatDate(question.createdTime) }}</td>\n                    <td>{{ formatDate(question.updatedTime) }}</td>\n                    <td>\n                      <v-btn v-if=\"canAnswerQuestion && !question.answerText\" small @click=\"answerQuestion(question.id)\" color=\"primary\">답변하기</v-btn>\n                    </td>\n                  </tr>\n                </tbody>\n              </v-simple-table>\n            </v-card-text>\n  \n            <v-card-actions class=\"pagination\">\n              <v-btn @click=\"goToPreviousPage\" :disabled=\"currentPage === 1\">Previous</v-btn>\n              <v-btn\n                v-for=\"page in totalPages\"\n                :key=\"page\"\n                @click=\"goToPage(page)\"\n                :class=\"{ active: currentPage === page }\"\n                class=\"pagination-page\"\n                text\n              >\n                {{ page }}\n              </v-btn>\n              <v-btn @click=\"goToNextPage\" :disabled=\"currentPage === totalPages\">Next</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n//   import jwt_decode from 'jwt-decode'; // Import the JWT decode library\n  \n  export default {\n    data() {\n      return {\n        questions: [],\n        currentPage: 1,\n        totalPages: 1,\n        itemsPerPage: 10,\n        userRole: '', // Store the user's role\n      };\n    },\n    created() {\n\n      this.fetchQuestions();\n      this.userRole = localStorage.getItem('role');\n\n    },\n    methods: {\n      async fetchQuestions() {\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n            params: {\n              page: this.currentPage - 1,\n              size: this.itemsPerPage,\n            }\n          });\n  \n          const result = response.data.result;\n          if (result && result.content) {\n            this.questions = result.content;\n            this.totalPages = result.totalPages;\n          } else {\n            console.error('올바르지 않은 데이터 형식입니다:', response.data);\n          }\n        } catch (error) {\n          console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n        }\n      },\n    //   fetchUserRole() {\n    //     try {\n    //     //   const token = localStorage.getItem('token');\n    //       if (token) {\n    //         const decoded = jwt_decode(token);\n    //         this.userRole = decoded.role || ''; // Assumes the role is stored as `role` in the token payload\n    //       }\n    //     } catch (error) {\n    //       console.error('토큰에서 역할을 가져오는 중 오류가 발생했습니다:', error);\n    //     }\n    //   },\n\n      formatDate(date) {\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      createNewQuestion() {\n        this.$router.push('/qna/create');\n      },\n      viewDetail(id) {\n        this.$router.push(`/qna/detail/${id}`);\n      },\n      answerQuestion(id) {\n        this.$router.push(`/qna/answer/${id}`);\n      },\n      goToPreviousPage() {\n        if (this.currentPage > 1) {\n          this.currentPage--;\n          this.fetchQuestions();\n        }\n      },\n      goToNextPage() {\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n          this.fetchQuestions();\n        }\n      },\n      goToPage(page) {\n        if (page !== this.currentPage) {\n          this.currentPage = page;\n          this.fetchQuestions();\n        }\n      },\n    },\n    computed: {\n      canAnswerQuestion() {\n        return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding-top: 20px;\n  }\n  .board-title {\n    font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n  .create-button {\n    margin: 0 auto;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: white;\n  }\n  .create-button:hover {\n    background-color: #0056b3;\n  }\n  .clickable {\n    cursor: pointer;\n    color: blue;\n    text-decoration: underline;\n  }\n  .pagination {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 20px;\n  }\n  .pagination-page {\n    margin: 0 5px;\n    cursor: pointer;\n  }\n  .pagination-page.active {\n    font-weight: bold;\n    color: blue;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}