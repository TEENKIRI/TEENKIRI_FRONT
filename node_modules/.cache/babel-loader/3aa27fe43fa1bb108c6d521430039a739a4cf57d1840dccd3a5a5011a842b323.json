{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      questionTitle: '',\n      questionText: '',\n      questionImage: null,\n      previewImageSrc: null\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      const files = event.target.files || event.dataTransfer.files;\n      if (files && files.length > 0) {\n        this.questionImage = files[0];\n        this.previewImage();\n      } else {\n        this.questionImage = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.questionImage) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.questionImage);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async submitQuestion() {\n      const formData = new FormData();\n      formData.append('title', this.questionTitle);\n      formData.append('questionText', this.questionText);\n      if (this.questionImage) {\n        formData.append('image', this.questionImage);\n      }\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/answer?${id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log(response);\n        alert('질문이 성공적으로 등록되었습니다!');\n        this.$router.push({\n          name: 'QnaList'\n        });\n      } catch (error) {\n        const errorMessage = error.response && error.response.data ? error.response.data.message : '질문 등록에 실패했습니다.';\n        alert(errorMessage);\n        console.error('Error details:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","questionTitle","questionText","questionImage","previewImageSrc","methods","onFileChange","event","files","target","dataTransfer","length","previewImage","reader","FileReader","onload","e","result","readAsDataURL","submitQuestion","formData","FormData","append","response","post","process","env","VUE_APP_API_BASE_URL","id","headers","console","log","alert","$router","push","name","error","errorMessage","message"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/CreateAnswer.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card>\n        <v-card-title>\n          <h3>QnA 질문 등록하기</h3>\n        </v-card-title>\n  \n        <v-card-text>\n          <v-form ref=\"form\" @submit.prevent=\"submitQuestion\">\n            <!-- 질문 제목 -->\n            <v-text-field\n              label=\"제목\"\n              v-model=\"questionTitle\"\n              required\n            />\n  \n            <!-- 질문 내용 -->\n            <v-textarea\n              label=\"질문 내용\"\n              v-model=\"questionText\"\n              rows=\"5\"\n              required\n            />\n  \n            <!-- 질문 이미지 (선택사항) -->\n            <v-file-input\n              ref=\"fileInput\"\n              @change=\"onFileChange\"\n              label=\"질문 이미지 (선택사항)\"\n              accept=\"image/*\"\n            />\n            <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" class=\"my-3\"/>\n  \n            <v-btn type=\"submit\" color=\"primary\" class=\"mt-3\">질문 제출</v-btn>\n          </v-form>\n        </v-card-text>\n      </v-card>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        questionTitle: '',\n        questionText: '',\n        questionImage: null,\n        previewImageSrc: null,\n      };\n    },\n    methods: {\n      onFileChange(event) {\n        const files = event.target.files || event.dataTransfer.files;\n        if (files && files.length > 0) {\n          this.questionImage = files[0];\n          this.previewImage();\n        } else {\n          this.questionImage = null;\n          this.previewImageSrc = null;\n        }\n      },\n      previewImage() {\n        if (this.questionImage) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            this.previewImageSrc = e.target.result;\n          };\n          reader.readAsDataURL(this.questionImage);\n        } else {\n          this.previewImageSrc = null;\n        }\n      },\n      async submitQuestion() {\n        const formData = new FormData();\n        formData.append('title', this.questionTitle);\n        formData.append('questionText', this.questionText);\n        if (this.questionImage) {\n          formData.append('image', this.questionImage);\n        }\n  \n        try {\n          const response = await axios.post(\n            `${process.env.VUE_APP_API_BASE_URL}/qna/answer?${id}`,\n            formData,\n            {\n              headers: {\n                'Content-Type': 'multipart/form-data',\n              },\n            }\n          );\n          console.log(response);\n          alert('질문이 성공적으로 등록되었습니다!');\n          this.$router.push({ name: 'QnaList' });\n        } catch (error) {\n          const errorMessage =\n            error.response && error.response.data\n              ? error.response.data.message\n              : '질문 등록에 실패했습니다.';\n          alert(errorMessage);\n          console.error('Error details:', error);\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 600px;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":";AAyCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,IAAI;MACnBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,KAAK,EAAE;MAClB,MAAMC,KAAI,GAAID,KAAK,CAACE,MAAM,CAACD,KAAI,IAAKD,KAAK,CAACG,YAAY,CAACF,KAAK;MAC5D,IAAIA,KAAI,IAAKA,KAAK,CAACG,MAAK,GAAI,CAAC,EAAE;QAC7B,IAAI,CAACR,aAAY,GAAIK,KAAK,CAAC,CAAC,CAAC;QAC7B,IAAI,CAACI,YAAY,CAAC,CAAC;MACrB,OAAO;QACL,IAAI,CAACT,aAAY,GAAI,IAAI;QACzB,IAAI,CAACC,eAAc,GAAI,IAAI;MAC7B;IACF,CAAC;IACDQ,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACT,aAAa,EAAE;QACtB,MAAMU,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAKC,CAAC,IAAK;UACrB,IAAI,CAACZ,eAAc,GAAIY,CAAC,CAACP,MAAM,CAACQ,MAAM;QACxC,CAAC;QACDJ,MAAM,CAACK,aAAa,CAAC,IAAI,CAACf,aAAa,CAAC;MAC1C,OAAO;QACL,IAAI,CAACC,eAAc,GAAI,IAAI;MAC7B;IACF,CAAC;IACD,MAAMe,cAAcA,CAAA,EAAG;MACrB,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACrB,aAAa,CAAC;MAC5CmB,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,IAAI,CAACpB,YAAY,CAAC;MAClD,IAAI,IAAI,CAACC,aAAa,EAAE;QACtBiB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACnB,aAAa,CAAC;MAC9C;MAEA,IAAI;QACF,MAAMoB,QAAO,GAAI,MAAMxB,KAAK,CAACyB,IAAI,CAC/B,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,eAAeC,EAAE,EAAE,EACtDR,QAAQ,EACR;UACES,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QACDC,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;QACrBS,KAAK,CAAC,oBAAoB,CAAC;QAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAU,CAAC,CAAC;MACxC,EAAE,OAAOC,KAAK,EAAE;QACd,MAAMC,YAAW,GACfD,KAAK,CAACb,QAAO,IAAKa,KAAK,CAACb,QAAQ,CAACvB,IAAG,GAChCoC,KAAK,CAACb,QAAQ,CAACvB,IAAI,CAACsC,OAAM,GAC1B,gBAAgB;QACtBN,KAAK,CAACK,YAAY,CAAC;QACnBP,OAAO,CAACM,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACxC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}