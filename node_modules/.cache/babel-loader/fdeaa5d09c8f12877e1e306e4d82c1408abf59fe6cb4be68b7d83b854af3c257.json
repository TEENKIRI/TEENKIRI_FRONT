{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UserEditPage',\n  data() {\n    return {\n      userEditInfo: {\n        nickname: '',\n        name: '',\n        email: '',\n        phone: '',\n        address: {\n          city: '',\n          street: '',\n          zipcode: ''\n        }\n      },\n      userEditReq: {\n        password: '',\n        confirmPassword: ''\n      },\n      originalUserEditInfo: null // 원래 정보를 저장\n    };\n  },\n  created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    async fetchUserInfo() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`);\n        if (response.status === 200 && response.data.result) {\n          this.userEditInfo = response.data.result;\n          this.originalUserEditInfo = {\n            ...response.data.result\n          }; // 원래 정보를 저장하는 코드(없으면 null로 바뀜)\n        } else {\n          alert('회원 정보 조회에 실패했습니다.');\n        }\n      } catch (e) {\n        alert(e.response?.data?.status_message || '회원 정보 조회 중 오류가 발생했습니다.');\n      }\n    },\n    async updateUserInfo() {\n      if (this.userEditReq.password && this.userEditReq.password !== this.userEditReq.confirmPassword) {\n        alert('비밀번호가 일치하지 않습니다.');\n        return;\n      }\n      try {\n        // 백엔드에서 처리하지 않고 프론트에서 해결\n        const updatedInfo = {\n          nickname: this.userEditInfo.nickname || this.originalUserEditInfo.nickname,\n          name: this.userEditInfo.name || this.originalUserEditInfo.name,\n          phone: this.userEditInfo.phone || this.originalUserEditInfo.phone,\n          address: {\n            city: this.userEditInfo.address.city || this.originalUserEditInfo.address.city,\n            street: this.userEditInfo.address.street || this.originalUserEditInfo.address.street,\n            zipcode: this.userEditInfo.address.zipcode || this.originalUserEditInfo.address.zipcode\n          },\n          password: this.userEditReq.password,\n          confirmPassword: this.userEditReq.confirmPassword\n        };\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`, updatedInfo);\n        if (response.status === 200) {\n          alert('회원 정보가 성공적으로 수정되었습니다.');\n        } else {\n          alert('회원 정보 수정에 실패했습니다.');\n        }\n      } catch (e) {\n        alert(e.response?.data?.status_message || '회원 정보 수정 중 오류가 발생했습니다.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userEditInfo","nickname","email","phone","address","city","street","zipcode","userEditReq","password","confirmPassword","originalUserEditInfo","created","fetchUserInfo","methods","response","get","process","env","VUE_APP_API_BASE_URL","status","result","alert","e","status_message","updateUserInfo","updatedInfo","post"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/user/UpdateUserInfo.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" sm=\"10\" md=\"8\" lg=\"7\">\n        <v-card>\n          <v-card-title class=\"text-h5 text-center\">회원 정보 수정</v-card-title>\n          <v-card-text>\n            <v-form @submit.prevent=\"updateUserInfo\">\n              <v-text-field\n                label=\"닉네임\"\n                v-model=\"userEditInfo.nickname\"\n                prepend-icon=\"mdi-account\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"이름\"\n                v-model=\"userEditInfo.name\"\n                prepend-icon=\"mdi-account-box\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"이메일\"\n                v-model=\"userEditInfo.email\"\n                prepend-icon=\"mdi-email\"\n                disabled\n              ></v-text-field>\n              <v-text-field\n                label=\"핸드폰 번호\"\n                v-model=\"userEditInfo.phone\"\n                prepend-icon=\"mdi-phone\"\n                required\n              ></v-text-field>\n\n              <!-- 주소 필드 -->\n              <v-text-field\n                label=\"주소\"\n                v-model=\"userEditInfo.address.city\"\n                prepend-icon=\"mdi-home\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"상세주소\"\n                v-model=\"userEditInfo.address.street\"\n                prepend-icon=\"mdi-home-outline\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"우편번호\"\n                v-model=\"userEditInfo.address.zipcode\"\n                prepend-icon=\"mdi-map-marker\"\n                required\n              ></v-text-field>\n\n              <v-divider class=\"my-4\"></v-divider>\n              <v-text-field\n                label=\"새 비밀번호\"\n                v-model=\"userEditReq.password\"\n                type=\"password\"\n                prepend-icon=\"mdi-lock\"\n              ></v-text-field>\n              <v-text-field\n                label=\"비밀번호 확인\"\n                v-model=\"userEditReq.confirmPassword\"\n                type=\"password\"\n                prepend-icon=\"mdi-lock-check\"\n              ></v-text-field>\n              <v-btn block type=\"submit\" color=\"primary\">회원 정보 수정</v-btn>\n            </v-form>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'UserEditPage',\n  data() {\n    return {\n      userEditInfo: {\n        nickname: '',\n        name: '',\n        email: '',\n        phone: '',\n        address: {\n          city: '',\n          street: '',\n          zipcode: ''\n        }\n      },\n      userEditReq: {\n        password: '',\n        confirmPassword: ''\n      },\n      originalUserEditInfo: null // 원래 정보를 저장\n    };\n  },\n  created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    async fetchUserInfo() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`);\n        if (response.status === 200 && response.data.result) {\n          this.userEditInfo = response.data.result;\n          this.originalUserEditInfo = { ...response.data.result }; // 원래 정보를 저장하는 코드(없으면 null로 바뀜)\n        } else {\n          alert('회원 정보 조회에 실패했습니다.');\n        }\n      } catch (e) {\n        alert(e.response?.data?.status_message || '회원 정보 조회 중 오류가 발생했습니다.');\n      }\n    },\n    async updateUserInfo() {\n      if (this.userEditReq.password && this.userEditReq.password !== this.userEditReq.confirmPassword) {\n        alert('비밀번호가 일치하지 않습니다.');\n        return;\n      }\n\n      try {\n        // 백엔드에서 처리하지 않고 프론트에서 해결\n        const updatedInfo = {\n          nickname: this.userEditInfo.nickname || this.originalUserEditInfo.nickname,\n          name: this.userEditInfo.name || this.originalUserEditInfo.name,\n          phone: this.userEditInfo.phone || this.originalUserEditInfo.phone,\n          address: {\n            city: this.userEditInfo.address.city || this.originalUserEditInfo.address.city,\n            street: this.userEditInfo.address.street || this.originalUserEditInfo.address.street,\n            zipcode: this.userEditInfo.address.zipcode || this.originalUserEditInfo.address.zipcode\n          },\n          password: this.userEditReq.password,\n          confirmPassword: this.userEditReq.confirmPassword\n        };\n\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`, updatedInfo);\n        if (response.status === 200) {\n          alert('회원 정보가 성공적으로 수정되었습니다.');\n        } else {\n          alert('회원 정보 수정에 실패했습니다.');\n        }\n      } catch (e) {\n        alert(e.response?.data?.status_message || '회원 정보 수정 중 오류가 발생했습니다.');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 900px;\n  margin: auto;\n  padding: 20px;\n}\n\n.v-card {\n  border-radius: 10px;\n}\n\n.v-text-field {\n  margin-bottom: 20px;\n}\n\n.v-btn {\n  font-weight: bold;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}