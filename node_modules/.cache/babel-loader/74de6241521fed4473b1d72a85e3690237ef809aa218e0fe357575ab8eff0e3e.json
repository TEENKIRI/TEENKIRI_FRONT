{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'FindIdPage',\n  data() {\n    return {\n      name: '',\n      phone: '',\n      userEmail: '' // 이메일 주소를 저장할 데이터\n    };\n  },\n  methods: {\n    async findEmail() {\n      try {\n        const body = {\n          name: this.name,\n          phone: this.phone\n        };\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/find-id`, body);\n\n        // 서버 응답에서 이메일을 추출\n        this.userEmail = response.data; // 마스킹된 이메일을 저장\n        alert('이메일 찾기 요청이 완료되었습니다. 결과를 확인해 주세요.');\n        console.log(response.data);\n      } catch (e) {\n        // 오류 메시지 처리\n        let error_message = '오류가 발생했습니다.';\n        alert('이메일 찾기 실패: ' + error_message);\n        console.error('Error details:', e);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","phone","userEmail","methods","findEmail","body","response","post","process","env","VUE_APP_API_BASE_URL","alert","console","log","e","error_message","error"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/user/FindIdPage.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row justify=\"center\">\n        <v-col cols=\"12\" sm=\"6\" md=\"8\">\n          <v-card>\n            <v-card-title class=\"text-h5 text-center\">이메일 찾기</v-card-title>\n            <v-card-text>\n              <v-form @submit.prevent=\"findEmail\">\n                <v-text-field\n                  label=\"이름\"\n                  v-model=\"name\"\n                  required\n                  prepend-icon=\"mdi-account\"\n                ></v-text-field>\n                <v-text-field\n                  label=\"전화번호\"\n                  v-model=\"phone\"\n                  type=\"tel\"\n                  required\n                  prepend-icon=\"mdi-phone\"\n                ></v-text-field>\n                <v-btn block type=\"submit\" color=\"primary\">이메일 찾기</v-btn>\n                <v-divider class=\"my-4\"></v-divider>\n                <v-btn block @click=\"$router.push('/login')\">로그인 페이지로 돌아가기</v-btn>\n              </v-form>\n              <v-alert\n                v-if=\"userEmail\"\n                type=\"success\"\n                class=\"mt-4\"\n                border=\"left\"\n              >\n                찾으신 이메일 주소는: {{ userEmail.result }}\n              </v-alert>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'FindIdPage',\n    data() {\n      return {\n        name: '',\n        phone: '',\n        userEmail: '', // 이메일 주소를 저장할 데이터\n      };\n    },\n    methods: {\n      async findEmail() {\n        try {\n          const body = {\n            name: this.name,\n            phone: this.phone\n          };\n          const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/find-id`, body);\n  \n          // 서버 응답에서 이메일을 추출\n          this.userEmail = response.data; // 마스킹된 이메일을 저장\n          alert('이메일 찾기 요청이 완료되었습니다. 결과를 확인해 주세요.');\n          console.log(response.data);\n        } catch (e) {\n          // 오류 메시지 처리\n          let error_message = '오류가 발생했습니다.';\n\n          alert('이메일 찾기 실패: ' + error_message);\n          console.error('Error details:', e);\n        }\n      },\n    },\n  };\n  </script>\n  "],"mappings":"AAyCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLD,IAAI,EAAE,EAAE;MACRE,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,IAAG,GAAI;UACXN,IAAI,EAAE,IAAI,CAACA,IAAI;UACfE,KAAK,EAAE,IAAI,CAACA;QACd,CAAC;QACD,MAAMK,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,eAAe,EAAEL,IAAI,CAAC;;QAE3F;QACA,IAAI,CAACH,SAAQ,GAAII,QAAQ,CAACN,IAAI,EAAE;QAChCW,KAAK,CAAC,kCAAkC,CAAC;QACzCC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACN,IAAI,CAAC;MAC5B,EAAE,OAAOc,CAAC,EAAE;QACV;QACA,IAAIC,aAAY,GAAI,aAAa;QAEjCJ,KAAK,CAAC,aAAY,GAAII,aAAa,CAAC;QACpCH,OAAO,CAACI,KAAK,CAAC,gBAAgB,EAAEF,CAAC,CAAC;MACpC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}