{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_form, {\n      onSubmit: _withModifiers($options.updateAnswer, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_textarea, {\n        label: \"답변 내용\",\n        modelValue: $data.answer.answerText,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.answer.answerText = $event),\n        required: \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 기존 이미지 미리보기 \"), !$data.previewImageSrc && $data.answer.aImage ? (_openBlock(), _createBlock(_component_v_img, {\n        key: 0,\n        src: $options.getExistingImageUrl(),\n        \"max-width\": \"200\",\n        class: \"my-3\"\n      }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 새 이미지 선택 \"), _createVNode(_component_v_file_input, {\n        label: \"이미지 선택\",\n        onChange: $options.onFileChange,\n        accept: \"image/*\"\n      }, null, 8 /* PROPS */, [\"onChange\"]), _createCommentVNode(\" 새 이미지 미리보기 \"), $data.previewImageSrc ? (_openBlock(), _createBlock(_component_v_img, {\n        key: 1,\n        src: $data.previewImageSrc,\n        \"max-width\": \"200\",\n        class: \"my-3\"\n      }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n        type: \"submit\",\n        color: \"primary\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"수정 완료\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_btn, {\n        color: \"secondary\",\n        onClick: $options.goBack\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"취소\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onSubmit\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","class","default","_withCtx","_createVNode","_component_v_form","onSubmit","_withModifiers","$options","updateAnswer","_component_v_textarea","label","modelValue","$data","answer","answerText","_cache","$event","required","_createCommentVNode","previewImageSrc","aImage","_component_v_img","key","src","getExistingImageUrl","_component_v_file_input","onChange","onFileChange","accept","_component_v_btn","type","color","_createTextVNode","_","onClick","goBack"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/UpdateAnswer.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-form @submit.prevent=\"updateAnswer\">\n      <v-textarea\n        label=\"답변 내용\"\n        v-model=\"answer.answerText\"\n        required\n      ></v-textarea>\n\n      <!-- 기존 이미지 미리보기 -->\n      <v-img v-if=\"!previewImageSrc && answer.aImage\" :src=\"getExistingImageUrl()\" max-width=\"200\" class=\"my-3\"/>\n\n      <!-- 새 이미지 선택 -->\n      <v-file-input\n        label=\"이미지 선택\"\n        @change=\"onFileChange\"\n        accept=\"image/*\"\n      ></v-file-input>\n\n      <!-- 새 이미지 미리보기 -->\n      <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" class=\"my-3\"/>\n\n      <v-btn type=\"submit\" color=\"primary\">수정 완료</v-btn>\n      <v-btn color=\"secondary\" @click=\"goBack\">취소</v-btn>\n    </v-form>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      answer: {\n        answerText: '',\n        aImage: null, // 기존 이미지 경로\n      },\n      previewImageSrc: null, // 새로 선택한 이미지 미리보기\n    };\n  },\n  created() {\n    this.fetchAnswerDetail();\n  },\n  methods: {\n    async fetchAnswerDetail() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.answer = response.data.result;\n        // 기존 이미지가 있으면 미리보기 설정\n        if (this.answer.aImage) {\n          this.previewImageSrc = `${process.env.VUE_APP_API_BASE_URL}/${this.answer.aImage}`;\n        }\n      } catch (error) {\n        this.$router.push('/qna/list');\n      }\n    },\n    getExistingImageUrl() {\n      // 기존 이미지의 절대 경로를 반환하는 함수\n      return `${process.env.VUE_APP_API_BASE_URL}/${this.answer.aImage}`;\n    },\n    onFileChange(event) {\n      const files = event?.target?.files || event?.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.answer.aImage = files[0];\n        this.previewImage(); // 새 이미지로 미리보기 업데이트\n      } else {\n        this.answer.aImage = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.answer.aImage) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.answer.aImage);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async updateAnswer() {\n      const formData = new FormData();\n      formData.append('answerText', this.answer.answerText);\n      // 새 이미지가 선택된 경우에만 FormData에 추가\n      if (this.answer.aImage instanceof File) {\n        formData.append('image', this.answer.aImage);\n      }\n\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/update/answer/${this.$route.params.id}`, formData);\n        this.$router.push(`/qna/detail/${this.$route.params.id}`);\n      } catch (error) {\n        alert('답변 수정에 실패했습니다.');\n      }\n    },\n    goBack() {\n      const questionId = this.$route.params.id;\n      this.$router.push(`/qna/detail/${questionId}`);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n"],"mappings":";;;;;;;;uBACEA,YAAA,CAwBcC,sBAAA;IAxBDC,KAAK,EAAC;EAAM;IAD3BC,OAAA,EAAAC,QAAA,CAEI,MAsBS,CAtBTC,YAAA,CAsBSC,iBAAA;MAtBAC,QAAM,EAFnBC,cAAA,CAE6BC,QAAA,CAAAC,YAAY;;MAFzCP,OAAA,EAAAC,QAAA,CAGM,MAIc,CAJdC,YAAA,CAIcM,qBAAA;QAHZC,KAAK,EAAC,OAAO;QAJrBC,UAAA,EAKiBC,KAAA,CAAAC,MAAM,CAACC,UAAU;QALlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKiBJ,KAAA,CAAAC,MAAM,CAACC,UAAU,GAAAE,MAAA;QAC1BC,QAAQ,EAAR;+CAGFC,mBAAA,iBAAoB,E,CACNN,KAAA,CAAAO,eAAe,IAAIP,KAAA,CAAAC,MAAM,CAACO,MAAM,I,cAA9CtB,YAAA,CAA2GuB,gBAAA;QAVjHC,GAAA;QAUuDC,GAAG,EAAEhB,QAAA,CAAAiB,mBAAmB;QAAI,WAAS,EAAC,KAAK;QAACxB,KAAK,EAAC;0CAVzGkB,mBAAA,gBAYMA,mBAAA,cAAiB,EACjBf,YAAA,CAIgBsB,uBAAA;QAHdf,KAAK,EAAC,QAAQ;QACbgB,QAAM,EAAEnB,QAAA,CAAAoB,YAAY;QACrBC,MAAM,EAAC;6CAGTV,mBAAA,gBAAmB,EACNN,KAAA,CAAAO,eAAe,I,cAA5BrB,YAAA,CAAmFuB,gBAAA;QApBzFC,GAAA;QAoBqCC,GAAG,EAAEX,KAAA,CAAAO,eAAe;QAAE,WAAS,EAAC,KAAK;QAACnB,KAAK,EAAC;0CApBjFkB,mBAAA,gBAsBMf,YAAA,CAAkD0B,gBAAA;QAA3CC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;;QAtBjC9B,OAAA,EAAAC,QAAA,CAsB2C,MAAK,CAtBhD8B,gBAAA,CAsB2C,OAAK,E;QAtBhDC,CAAA;UAuBM9B,YAAA,CAAmD0B,gBAAA;QAA5CE,KAAK,EAAC,WAAW;QAAEG,OAAK,EAAE3B,QAAA,CAAA4B;;QAvBvClC,OAAA,EAAAC,QAAA,CAuB+C,MAAE,CAvBjD8B,gBAAA,CAuB+C,IAAE,E;QAvBjDC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}