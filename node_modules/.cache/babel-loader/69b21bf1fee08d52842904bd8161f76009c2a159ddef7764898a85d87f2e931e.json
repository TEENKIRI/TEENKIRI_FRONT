{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_toolbar, {\n          flat: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n            default: _withCtx(() => [_createTextVNode(\"질문 목록\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_divider, {\n            class: \"mx-4\",\n            inset: \"\",\n            vertical: \"\"\n          }), _createVNode(_component_v_spacer), $data.isAdmin ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 0,\n            onClick: $options.createNewQuestion,\n            class: \"create-button\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"질문 작성\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n            onClick: $options.fetchQuestions\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"새로고침\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_data_table, {\n          headers: $data.headers,\n          items: $data.questions,\n          loading: $data.loading,\n          \"items-per-page\": 10,\n          class: \"elevation-1\"\n        }, {\n          \"item.actions\": _withCtx(({\n            item\n          }) => [$data.isAdmin ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 0,\n            onClick: $event => $options.updateItem(item.id)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"수정\")]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), $data.isAdmin ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 1,\n            onClick: $event => $options.deleteItem(item.id)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"삭제\")]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"headers\", \"items\", \"loading\"]), _createVNode(_component_v_pagination, {\n          modelValue: $data.currentPage,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentPage = $event),\n          length: $data.totalPages,\n          onInput: $options.fetchQuestions\n        }, null, 8 /* PROPS */, [\"modelValue\", \"length\", \"onInput\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","_component_v_col","cols","_component_v_toolbar","flat","_component_v_toolbar_title","_createTextVNode","_","_component_v_divider","class","inset","vertical","_component_v_spacer","$data","isAdmin","_component_v_btn","key","onClick","$options","createNewQuestion","_createCommentVNode","fetchQuestions","_component_v_data_table","headers","items","questions","loading","item","$event","updateItem","id","deleteItem","_component_v_pagination","modelValue","currentPage","_cache","length","totalPages","onInput"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-toolbar flat>\n          <v-toolbar-title>질문 목록</v-toolbar-title>\n          <v-divider class=\"mx-4\" inset vertical></v-divider>\n          <v-spacer></v-spacer>\n          <v-btn v-if=\"isAdmin\" @click=\"createNewQuestion\" class=\"create-button\">질문 작성</v-btn>\n          <v-btn @click=\"fetchQuestions\">새로고침</v-btn>\n        </v-toolbar>\n\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"questions\"\n          :loading=\"loading\"\n          :items-per-page=\"10\"\n          class=\"elevation-1\"\n        >\n          <template v-slot:item.actions=\"{ item }\">\n            <v-btn v-if=\"isAdmin\" @click=\"updateItem(item.id)\">수정</v-btn>\n            <v-btn v-if=\"isAdmin\" @click=\"deleteItem(item.id)\">삭제</v-btn>\n          </template>\n        </v-data-table>\n\n        <v-pagination\n          v-model=\"currentPage\"\n          :length=\"totalPages\"\n          @input=\"fetchQuestions\"\n        ></v-pagination>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      questions: [],\n      totalQuestions: 0,\n      loading: false,\n      headers: [\n        { text: '번호', value: 'id' },\n        { text: '제목', value: 'title' },\n        { text: '작성자', value: 'questionUserName' },\n        { text: '작성 시간', value: 'createdTime' },\n        { text: '답변', value: 'answerText' },\n        { text: '관리', value: 'actions', sortable: false }\n      ],\n      currentPage: 1,\n      totalPages: 1,\n      isAdmin: false,\n    };\n  },\n  created() {\n    this.checkAdminRole();\n    this.fetchQuestions();\n  },\n  methods: {\n    checkAdminRole() {\n      const role = localStorage.getItem('role');\n      this.isAdmin = role === 'ADMIN';\n    },\n    async fetchQuestions() {\n      this.loading = true;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: 10,\n          }\n        });\n        const data = response.data.data;\n        this.questions = data.content;\n        this.totalQuestions = data.totalElements;\n        this.totalPages = data.totalPages;\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n        alert('질문 목록을 불러오는 데 실패했습니다.');\n      } finally {\n        this.loading = false;\n      }\n    },\n    goToDetail(id) {\n      this.$router.push({ name: 'QnaDetail', params: { id } });\n    },\n    createNewQuestion() {\n      this.$router.push({ name: 'QnaCreate' });\n    },\n    updateItem(id) {\n      this.$router.push({ name: 'QnaUpdate', params: { id } });\n    },\n    async deleteItem(id) {\n      try {\n        const confirmed = confirm('이 질문을 삭제하시겠습니까?');\n        if (confirmed) {\n          await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${id}`);\n          alert('질문이 삭제되었습니다.');\n          this.fetchQuestions();\n        }\n      } catch (error) {\n        console.error('질문을 삭제하는 중 오류가 발생했습니다:', error);\n        alert('질문 삭제에 실패했습니다.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-top: 50px;\n}\n\n.create-button {\n  background-color: #007bff;\n  color: white;\n  margin-right: 10px;\n}\n.create-button:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;uBACEA,YAAA,CA+BcC,sBAAA;IAhChBC,OAAA,EAAAC,QAAA,CAEI,MA6BQ,CA7BRC,YAAA,CA6BQC,gBAAA;MA/BZH,OAAA,EAAAC,QAAA,CAGM,MA2BQ,CA3BRC,YAAA,CA2BQE,gBAAA;QA3BDC,IAAI,EAAC;MAAI;QAHtBL,OAAA,EAAAC,QAAA,CAIQ,MAMY,CANZC,YAAA,CAMYI,oBAAA;UANDC,IAAI,EAAJ;QAAI;UAJvBP,OAAA,EAAAC,QAAA,CAKU,MAAwC,CAAxCC,YAAA,CAAwCM,0BAAA;YALlDR,OAAA,EAAAC,QAAA,CAK2B,MAAK,CALhCQ,gBAAA,CAK2B,OAAK,E;YALhCC,CAAA;cAMUR,YAAA,CAAmDS,oBAAA;YAAxCC,KAAK,EAAC,MAAM;YAACC,KAAK,EAAL,EAAK;YAACC,QAAQ,EAAR;cAC9BZ,YAAA,CAAqBa,mBAAA,GACRC,KAAA,CAAAC,OAAO,I,cAApBnB,YAAA,CAAoFoB,gBAAA;YAR9FC,GAAA;YAQiCC,OAAK,EAAEC,QAAA,CAAAC,iBAAiB;YAAEV,KAAK,EAAC;;YARjEZ,OAAA,EAAAC,QAAA,CAQiF,MAAK,CARtFQ,gBAAA,CAQiF,OAAK,E;YARtFC,CAAA;4CAAAa,mBAAA,gBASUrB,YAAA,CAA2CgB,gBAAA;YAAnCE,OAAK,EAAEC,QAAA,CAAAG;UAAc;YATvCxB,OAAA,EAAAC,QAAA,CASyC,MAAI,CAT7CQ,gBAAA,CASyC,MAAI,E;YAT7CC,CAAA;;UAAAA,CAAA;YAYQR,YAAA,CAWeuB,uBAAA;UAVZC,OAAO,EAAEV,KAAA,CAAAU,OAAO;UAChBC,KAAK,EAAEX,KAAA,CAAAY,SAAS;UAChBC,OAAO,EAAEb,KAAA,CAAAa,OAAO;UAChB,gBAAc,EAAE,EAAE;UACnBjB,KAAK,EAAC;;UAEW,cAAY,EAAAX,QAAA,CAC3B,CAA6D;YAD9B6B;UAAI,OACtBd,KAAA,CAAAC,OAAO,I,cAApBnB,YAAA,CAA6DoB,gBAAA;YApBzEC,GAAA;YAoBmCC,OAAK,EAAAW,MAAA,IAAEV,QAAA,CAAAW,UAAU,CAACF,IAAI,CAACG,EAAE;;YApB5DjC,OAAA,EAAAC,QAAA,CAoB+D,MAAE,CApBjEQ,gBAAA,CAoB+D,IAAE,E;YApBjEC,CAAA;8DAAAa,mBAAA,gBAqByBP,KAAA,CAAAC,OAAO,I,cAApBnB,YAAA,CAA6DoB,gBAAA;YArBzEC,GAAA;YAqBmCC,OAAK,EAAAW,MAAA,IAAEV,QAAA,CAAAa,UAAU,CAACJ,IAAI,CAACG,EAAE;;YArB5DjC,OAAA,EAAAC,QAAA,CAqB+D,MAAE,CArBjEQ,gBAAA,CAqB+D,IAAE,E;YArBjEC,CAAA;8DAAAa,mBAAA,e;UAAAb,CAAA;4DAyBQR,YAAA,CAIgBiC,uBAAA;UA7BxBC,UAAA,EA0BmBpB,KAAA,CAAAqB,WAAW;UA1B9B,uBAAAC,MAAA,QAAAA,MAAA,MAAAP,MAAA,IA0BmBf,KAAA,CAAAqB,WAAW,GAAAN,MAAA;UACnBQ,MAAM,EAAEvB,KAAA,CAAAwB,UAAU;UAClBC,OAAK,EAAEpB,QAAA,CAAAG;;QA5BlBd,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}