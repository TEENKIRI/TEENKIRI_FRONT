{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a09f8938\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"text-h5 font-weight-bold\"\n};\nconst _hoisted_2 = {\n  class: \"info\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"작성자:\"), /*#__PURE__*/_createTextVNode(\" 관리자\")], -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"작성일:\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"댓글\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item_subtitle = _resolveComponent(\"v-list-item-subtitle\");\n  const _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_list_item_action = _resolveComponent(\"v-list-item-action\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_alert = _resolveComponent(\"v-alert\");\n  const _component_v_progress_circular = _resolveComponent(\"v-progress-circular\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_ReportCreate = _resolveComponent(\"ReportCreate\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [$data.post ? (_openBlock(), _createBlock(_component_v_card, {\n      key: 0,\n      class: \"pa-5\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 제목 및 버튼들 \"), _createVNode(_component_v_card_title, {\n        class: \"d-flex justify-space-between align-center\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"h2\", _hoisted_1, _toDisplayString($data.post.title), 1 /* TEXT */), _createElementVNode(\"div\", null, [$options.canEditPost ? (_openBlock(), _createBlock(_component_v_btn, {\n          key: 0,\n          class: \"btn_solid mr-2\",\n          onClick: $options.editPost\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"수정\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), $options.canDeletePost ? (_openBlock(), _createBlock(_component_v_btn, {\n          key: 1,\n          class: \"btn_del mr-2\",\n          onClick: $options.confirmDeletePost\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"삭제\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), $data.isFreeBoard ? (_openBlock(), _createBlock(_component_v_btn, {\n          key: 2,\n          class: \"btn_alert mr-2\",\n          onClick: $options.openPostReportModal\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"신고하기\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 본문 내용 \"), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, {\n            cols: \"12\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"ul\", _hoisted_2, [_hoisted_3, _createElementVNode(\"li\", null, [_hoisted_4, _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.post.createdTime)), 1 /* TEXT */)])]), $data.post.imageUrl ? (_openBlock(), _createBlock(_component_v_img, {\n              key: 0,\n              src: $data.post.imageUrl,\n              alt: \"Post Image\",\n              \"max-width\": \"400\",\n              class: \"my-3\"\n            }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n              innerHTML: $data.post.content,\n              class: \"text-body-1 bodyTxt\"\n            }, null, 8 /* PROPS */, _hoisted_5)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 댓글 섹션 \"), $data.isFreeBoard ? (_openBlock(), _createBlock(_component_v_row, {\n        key: 0\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_col, {\n          cols: \"12\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_divider, {\n            class: \"my-3\"\n          }), _hoisted_6, _createVNode(_component_v_list, null, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n              return _openBlock(), _createBlock(_component_v_list_item, {\n                key: comment.id\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                    default: _withCtx(() => [_createTextVNode(_toDisplayString(comment.nickname) + \" (\" + _toDisplayString($options.formatDate(comment.createdTime)) + \")\", 1 /* TEXT */)]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_list_item_subtitle, null, {\n                    default: _withCtx(() => [_createTextVNode(_toDisplayString(comment.content), 1 /* TEXT */)]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), $data.isAdmin || comment.user_id === parseInt($data.userId, 10) ? (_openBlock(), _createBlock(_component_v_list_item_action, {\n                  key: 0\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_btn, {\n                    icon: \"\",\n                    onClick: $event => $options.deleteComment(comment.id)\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_icon, {\n                      class: \"btn_del\"\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(\"mdi-delete\")]),\n                      _: 1 /* STABLE */\n                    })]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_list_item_action, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_btn, {\n                    icon: \"\",\n                    onClick: $event => $options.openCommentReportModal(comment)\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_icon, {\n                      class: \"btn_alert\"\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(\"mdi-alert-circle-outline\")]),\n                      _: 1 /* STABLE */\n                    })]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */))]),\n            _: 1 /* STABLE */\n          }), $data.isLoggedIn ? (_openBlock(), _createBlock(_component_v_form, {\n            key: 0,\n            onSubmit: _withModifiers($options.submitComment, [\"prevent\"])\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_textarea, {\n              label: \"댓글 작성\",\n              modelValue: $data.newCommentContent,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCommentContent = $event),\n              required: \"\",\n              outlined: \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_btn, {\n              type: \"submit\",\n              class: \"mt-2 btn_comment_ok\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"댓글 등록\")]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onSubmit\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 액션 버튼들 \"), _createVNode(_component_v_card_actions, {\n        class: \"d-flex justify-end\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          class: \"mr-2 btn_solid\",\n          onClick: $options.goBack\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"목록으로 돌아가기\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : $data.error ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createCommentVNode(\" 에러 및 로딩 상태 \"), _createVNode(_component_v_alert, {\n      type: \"error\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.error), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createBlock(_component_v_progress_circular, {\n      key: 2,\n      indeterminate: \"\",\n      color: \"primary\"\n    })), _createCommentVNode(\" 게시글 삭제 확인 다이얼로그 \"), _createVNode(_component_v_dialog, {\n      modelValue: $data.deleteDialog,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.deleteDialog = $event),\n      \"max-width\": \"500px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card, null, {\n        default: _withCtx(() => [_createVNode(_component_v_card_title, {\n          class: \"headline\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"게시글 삭제\")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_createTextVNode(\"게시글을 정말 삭제하시겠습니까?\")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_actions, null, {\n          default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n            color: \"primary\",\n            text: \"\",\n            onClick: _cache[1] || (_cache[1] = $event => $data.deleteDialog = false)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"취소\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_btn, {\n            class: \"btn_del\",\n            text: \"\",\n            onClick: $options.deletePost\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"삭제\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 신고 모달 창 \"), $data.showReportModal ? (_openBlock(), _createBlock(_component_ReportCreate, {\n      key: 3,\n      postId: $data.reportData.postId,\n      postTitle: $data.reportData.postTitle,\n      postContent: $data.reportData.postContent,\n      authorEmail: $data.reportData.authorEmail,\n      postCategory: $data.reportData.postCategory,\n      commentId: $data.reportData.commentId,\n      commentContent: $data.reportData.commentContent,\n      commentAuthor: $data.reportData.commentAuthor,\n      onClose: $options.closeReportModal\n    }, null, 8 /* PROPS */, [\"postId\", \"postTitle\", \"postContent\", \"authorEmail\", \"postCategory\", \"commentId\", \"commentContent\", \"commentAuthor\", \"onClose\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createElementVNode","_createTextVNode","_createBlock","_component_v_container","default","_withCtx","$data","post","_component_v_card","key","_createCommentVNode","_createVNode","_component_v_card_title","_hoisted_1","_toDisplayString","title","$options","canEditPost","_component_v_btn","onClick","editPost","_","canDeletePost","confirmDeletePost","isFreeBoard","openPostReportModal","_component_v_card_text","_component_v_row","_component_v_col","cols","_hoisted_2","_hoisted_3","_hoisted_4","formatDate","createdTime","imageUrl","_component_v_img","src","alt","innerHTML","content","_hoisted_5","_component_v_divider","_hoisted_6","_component_v_list","_createElementBlock","_Fragment","_renderList","comments","comment","_component_v_list_item","id","_component_v_list_item_content","_component_v_list_item_title","nickname","_component_v_list_item_subtitle","isAdmin","user_id","parseInt","userId","_component_v_list_item_action","icon","$event","deleteComment","_component_v_icon","openCommentReportModal","isLoggedIn","_component_v_form","onSubmit","_withModifiers","submitComment","_component_v_textarea","label","modelValue","newCommentContent","_cache","required","outlined","type","_component_v_card_actions","goBack","error","_component_v_alert","_component_v_progress_circular","indeterminate","color","_component_v_dialog","deleteDialog","_component_v_spacer","text","deletePost","showReportModal","_component_ReportCreate","postId","reportData","postTitle","postContent","authorEmail","postCategory","commentId","commentContent","commentAuthor","onClose","closeReportModal"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/board/BoardDetail.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card v-if=\"post\" class=\"pa-5\">\n      <!-- 제목 및 버튼들 -->\n      <v-card-title class=\"d-flex justify-space-between align-center\">\n        <h2 class=\"text-h5 font-weight-bold\">{{ post.title }}</h2>\n        <div>\n          <v-btn v-if=\"canEditPost\" class=\"btn_solid mr-2\" @click=\"editPost\">수정</v-btn>\n          <v-btn v-if=\"canDeletePost\" class=\"btn_del mr-2\" @click=\"confirmDeletePost\">삭제</v-btn>\n          <v-btn v-if=\"isFreeBoard\" class=\"btn_alert mr-2\" @click=\"openPostReportModal\">신고하기</v-btn>\n        </div>\n      </v-card-title>\n\n      <!-- 본문 내용 -->\n      <v-card-text>\n        <v-row>\n          <v-col cols=\"12\">\n            <ul class=\"info\">\n              <li><strong>작성자:</strong> 관리자</li>\n              <li><strong>작성일:</strong> {{ formatDate(post.createdTime) }}</li>\n            </ul>\n            <v-img v-if=\"post.imageUrl\" :src=\"post.imageUrl\" alt=\"Post Image\" max-width=\"400\" class=\"my-3\"/>\n            <div v-html=\"post.content\" class=\"text-body-1 bodyTxt\"></div>\n          </v-col>\n        </v-row>\n      </v-card-text>\n\n      <!-- 댓글 섹션 -->\n      <v-row v-if=\"isFreeBoard\">\n        <v-col cols=\"12\">\n          <v-divider class=\"my-3\"></v-divider>\n          <h4>댓글</h4>\n          <v-list>\n            <v-list-item v-for=\"comment in comments\" :key=\"comment.id\">\n              <v-list-item-content>\n                <v-list-item-title>{{ comment.nickname }} ({{ formatDate(comment.createdTime) }})</v-list-item-title>\n                <v-list-item-subtitle>{{ comment.content }}</v-list-item-subtitle>\n              </v-list-item-content>\n              <v-list-item-action v-if=\"isAdmin || comment.user_id === parseInt(userId, 10)\">\n                <v-btn icon @click=\"deleteComment(comment.id)\">\n                  <v-icon class=\"btn_del\">mdi-delete</v-icon>\n                </v-btn>\n              </v-list-item-action>\n              <v-list-item-action>\n                <v-btn icon @click=\"openCommentReportModal(comment)\">\n                  <v-icon class=\"btn_alert\">mdi-alert-circle-outline</v-icon>\n                </v-btn>\n              </v-list-item-action>\n            </v-list-item>\n          </v-list>\n\n          <v-form v-if=\"isLoggedIn\" @submit.prevent=\"submitComment\">\n            <v-textarea label=\"댓글 작성\" v-model=\"newCommentContent\" required outlined />\n            <v-btn type=\"submit\" class=\"mt-2 btn_comment_ok\">댓글 등록</v-btn>\n          </v-form>\n        </v-col>\n      </v-row>\n\n      <!-- 액션 버튼들 -->\n      <v-card-actions class=\"d-flex justify-end\">\n        <v-btn class=\"mr-2 btn_solid\" @click=\"goBack\">목록으로 돌아가기</v-btn>\n      </v-card-actions>\n    </v-card>\n\n    <!-- 에러 및 로딩 상태 -->\n    <v-alert type=\"error\" v-else-if=\"error\">{{ error }}</v-alert>\n    <v-progress-circular v-else indeterminate color=\"primary\"></v-progress-circular>\n\n    <!-- 게시글 삭제 확인 다이얼로그 -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title class=\"headline\">게시글 삭제</v-card-title>\n        <v-card-text>게시글을 정말 삭제하시겠습니까?</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"deleteDialog = false\">취소</v-btn>\n          <v-btn class=\"btn_del\" text @click=\"deletePost\">삭제</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- 신고 모달 창 -->\n    <ReportCreate \n      v-if=\"showReportModal\" \n      :postId=\"reportData.postId\" \n      :postTitle=\"reportData.postTitle\" \n      :postContent=\"reportData.postContent\" \n      :authorEmail=\"reportData.authorEmail\" \n      :postCategory=\"reportData.postCategory\" \n      :commentId=\"reportData.commentId\" \n      :commentContent=\"reportData.commentContent\" \n      :commentAuthor=\"reportData.commentAuthor\" \n      @close=\"closeReportModal\" \n    />\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport ReportCreate from '../report/ReportCreate.vue';\n\nexport default {\n  components: {\n    ReportCreate\n  },\n  data() {\n    return {\n      post: null,\n      isAdmin: false,\n      comments: [],\n      newCommentContent: '',\n      isLoggedIn: false,\n      isFreeBoard: false,\n      showReportModal: false,\n      reportData: {},\n      userId: localStorage.getItem('userId'),\n      deleteDialog: false,\n      error: null,\n      userEmail: '',\n    };\n  },\n  computed: {\n    canEditPost() {\n      return this.isAdmin || (this.isFreeBoard && this.post && this.post.userEmail === this.userEmail);\n    },\n    canDeletePost() {\n      return this.isAdmin || (this.isFreeBoard && this.post && this.post.userEmail === this.userEmail);\n    }\n  },\n  created() {\n    this.decodeToken();\n    this.checkAdminRole();\n    this.checkLoginStatus();\n    this.checkIfFreeBoard();\n    this.fetchPostDetail();\n\n    if (this.isFreeBoard) {\n      this.fetchComments();\n    }\n  },\n  methods: {\n    decodeToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const decoded = this.parseJwt(token);\n        this.userEmail = decoded.sub;\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(\n          atob(base64)\n            .split('')\n            .map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n        );\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    },\n    checkAdminRole() {\n      const role = localStorage.getItem('role');\n      this.isAdmin = role === 'ADMIN';\n    },\n    checkLoginStatus() {\n      const token = localStorage.getItem('token');\n      this.isLoggedIn = !!token;\n    },\n    checkIfFreeBoard() {\n      const category = this.$route.params.category;\n      this.isFreeBoard = category === 'post';\n    },\n    async fetchPostDetail() {\n      try {\n        const postId = this.$route.params.id;\n        const category = this.$route.params.category;\n        let apiUrl;\n\n        if (category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/detail/${postId}`;\n        } else if (category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/detail/${postId}`;\n        } else if (category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/detail/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n\n        const response = await axios.get(apiUrl);\n        this.post = response.data.result;\n      } catch (error) {\n        console.error('게시글을 불러오는 데 실패했습니다:', error);\n        alert('게시글을 불러오는 데 실패했습니다.');\n      }\n    },\n    async fetchComments() {\n      try {\n        const postId = this.$route.params.id;\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/post/${postId}`);\n        this.comments = response.data.result;\n      } catch (error) {\n        console.error('댓글을 불러오는 데 실패했습니다:', error);\n      }\n    },\n    async submitComment() {\n      try {\n        if (!this.newCommentContent.trim()) {\n          alert('댓글 내용을 입력하세요.');\n          return;\n        }\n\n        const postId = this.$route.params.id;\n        const userId = localStorage.getItem('userId');\n        const newComment = {\n          content: this.newCommentContent,\n          postId: postId,\n          userId: userId\n        };\n\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, newComment);\n        this.newCommentContent = '';\n        this.fetchComments();\n      } catch (error) {\n        console.error('댓글 작성에 실패했습니다:', error);\n        alert('댓글 작성에 실패했습니다.');\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        const confirmed = confirm(\"이 댓글을 삭제하시겠습니까?\");\n        if (confirmed) {\n          await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/comment/delete/${commentId}`);\n          this.fetchComments();\n        }\n      } catch (error) {\n        console.error('댓글 삭제에 실패했습니다:', error);\n        alert('댓글 삭제에 실패했습니다.');\n      }\n    },\n    formatDate(date) {\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    goBack() {\n      const category = this.$route.params.category;\n      let routeName = 'BoardList';\n\n      this.$router.push({ name: routeName, params: { category } });\n    },\n    editPost() {\n      const category = this.$route.params.category;\n      this.$router.push({ name: 'BoardUpdate', params: { id: this.post.id, category } });\n    },\n    confirmDeletePost() {\n      this.deleteDialog = true;\n    },\n    async deletePost() {\n      try {\n        const confirmed = confirm(\"이 게시글을 삭제하시겠습니까?\");\n        if (confirmed) {\n          const category = this.$route.params.category;\n\n          let apiUrl;\n          if (category === 'event') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/delete/${this.post.id}`;\n          } else if (category === 'notice') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/delete/${this.post.id}`;\n          } else if (category === 'post') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/delete/${this.post.id}`;\n          } else {\n            throw new Error('잘못된 카테고리입니다.');\n          }\n\n          await axios.get(apiUrl);\n          alert('게시글이 삭제되었습니다.');\n          this.goBack();\n        }\n      } catch (error) {\n        console.error('게시글을 삭제하는 데 실패했습니다:', error);\n        alert('게시글 삭제에 실패했습니다.');\n      }\n    },\n    openPostReportModal() {\n      this.reportData = {\n        postId: this.post.id,\n        postTitle: this.post.title,\n        postContent: this.post.content,\n        authorEmail: this.post.nickname,\n        postCategory: this.$route.params.category\n      };\n      this.showReportModal = true;\n    },\n    openCommentReportModal(comment) {\n      this.reportData = {\n        commentId: comment.id,\n        commentContent: comment.content,\n        commentAuthor: comment.nickname,\n        postTitle: this.post.title,\n        postCategory: this.$route.params.category\n      };\n      this.showReportModal = true;\n    },\n    closeReportModal() {\n      this.showReportModal = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.text-body-1 {\n  font-size: 1rem;\n  line-height: 1.5;\n  color: #555;\n}\n\n.info {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.info li {\n  display: inline-block;\n  margin-right: 20px;\n}\n\n.v-btn {\n  font-weight: bold;\n  border-radius: 0;\n}\n\n.v-btn.primary {\n  background-color: #1e88e5 !important;\n  color: white;\n}\n\n.v-btn.warning {\n  background-color: #ffb300 !important;\n  color: white;\n}\n\n.v-btn.red.darken-2 {\n  background-color: #d32f2f !important;\n  color: white;\n}\n\n.btn_solid {\n  background-color: #00796b !important;\n  color: white;\n}\n\n.btn_del {\n  background-color: #d32f2f !important;\n  color: white;\n}\n\n.btn_alert {\n  background-color: #ffb300 !important;\n  color: white;\n}\n\n.btn_comment_ok {\n  background-color: #1e88e5 !important;\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}