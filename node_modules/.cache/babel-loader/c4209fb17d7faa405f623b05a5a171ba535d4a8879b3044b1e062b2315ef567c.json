{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      subject: {\n        title: '',\n        userTeacherEmail: null,\n        courseId: null,\n        grade: '',\n        description: '',\n        thumbnail: null\n      },\n      teachers: [],\n      courses: [],\n      grades: ['GRADE_1', 'GRADE_2', 'GRADE_3', 'GRADE_4', 'GRADE_5', 'GRADE_6'],\n      previewImageSrc: null\n    };\n  },\n  created() {\n    this.fetchTeacherList();\n    this.fetchCourseList();\n  },\n  methods: {\n    async fetchTeacherList() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/teachers`);\n        this.teachers = response.data.result.target.email;\n        console.log('티처스는:', this.teachers);\n      } catch (error) {\n        console.error(\"Error fetching teachers:\", error);\n        alert(\"선생님 정보를 가져오는 데 실패했습니다.\");\n      }\n    },\n    async fetchCourseList() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/course/list`, {\n          params: {\n            page: 0,\n            size: 100,\n            sort: 'id,desc'\n          }\n        });\n        this.courses = response.data.result.content;\n      } catch (error) {\n        console.error(\"Error fetching courses:\", error);\n        alert(\"과목 정보를 가져오는 데 실패했습니다.\");\n      }\n    },\n    onFileChange(event) {\n      const files = event.target.files || event.dataTransfer.files;\n      if (files && files.length > 0) {\n        this.subject.thumbnail = files[0];\n        this.previewImage();\n      } else {\n        this.subject.thumbnail = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.subject.thumbnail) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.subject.thumbnail);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async submitForm() {\n      const formData = new FormData();\n      formData.append('title', this.subject.title);\n      formData.append('userTeacherEmail', this.subject.userTeacherEmail);\n      formData.append('courseId', this.subject.courseId);\n      formData.append('grade', this.subject.grade);\n      formData.append('description', this.subject.description);\n      if (this.subject.thumbnail) {\n        formData.append('subjectThum', this.subject.thumbnail);\n      }\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/subject/create`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log(response);\n        alert('강좌 생성이 완료되었습니다.');\n        this.$router.push('/subject/list');\n      } catch (error) {\n        console.error('Error creating subject:', error);\n        alert('강좌 생성에 실패했습니다.');\n      }\n    },\n    goBack() {\n      this.$router.push('/subject/list');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","subject","title","userTeacherEmail","courseId","grade","description","thumbnail","teachers","courses","grades","previewImageSrc","created","fetchTeacherList","fetchCourseList","methods","response","get","process","env","VUE_APP_API_BASE_URL","result","target","email","console","log","error","alert","params","page","size","sort","content","onFileChange","event","files","dataTransfer","length","previewImage","reader","FileReader","onload","e","readAsDataURL","submitForm","formData","FormData","append","post","headers","$router","push","goBack"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectCreate.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card class=\"mx-auto\" max-width=\"800\">\n      <v-card-title>\n        <h3>강좌 생성</h3>\n      </v-card-title>\n\n      <v-card-text>\n        <v-form ref=\"form\" @submit.prevent=\"submitForm\">\n          <v-row>\n            <!-- 강좌명 입력 -->\n            <v-col cols=\"12\">\n              <v-text-field\n                label=\"강좌명\"\n                v-model=\"subject.title\"\n                required\n              />\n            </v-col>\n\n            <!-- 선생님 이메일 선택 -->\n            <v-col cols=\"12\">\n              <v-select\n                v-model=\"subject.userTeacherEmail\"\n                :items=\"teachers\"\n                label=\"선생님\"\n                item-text=\"name\"\n                item-value=\"email\" \n                required\n              />            \n            </v-col>\n\n            <!-- 과목 선택 -->\n            <v-col cols=\"6\">\n              <v-select\n                label=\"과목\"\n                v-model=\"subject.courseId\"\n                :items=\"courses\"\n                item-text=\"title\"\n                item-value=\"id\"\n                required\n              />\n            </v-col>\n\n            <!-- 학년 선택 -->\n            <v-col cols=\"6\">\n              <v-select\n                label=\"학년\"\n                v-model=\"subject.grade\"\n                :items=\"grades\"\n                required\n              >\n                <template v-slot:selection=\"{ item }\">\n                  <v-chip v-if=\"item\" small>{{ item }}</v-chip>\n                </template>\n              </v-select>\n            </v-col>\n\n            <!-- 내용 입력 -->\n            <v-col cols=\"12\">\n              <v-textarea\n                label=\"내용\"\n                v-model=\"subject.description\"\n                rows=\"5\"\n                required\n              />\n            </v-col>\n\n            <!-- 썸네일 이미지 업로드 -->\n            <v-col cols=\"12\">\n              <v-file-input\n                label=\"강좌 썸네일 이미지 업로드\"\n                v-model=\"subject.thumbnail\"\n                accept=\"image/*\"\n              />\n              <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" />\n            </v-col>\n\n            <!-- 규격 설명 -->\n            <v-col cols=\"12\" class=\"d-flex justify-space-between\">\n              <v-col cols=\"6\">\n                <p class=\"caption\">\n                  1. png, jpg, jpeg, gif 형식의 이미지만 업로드 됩니다.<br/>\n                  2. 기타 문의사항 발생 시 아래 연락처로 연락 바랍니다.<br/>\n                  070-1111-2222 (09:00-18:00 // 점심시간 12:00-13:00)\n                </p>\n              </v-col>\n              <v-col cols=\"6\" class=\"text-right\">\n                <p class=\"caption text-right red--text\">\n                  * 16:9 사이즈의 이미지 업로드를 권장드립니다.\n                </p>\n              </v-col>\n            </v-col>\n\n            <!-- 버튼들 -->\n            <v-col cols=\"12\" class=\"d-flex justify-space-between\">\n              <v-btn @click=\"goBack\" outlined>목록으로</v-btn>\n              <v-btn type=\"submit\" color=\"primary\">저장</v-btn>\n            </v-col>\n          </v-row>\n        </v-form>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      subject: {\n        title: '',\n        userTeacherEmail: null,\n        courseId: null,\n        grade: '',\n        description: '',\n        thumbnail: null,\n      },\n      teachers: [],\n      courses: [],\n      grades: ['GRADE_1', 'GRADE_2', 'GRADE_3', 'GRADE_4', 'GRADE_5', 'GRADE_6'], \n      previewImageSrc: null,\n    };\n  },\n\n  created() {\n    this.fetchTeacherList();\n    this.fetchCourseList();\n  },\n\n  methods: {\n    async fetchTeacherList() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/teachers`);\n        this.teachers = response.data.result.target.email;\n        console.log('티처스는:', this.teachers)\n      } catch (error) {\n        console.error(\"Error fetching teachers:\", error);\n        alert(\"선생님 정보를 가져오는 데 실패했습니다.\");\n      }\n    },\n\n    async fetchCourseList() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/course/list`, {\n          params: { page: 0, size: 100, sort: 'id,desc' },\n        });\n        this.courses = response.data.result.content;\n      } catch (error) {\n        console.error(\"Error fetching courses:\", error);\n        alert(\"과목 정보를 가져오는 데 실패했습니다.\");\n      }\n    },\n\n    onFileChange(event) {\n      const files = event.target.files || event.dataTransfer.files;\n      if (files && files.length > 0) {\n        this.subject.thumbnail = files[0];\n        this.previewImage();\n      } else {\n        this.subject.thumbnail = null;\n        this.previewImageSrc = null;\n      }\n    },\n\n    previewImage() {\n      if (this.subject.thumbnail) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.subject.thumbnail);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n\n    async submitForm() {\n      const formData = new FormData();\n      formData.append('title', this.subject.title);\n      formData.append('userTeacherEmail', this.subject.userTeacherEmail);\n      formData.append('courseId', this.subject.courseId);\n      formData.append('grade', this.subject.grade);\n      formData.append('description', this.subject.description);\n      \n      if (this.subject.thumbnail) {\n        formData.append('subjectThum', this.subject.thumbnail);\n      }\n\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/subject/create`, formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n        console.log(response);\n        alert('강좌 생성이 완료되었습니다.');\n        this.$router.push('/subject/list');\n      } catch (error) {\n        console.error('Error creating subject:', error);\n        alert('강좌 생성에 실패했습니다.');\n      }\n    },\n\n    goBack() {\n      this.$router.push('/subject/list');\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}