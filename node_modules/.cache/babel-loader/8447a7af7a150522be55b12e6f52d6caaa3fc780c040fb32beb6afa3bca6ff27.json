{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3f11768f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"글쓰기\", -1 /* HOISTED */));\nconst _hoisted_2 = [\"items\"];\nconst _hoisted_3 = {\n  class: \"btnWrap\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\",\n          onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 게시판 선택 \"), _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedCategory = $event),\n            items: $data.categories,\n            \"item-text\": \"text\",\n            \"item-value\": \"value\",\n            label: \"게시판 선택\",\n            required: \"\"\n          }, \"게시파\", 8 /* PROPS */, _hoisted_2), [[_vModelSelect, $data.selectedCategory]]), _createCommentVNode(\" 제목 \"), _createVNode(_component_v_text_field, {\n            label: \"제목\",\n            modelValue: $data.title,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.title = $event),\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 내용 \"), _createVNode(_component_v_textarea, {\n            label: \"내용\",\n            modelValue: $data.content,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.content = $event),\n            rows: \"10\",\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 파일 첨부 \"), _createVNode(_component_v_file_input, {\n            onChange: $options.onFileChange,\n            label: \"파일첨부\",\n            accept: \"image/*\"\n          }, null, 8 /* PROPS */, [\"onChange\"]), _createCommentVNode(\" 미리보기 이미지 \"), $data.previewImageSrc ? (_openBlock(), _createBlock(_component_v_img, {\n            key: 0,\n            src: $data.previewImageSrc,\n            \"max-width\": \"200\",\n            class: \"my-3\"\n          }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_v_btn, {\n            text: \"\",\n            onClick: $options.cancel\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"취소\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n            color: \"primary\",\n            type: \"submit\",\n            class: \"ml-4\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"저장\")]),\n            _: 1 /* STABLE */\n          })])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onSubmit\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_","_component_v_card_text","_component_v_form","ref","onSubmit","_withModifiers","$options","submitForm","_createCommentVNode","_cache","$event","$data","selectedCategory","items","categories","label","required","_hoisted_2","_component_v_text_field","modelValue","title","_component_v_textarea","content","rows","_component_v_file_input","onChange","onFileChange","accept","previewImageSrc","_component_v_img","key","src","_hoisted_3","_component_v_btn","text","onClick","cancel","_createTextVNode","color","type"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/board/BoardCreate.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card>\n      <v-card-title>\n        <h3>글쓰기</h3>\n      </v-card-title>\n\n      <v-card-text>\n        <v-form ref=\"form\" @submit.prevent=\"submitForm\">\n          <!-- 게시판 선택 -->\n          <select\n            v-model=\"selectedCategory\"\n            :items=\"categories\"\n            item-text=\"text\"\n            item-value=\"value\"\n            label=\"게시판 선택\"\n            required\n          >게시파</select>\n\n          <!-- 제목 -->\n          <v-text-field\n            label=\"제목\"\n            v-model=\"title\"\n            required\n          />\n\n          <!-- 내용 -->\n          <v-textarea\n            label=\"내용\"\n            v-model=\"content\"\n            rows=\"10\"\n            required\n          />\n\n          <!-- 파일 첨부 -->\n          <v-file-input\n            @change=\"onFileChange\"\n            label=\"파일첨부\"\n            accept=\"image/*\"\n          />\n\n          <!-- 미리보기 이미지 -->\n          <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" class=\"my-3\"/>\n\n          <div class=\"btnWrap\">\n            <v-btn text @click=\"cancel\">취소</v-btn>\n            <v-btn color=\"primary\" type=\"submit\" class=\"ml-4\">저장</v-btn>\n          </div>\n        </v-form>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      image: null,\n      previewImageSrc: null,\n      selectedCategory: null, // 선택된 게시판\n      categories: [\n        { value: 'notice', text: '공지사항' },\n        { value: 'event', text: '이벤트' },\n        { value: 'post', text: '자유게시판' },\n      ], // 게시판 목록을 저장할 배열\n    };\n  },\n  mounted() {\n    this.checkUserRole();\n  },\n  methods: {\n    checkUserRole() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('로그인이 필요합니다.');\n        this.$router.push('/login');\n        return;\n      }\n\n      const decodedToken = this.parseJwt(token);\n      const role = decodedToken.role;\n\n      if (role !== 'ADMIN') {\n        this.categories = this.categories.filter(cat => cat.value === 'post');\n      }\n    },\n    parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(\n          atob(base64)\n            .split('')\n            .map(function (c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n        );\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    },\n    onFileChange(event) {\n      const files = event?.target?.files || event?.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.image = files[0];\n        this.previewImage();\n      } else {\n        this.image = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.image) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.image);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async submitForm() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('로그인이 필요합니다.');\n        return;\n      }\n\n      const decodedToken = this.parseJwt(token);\n      if (decodedToken.role !== 'ADMIN' && this.selectedCategory !== 'post') {\n        alert('관리자만 공지와 이벤트 게시글을 작성할 수 있습니다.');\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('title', this.title);\n      formData.append('content', this.content);\n      formData.append('category', this.selectedCategory); // 선택한 게시판 카테고리 추가\n      if (this.image) {\n        formData.append('image', this.image);\n      }\n\n      try {\n        const apiUrl = this.getApiUrl();\n        const response = await axios.post(apiUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        console.log('저장 성공:', response.data);\n        this.$router.push({ name: 'BoardList', params: { category: this.selectedCategory } });\n      } catch (error) {\n        console.error('저장 실패:', error.response?.data || '서버와의 통신에 실패했습니다.');\n        alert('게시글 저장에 실패했습니다.');\n      }\n    },\n    getApiUrl() {\n      switch (this.selectedCategory) {\n        case 'event':\n          return `${process.env.VUE_APP_API_BASE_URL}/board/event/create`;\n        case 'notice':\n          return `${process.env.VUE_APP_API_BASE_URL}/board/notice/create`;\n        case 'post':\n        default:\n          return `${process.env.VUE_APP_API_BASE_URL}/board/post/create`;\n      }\n    },\n    cancel() {\n      this.$router.go(-1); // 이전 페이지로 이동\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 800px;\n  margin: auto;\n}\n.btnWrap {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n}\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n"],"mappings":";;gEAIQA,mBAAA,CAAY,YAAR,KAAG;mBAJf;;EA4CeC,KAAK,EAAC;AAAS;;;;;;;;;;;;uBA3C5BC,YAAA,CAkDcC,sBAAA;IAlDDF,KAAK,EAAC;EAAM;IAD3BG,OAAA,EAAAC,QAAA,CAEI,MAgDS,CAhDTC,YAAA,CAgDSC,iBAAA;MAlDbH,OAAA,EAAAC,QAAA,CAGM,MAEe,CAFfC,YAAA,CAEeE,uBAAA;QALrBJ,OAAA,EAAAC,QAAA,CAIQ,MAAY,CAAZI,UAAY,C;QAJpBC,CAAA;UAOMJ,YAAA,CA0CcK,sBAAA;QAjDpBP,OAAA,EAAAC,QAAA,CAQQ,MAwCS,CAxCTC,YAAA,CAwCSM,iBAAA;UAxCDC,GAAG,EAAC,MAAM;UAAEC,QAAM,EARlCC,cAAA,CAQ4CC,QAAA,CAAAC,UAAU;;UARtDb,OAAA,EAAAC,QAAA,CASU,MAAe,CAAfa,mBAAA,YAAe,E,gBACflB,mBAAA,CAOa;YAjBvB,uBAAAmB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWqBC,KAAA,CAAAC,gBAAgB,GAAAF,MAAA;YACxBG,KAAK,EAAEF,KAAA,CAAAG,UAAU;YAClB,WAAS,EAAC,MAAM;YAChB,YAAU,EAAC,OAAO;YAClBC,KAAK,EAAC,QAAQ;YACdC,QAAQ,EAAR;aACD,KAAG,iBAjBdC,UAAA,I,gBAWqBN,KAAA,CAAAC,gBAAgB,E,GAQ3BJ,mBAAA,QAAW,EACXZ,YAAA,CAIEsB,uBAAA;YAHAH,KAAK,EAAC,IAAI;YArBtBI,UAAA,EAsBqBR,KAAA,CAAAS,KAAK;YAtB1B,uBAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsBqBC,KAAA,CAAAS,KAAK,GAAAV,MAAA;YACdM,QAAQ,EAAR;mDAGFR,mBAAA,QAAW,EACXZ,YAAA,CAKEyB,qBAAA;YAJAN,KAAK,EAAC,IAAI;YA5BtBI,UAAA,EA6BqBR,KAAA,CAAAW,OAAO;YA7B5B,uBAAAb,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA6BqBC,KAAA,CAAAW,OAAO,GAAAZ,MAAA;YAChBa,IAAI,EAAC,IAAI;YACTP,QAAQ,EAAR;mDAGFR,mBAAA,WAAc,EACdZ,YAAA,CAIE4B,uBAAA;YAHCC,QAAM,EAAEnB,QAAA,CAAAoB,YAAY;YACrBX,KAAK,EAAC,MAAM;YACZY,MAAM,EAAC;iDAGTnB,mBAAA,cAAiB,EACJG,KAAA,CAAAiB,eAAe,I,cAA5BpC,YAAA,CAAmFqC,gBAAA;YA1C7FC,GAAA;YA0CyCC,GAAG,EAAEpB,KAAA,CAAAiB,eAAe;YAAE,WAAS,EAAC,KAAK;YAACrC,KAAK,EAAC;8CA1CrFiB,mBAAA,gBA4CUlB,mBAAA,CAGM,OAHN0C,UAGM,GAFJpC,YAAA,CAAsCqC,gBAAA;YAA/BC,IAAI,EAAJ,EAAI;YAAEC,OAAK,EAAE7B,QAAA,CAAA8B;;YA7ChC1C,OAAA,EAAAC,QAAA,CA6CwC,MAAE,CA7C1C0C,gBAAA,CA6CwC,IAAE,E;YA7C1CrC,CAAA;0CA8CYJ,YAAA,CAA4DqC,gBAAA;YAArDK,KAAK,EAAC,SAAS;YAACC,IAAI,EAAC,QAAQ;YAAChD,KAAK,EAAC;;YA9CvDG,OAAA,EAAAC,QAAA,CA8C8D,MAAE,CA9ChE0C,gBAAA,CA8C8D,IAAE,E;YA9ChErC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}