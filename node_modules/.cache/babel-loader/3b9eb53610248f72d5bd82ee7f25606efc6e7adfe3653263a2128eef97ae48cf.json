{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-05a43fc0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"작성자:\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"작성 시간:\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"작성 시간:\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"질문 내용:\")], -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"강좌명:\")], -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"답변자:\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"답변 시간:\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"답변 내용:\")], -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"댓글\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item_subtitle = _resolveComponent(\"v-list-item-subtitle\");\n  const _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_list_item_action = _resolveComponent(\"v-list-item-action\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_alert = _resolveComponent(\"v-alert\");\n  const _component_v_progress_circular = _resolveComponent(\"v-progress-circular\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_ReportCreate = _resolveComponent(\"ReportCreate\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [$data.questionDetail ? (_openBlock(), _createBlock(_component_v_card, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_createElementVNode(\"h3\", null, _toDisplayString($data.questionDetail.title), 1 /* TEXT */), _createVNode(_component_v_spacer), _createCommentVNode(\" 질문 수정 버튼 (작성자만 보이도록) \"), $options.isQuestionAuthor ? (_openBlock(), _createBlock(_component_v_btn, {\n          key: 0,\n          color: \"warning\",\n          onClick: $options.editQuestion\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"질문 수정\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 삭제 버튼 (관리자만 보이도록) \"), $options.isAdmin ? (_openBlock(), _createBlock(_component_v_btn, {\n          key: 1,\n          color: \"error\",\n          onClick: $options.confirmDeleteQuestion\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"삭제\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 질문 신고 버튼 \"), _createVNode(_component_v_btn, {\n          color: \"secondary\",\n          onClick: _cache[0] || (_cache[0] = $event => $options.openReportModal('question'))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"신고\")]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" 답변하기 버튼 (관리자와 선생님만 보이도록) \"), $options.canAnswer ? (_openBlock(), _createBlock(_component_v_btn, {\n          key: 2,\n          color: \"primary\",\n          onClick: $options.goToAnswer\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"답변하기\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, {\n            cols: \"12\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"p\", null, [_hoisted_1, _createTextVNode(\" \" + _toDisplayString($data.questionDetail.questionUserNickname), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_2, _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.questionDetail.createdTime)), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_3, _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.questionDetail.createdTime)), 1 /* TEXT */)]), $data.questionDetail.qimageUrl ? (_openBlock(), _createBlock(_component_v_img, {\n              key: 0,\n              src: $data.questionDetail.qimageUrl,\n              alt: \"질문 이미지\",\n              \"max-width\": \"400\",\n              class: \"my-3\"\n            }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _hoisted_4, _createElementVNode(\"p\", null, _toDisplayString($data.questionDetail.questionText), 1 /* TEXT */), _hoisted_5, _createElementVNode(\"p\", null, _toDisplayString($data.questionDetail.subjectTitle), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), $data.questionDetail.answerText ? (_openBlock(), _createBlock(_component_v_col, {\n            key: 0,\n            cols: \"12\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_divider, {\n              class: \"my-3\"\n            }), _createElementVNode(\"p\", null, [_hoisted_6, _createTextVNode(\" \" + _toDisplayString($data.questionDetail.answeredByNickname), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_7, _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.questionDetail.answeredAt)), 1 /* TEXT */)]), $data.questionDetail.aimageUrl ? (_openBlock(), _createBlock(_component_v_img, {\n              key: 0,\n              src: $data.questionDetail.aimageUrl,\n              alt: \"답변 이미지\",\n              \"max-width\": \"400\",\n              class: \"my-3\"\n            }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _hoisted_8, _createElementVNode(\"p\", null, _toDisplayString($data.questionDetail.answerText), 1 /* TEXT */), _createCommentVNode(\" 답변 수정 버튼 (관리자와 선생님만 보이도록) \"), $options.canEditAnswer ? (_openBlock(), _createBlock(_component_v_btn, {\n              key: 1,\n              color: \"warning\",\n              onClick: $options.editAnswer\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"답변 수정\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" 댓글 목록 \"), _createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, {\n            cols: \"12\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_divider, {\n              class: \"my-3\"\n            }), _hoisted_9, _createVNode(_component_v_list, null, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questionDetail.comments, comment => {\n                return _openBlock(), _createBlock(_component_v_list_item, {\n                  key: comment.id\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n                    default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                      default: _withCtx(() => [_createTextVNode(_toDisplayString(comment.nickname) + \" (\" + _toDisplayString($options.formatDate(comment.createdTime)) + \")\", 1 /* TEXT */)]),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_list_item_subtitle, null, {\n                      default: _withCtx(() => [_createTextVNode(_toDisplayString(comment.content), 1 /* TEXT */)]),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */), _createCommentVNode(\" 댓글 삭제 버튼 (관리자만 볼 수 있음) \"), $options.isAdmin ? (_openBlock(), _createBlock(_component_v_list_item_action, {\n                    key: 0\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_btn, {\n                      icon: \"\",\n                      onClick: $event => $options.deleteComment(comment.id)\n                    }, {\n                      default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                        default: _withCtx(() => [_createTextVNode(\"mdi-delete\")]),\n                        _: 1 /* STABLE */\n                      })]),\n                      _: 2 /* DYNAMIC */\n                    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 댓글 신고 버튼 \"), _createVNode(_component_v_list_item_action, null, {\n                    default: _withCtx(() => [_createVNode(_component_v_btn, {\n                      icon: \"\",\n                      onClick: $event => $options.openReportModal('comment', comment)\n                    }, {\n                      default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                        default: _withCtx(() => [_createTextVNode(\"mdi-alert-circle-outline\")]),\n                        _: 1 /* STABLE */\n                      })]),\n                      _: 2 /* DYNAMIC */\n                    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */);\n              }), 128 /* KEYED_FRAGMENT */))]),\n              _: 1 /* STABLE */\n            }), _createCommentVNode(\" 댓글 작성 \"), _createVNode(_component_v_form, {\n              onSubmit: _withModifiers($options.submitComment, [\"prevent\"])\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                label: \"댓글 작성\",\n                modelValue: $data.newComment,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newComment = $event),\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_btn, {\n                type: \"submit\",\n                color: \"primary\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"댓글 등록\")]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onSubmit\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          color: \"primary\",\n          onClick: $options.goBack\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"목록으로 돌아가기\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : $data.error ? (_openBlock(), _createBlock(_component_v_alert, {\n      key: 1,\n      type: \"error\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.error), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_v_progress_circular, {\n      key: 2,\n      indeterminate: \"\",\n      color: \"primary\"\n    })), _createCommentVNode(\" 질문 삭제 확인 다이얼로그 \"), _createVNode(_component_v_dialog, {\n      modelValue: $data.deleteDialog,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.deleteDialog = $event),\n      \"max-width\": \"500px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card, null, {\n        default: _withCtx(() => [_createVNode(_component_v_card_title, {\n          class: \"headline\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"게시글 삭제\")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_createTextVNode(\"게시글을 정말 삭제하시겠습니까?\")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_actions, null, {\n          default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n            color: \"primary\",\n            text: \"\",\n            onClick: _cache[2] || (_cache[2] = $event => $data.deleteDialog = false)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"취소\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_btn, {\n            color: \"error\",\n            text: \"\",\n            onClick: $options.deleteQuestion\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"삭제\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 신고 모달 창 \"), $data.showReportModal ? (_openBlock(), _createBlock(_component_ReportCreate, {\n      key: 3,\n      postId: $data.reportData.postId,\n      commentId: $data.reportData.commentId,\n      qnaId: $data.reportData.qnaId,\n      onClose: $options.closeReportModal\n    }, null, 8 /* PROPS */, [\"postId\", \"commentId\", \"qnaId\", \"onClose\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","class","default","_withCtx","$data","questionDetail","_component_v_card","key","_createVNode","_component_v_card_title","_toDisplayString","title","_component_v_spacer","_createCommentVNode","$options","isQuestionAuthor","_component_v_btn","color","onClick","editQuestion","_createTextVNode","_","isAdmin","confirmDeleteQuestion","_cache","$event","openReportModal","canAnswer","goToAnswer","_component_v_card_text","_component_v_row","_component_v_col","cols","_hoisted_1","questionUserNickname","_hoisted_2","formatDate","createdTime","_hoisted_3","qimageUrl","_component_v_img","src","alt","_hoisted_4","questionText","_hoisted_5","subjectTitle","answerText","_component_v_divider","_hoisted_6","answeredByNickname","_hoisted_7","answeredAt","aimageUrl","_hoisted_8","canEditAnswer","editAnswer","_hoisted_9","_component_v_list","_createElementBlock","_Fragment","_renderList","comments","comment","_component_v_list_item","id","_component_v_list_item_content","_component_v_list_item_title","nickname","_component_v_list_item_subtitle","content","_component_v_list_item_action","icon","deleteComment","_component_v_icon","_component_v_form","onSubmit","_withModifiers","submitComment","_component_v_textarea","label","modelValue","newComment","required","type","_component_v_card_actions","goBack","error","_component_v_alert","_component_v_progress_circular","indeterminate","_component_v_dialog","deleteDialog","text","deleteQuestion","showReportModal","_component_ReportCreate","postId","reportData","commentId","qnaId","onClose","closeReportModal"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaDetail.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card v-if=\"questionDetail\">\n      <v-card-title>\n        <h3>{{ questionDetail.title }}</h3>\n        <v-spacer></v-spacer>\n        <!-- 질문 수정 버튼 (작성자만 보이도록) -->\n        <v-btn v-if=\"isQuestionAuthor\" color=\"warning\" @click=\"editQuestion\">질문 수정</v-btn>\n        <!-- 삭제 버튼 (관리자만 보이도록) -->\n        <v-btn v-if=\"isAdmin\" color=\"error\" @click=\"confirmDeleteQuestion\">삭제</v-btn>\n        <!-- 질문 신고 버튼 -->\n        <v-btn color=\"secondary\" @click=\"openReportModal('question')\">신고</v-btn>\n        <!-- 답변하기 버튼 (관리자와 선생님만 보이도록) -->\n        <v-btn v-if=\"canAnswer\" color=\"primary\" @click=\"goToAnswer\">답변하기</v-btn>\n      </v-card-title>\n\n      <v-card-text>\n        <v-row>\n          <v-col cols=\"12\">\n            <p><strong>작성자:</strong> {{ questionDetail.questionUserNickname }}</p>\n            <p><strong>작성 시간:</strong> {{ formatDate(questionDetail.createdTime) }}</p>\n            <p><strong>작성 시간:</strong> {{ formatDate(questionDetail.createdTime) }}</p>\n            <v-img\n              v-if=\"questionDetail.qimageUrl\"\n              :src=\"questionDetail.qimageUrl\"\n              alt=\"질문 이미지\"\n              max-width=\"400\"\n              class=\"my-3\"\n            />\n            <p><strong>질문 내용:</strong></p>\n            <p>{{ questionDetail.questionText }}</p>\n            <p><strong>강좌명:</strong></p>\n            <p>{{ questionDetail.subjectTitle }}</p>\n          </v-col>\n\n          <v-col cols=\"12\" v-if=\"questionDetail.answerText\">\n            <v-divider class=\"my-3\"></v-divider>\n            <p><strong>답변자:</strong> {{ questionDetail.answeredByNickname }}</p>\n            <p><strong>답변 시간:</strong> {{ formatDate(questionDetail.answeredAt) }}</p>\n            <v-img\n              v-if=\"questionDetail.aimageUrl\"\n              :src=\"questionDetail.aimageUrl\"\n              alt=\"답변 이미지\"\n              max-width=\"400\"\n              class=\"my-3\"\n            />\n            <p><strong>답변 내용:</strong></p>\n            <p>{{ questionDetail.answerText }}</p>\n            <!-- 답변 수정 버튼 (관리자와 선생님만 보이도록) -->\n            <v-btn v-if=\"canEditAnswer\" color=\"warning\" @click=\"editAnswer\">답변 수정</v-btn>\n          </v-col>\n        </v-row>\n\n        <!-- 댓글 목록 -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-divider class=\"my-3\"></v-divider>\n            <h4>댓글</h4>\n            <v-list>\n              <v-list-item v-for=\"comment in questionDetail.comments\" :key=\"comment.id\">\n                <v-list-item-content>\n                  <v-list-item-title>{{ comment.nickname }} ({{ formatDate(comment.createdTime) }})</v-list-item-title>\n                  <v-list-item-subtitle>{{ comment.content }}</v-list-item-subtitle>\n                </v-list-item-content>\n                <!-- 댓글 삭제 버튼 (관리자만 볼 수 있음) -->\n                <v-list-item-action v-if=\"isAdmin\">\n                  <v-btn icon @click=\"deleteComment(comment.id)\">\n                    <v-icon>mdi-delete</v-icon>\n                  </v-btn>\n                </v-list-item-action>\n                <!-- 댓글 신고 버튼 -->\n                <v-list-item-action>\n                  <v-btn icon @click=\"openReportModal('comment', comment)\">\n                    <v-icon>mdi-alert-circle-outline</v-icon>\n                  </v-btn>\n                </v-list-item-action>\n              </v-list-item>\n            </v-list>\n\n            <!-- 댓글 작성 -->\n            <v-form @submit.prevent=\"submitComment\">\n              <v-textarea\n                label=\"댓글 작성\"\n                v-model=\"newComment\"\n                required\n              />\n              <v-btn type=\"submit\" color=\"primary\">댓글 등록</v-btn>\n            </v-form>\n          </v-col>\n        </v-row>\n      </v-card-text>\n\n      <v-card-actions>\n        <v-btn color=\"primary\" @click=\"goBack\">목록으로 돌아가기</v-btn>\n      </v-card-actions>\n    </v-card>\n\n    <v-alert type=\"error\" v-else-if=\"error\">\n      {{ error }}\n    </v-alert>\n\n    <v-progress-circular v-else indeterminate color=\"primary\"></v-progress-circular>\n\n    <!-- 질문 삭제 확인 다이얼로그 -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title class=\"headline\">게시글 삭제</v-card-title>\n        <v-card-text>게시글을 정말 삭제하시겠습니까?</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"deleteDialog = false\">취소</v-btn>\n          <v-btn color=\"error\" text @click=\"deleteQuestion\">삭제</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- 신고 모달 창 -->\n    <ReportCreate \n      v-if=\"showReportModal\" \n      :postId=\"reportData.postId\" \n      :commentId=\"reportData.commentId\" \n      :qnaId=\"reportData.qnaId\" \n      @close=\"closeReportModal\" \n    />\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport ReportCreate from '../report/ReportCreate.vue';\n\nexport default {\n  components: {\n    ReportCreate\n  },\n  data() {\n    return {\n      questionDetail: null,\n      newComment: '',\n      error: null,\n      deleteDialog: false,\n      userEmail: '',\n      userRole: '',\n      showReportModal: false,\n      reportData: {},\n    };\n  },\n  computed: {\n    isQuestionAuthor() {\n      return this.questionDetail && this.questionDetail.userEmail === this.userEmail;\n    },\n    isAdmin() {\n      return this.userRole === 'ADMIN';\n    },\n    canEditAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    },\n    canAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    }\n  },\n  created() {\n    this.decodeToken();\n    this.fetchQuestionDetail();\n  },\n  methods: {\n    decodeToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const decoded = this.parseJwt(token);\n        this.userEmail = decoded.sub;\n        this.userRole = decoded.role;\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(\n          atob(base64)\n            .split('')\n            .map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n        );\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    },\n    async fetchQuestionDetail() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.questionDetail = response.data.result;\n      } catch (error) {\n        this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n      }\n    },\n    async submitComment() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, {\n          qnaId: questionId,\n          content: this.newComment,\n          userId: localStorage.getItem('userId')\n        });\n        this.newComment = '';\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 등록에 실패했습니다.';\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/delete/${commentId}`);\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 삭제에 실패했습니다.';\n      }\n    },\n    confirmDeleteQuestion() {\n      this.deleteDialog = true;\n    },\n    async deleteQuestion() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${questionId}`);\n        this.$router.push('/qna/list');\n      } catch (error) {\n        this.error = '질문 삭제에 실패했습니다.';\n      }\n    },\n    editQuestion() {\n      this.$router.push(`/qna/update/question/${this.$route.params.id}`);\n    },\n    editAnswer() {\n      this.$router.push(`/qna/update/answer/${this.$route.params.id}`);\n    },\n    goToAnswer() {\n      this.$router.push(`/qna/answer/${this.$route.params.id}`);\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    goBack() {\n      this.$router.push('/qna/list');\n    },\n    openReportModal(type, comment = null) {\n      if (type === 'question') {\n        this.reportData = {\n          qnaId: this.questionDetail.id,\n        };\n      } else if (type === 'comment' && comment) {\n        this.reportData = {\n          qnaId: this.questionDetail.id,\n          commentId: comment.id,\n        };\n      }\n      this.showReportModal = true;\n    },\n    closeReportModal() {\n      this.showReportModal = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}