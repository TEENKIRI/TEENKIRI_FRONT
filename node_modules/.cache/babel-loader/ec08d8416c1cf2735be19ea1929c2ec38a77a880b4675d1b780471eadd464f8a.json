{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      post: {},\n      // 게시글 데이터를 저장할 객체\n      isAdmin: false // 관리자인지 여부\n    };\n  },\n  created() {\n    this.checkAdminRole();\n    this.fetchPostDetail(); // 컴포넌트가 생성될 때 게시글 상세 정보를 가져옴\n  },\n  methods: {\n    checkAdminRole() {\n      const role = localStorage.getItem('role');\n      if (role === 'ADMIN') {\n        this.isAdmin = true;\n      }\n    },\n    async fetchPostDetail() {\n      try {\n        const postId = this.$route.params.id; // URL에서 게시글 ID를 가져옴\n        const category = this.$route.params.category;\n        let apiUrl;\n        if (category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/detail/${postId}`;\n        } else if (category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/detail/${postId}`;\n        } else if (category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/detail/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n        const response = await axios.get(apiUrl);\n        this.post = response.data.result; // 서버에서 받아온 데이터를 post 객체에 저장\n      } catch (error) {\n        console.error('게시글을 불러오는 데 실패했습니다:', error);\n        alert('게시글을 불러오는 데 실패했습니다.');\n      }\n    },\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    goBack() {\n      const category = this.$route.params.category;\n      let routeName = 'BoardList';\n      this.$router.push({\n        name: routeName,\n        params: {\n          category\n        }\n      });\n    },\n    editPost() {\n      const category = this.$route.params.category;\n      this.$router.push({\n        name: 'BoardUpdate',\n        params: {\n          id: this.post.id,\n          category\n        }\n      });\n    },\n    async deletePost() {\n      try {\n        const confirmed = confirm(\"이 게시글을 삭제하시겠습니까?\");\n        if (confirmed) {\n          const category = this.$route.params.category;\n          let apiUrl;\n          if (category === 'event') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/delete/${this.post.id}`;\n          } else if (category === 'notice') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/delete/${this.post.id}`;\n          } else if (category === 'post') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/delete/${this.post.id}`;\n          } else {\n            throw new Error('잘못된 카테고리입니다.');\n          }\n          await axios.get(apiUrl);\n          alert('게시글이 삭제되었습니다.');\n          this.goBack(); // 삭제 후 목록으로 돌아가기\n        }\n      } catch (error) {\n        console.error('게시글을 삭제하는 데 실패했습니다:', error);\n        alert('게시글 삭제에 실패했습니다.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","post","isAdmin","created","checkAdminRole","fetchPostDetail","methods","role","localStorage","getItem","postId","$route","params","id","category","apiUrl","process","env","VUE_APP_API_BASE_URL","Error","response","get","result","error","console","alert","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined","goBack","routeName","$router","push","name","editPost","deletePost","confirmed","confirm"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/BoardDetail.vue"],"sourcesContent":["<template>\n  <div class=\"board-detail-container\">\n    <h1 class=\"board-detail-title\">{{ post.title }}</h1>\n    <div class=\"board-detail-info\">\n      <span>작성자: {{ post.nickname }}</span>\n      <span>작성일: {{ formatDate(post.createdTime) }}</span>\n    </div>\n    <div class=\"board-detail-content\">\n      <p>{{ post.content }}</p>\n    </div>\n    <div class=\"board-detail-actions\">\n      <button @click=\"goBack\">목록으로 돌아가기</button>\n      <button v-if=\"isAdmin\" @click=\"editPost\">수정</button>\n      <button v-if=\"isAdmin\" @click=\"deletePost\">삭제</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      post: {}, // 게시글 데이터를 저장할 객체\n      isAdmin: false, // 관리자인지 여부\n    };\n  },\n  created() {\n    this.checkAdminRole();\n    this.fetchPostDetail(); // 컴포넌트가 생성될 때 게시글 상세 정보를 가져옴\n  },\n  methods: {\n    checkAdminRole() {\n      const role = localStorage.getItem('role');\n      if (role === 'ADMIN') {\n        this.isAdmin = true;\n      }\n    },\n    async fetchPostDetail() {\n      try {\n        const postId = this.$route.params.id; // URL에서 게시글 ID를 가져옴\n        const category = this.$route.params.category;\n        \n        let apiUrl;\n        if (category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/detail/${postId}`;\n        } else if (category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/detail/${postId}`;\n        } else if (category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/detail/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n\n        const response = await axios.get(apiUrl);\n        this.post = response.data.result; // 서버에서 받아온 데이터를 post 객체에 저장\n      } catch (error) {\n        console.error('게시글을 불러오는 데 실패했습니다:', error);\n        alert('게시글을 불러오는 데 실패했습니다.');\n      }\n    },\n    formatDate(date) {\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    goBack() {\n      const category = this.$route.params.category;\n      let routeName = 'BoardList';\n\n      this.$router.push({ name: routeName, params: { category } });\n    },\n    editPost() {\n      const category = this.$route.params.category;\n      this.$router.push({ name: 'BoardUpdate', params: { id: this.post.id, category } });\n    },\n    async deletePost() {\n      try {\n        const confirmed = confirm(\"이 게시글을 삭제하시겠습니까?\");\n        if (confirmed) {\n          const category = this.$route.params.category;\n\n          let apiUrl;\n          if (category === 'event') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/delete/${this.post.id}`;\n          } else if (category === 'notice') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/delete/${this.post.id}`;\n          } else if (category === 'post') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/delete/${this.post.id}`;\n          } else {\n            throw new Error('잘못된 카테고리입니다.');\n          }\n\n          await axios.get(apiUrl);\n          alert('게시글이 삭제되었습니다.');\n          this.goBack(); // 삭제 후 목록으로 돌아가기\n        }\n      } catch (error) {\n        console.error('게시글을 삭제하는 데 실패했습니다:', error);\n        alert('게시글 삭제에 실패했습니다.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.board-detail-container {\n  width: 80%;\n  margin: 0 auto;\n}\n\n.board-detail-title {\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.board-detail-info {\n  font-size: 14px;\n  color: #777;\n  margin-bottom: 20px;\n}\n\n.board-detail-content {\n  font-size: 18px;\n  line-height: 1.6;\n  margin-bottom: 40px;\n}\n\n.board-detail-actions {\n  text-align: right;\n}\n\n.board-detail-actions button {\n  padding: 10px 20px;\n  margin-left: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\n.board-detail-actions button:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}