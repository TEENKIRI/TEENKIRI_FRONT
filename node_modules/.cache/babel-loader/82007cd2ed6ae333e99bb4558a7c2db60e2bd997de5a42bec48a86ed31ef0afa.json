{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_createTextVNode(\" 강좌 이름이 들어간다 \")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_createTextVNode","_","_component_v_card_text"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/lecture/LectureDetail.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-card>\n      <v-card-title> 강좌 이름이 들어간다 </v-card-title>\n      <v-card-text> </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      user:{\n        token:\"\",\n        id:\"\",\n        email:\"\"\n      },\n\n      lectureId: \"\",\n      lectureData: {},\n    };\n  },\n  async created() {\n    try {\n      await this.$store.dispatch('setUserAllInfoActions');\n      this.user = this.$store.getters.getUserObj;\n\n      if(this.user.token == \"\"){\n        alert('로그인이 필요합니다.');\n        location.href = -1;\n      }\n\n      this.lectureId = this.$route.params.id;\n      this.getLectureDetail();\n    } catch (error) {\n      console.error(\"An error occurred while fetching user info:\", error);\n    }\n  },\n  methods:{\n    async getLectureDetail(){\n      console.log(\"lecture detail 실행!\",this.lectureId)\n      try{\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/lecture/detail/${this.lectureId}`\n        );\n        const addtionalData = response.data.result;\n        console.log(response);\n        this.lectureData = addtionalData;\n      }catch(e){\n        console.log(e)\n      }\n      \n    }\n  }\n};\n</script>\n"],"mappings":";;;;;;uBACEA,YAAA,CAKcC,sBAAA;IANhBC,OAAA,EAAAC,QAAA,CAEI,MAGS,CAHTC,YAAA,CAGSC,iBAAA;MALbH,OAAA,EAAAC,QAAA,CAGM,MAA0C,CAA1CC,YAAA,CAA0CE,uBAAA;QAHhDJ,OAAA,EAAAC,QAAA,CAGoB,MAAa,CAHjCI,gBAAA,CAGoB,eAAa,E;QAHjCC,CAAA;UAIMJ,YAAA,CAA4BK,sBAAA,E;MAJlCD,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}