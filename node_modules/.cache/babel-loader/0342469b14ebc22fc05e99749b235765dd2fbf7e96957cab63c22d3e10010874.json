{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-410c93df\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"QnA 답변하기\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createCommentVNode(\" 질문자 정보 \"), _createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, {\n            cols: \"6\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_text_field, {\n              label: \"질문자\",\n              modelValue: $data.questionUserNickname,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.questionUserNickname = $event),\n              readonly: \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_col, {\n            cols: \"6\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_text_field, {\n              label: \"질문 날짜\",\n              modelValue: $data.questionDate,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.questionDate = $event),\n              readonly: \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" 질문 내용 \"), _createVNode(_component_v_text_field, {\n          label: \"제목\",\n          modelValue: $data.questionTitle,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.questionTitle = $event),\n          readonly: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_textarea, {\n          label: \"질문 내용\",\n          modelValue: $data.questionText,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.questionText = $event),\n          rows: \"5\",\n          readonly: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 질문 이미지 \"), $data.questionImage ? (_openBlock(), _createBlock(_component_v_img, {\n          key: 0,\n          src: $data.questionImage,\n          alt: \"질문 이미지\",\n          \"max-width\": \"400\",\n          class: \"my-3\"\n        }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 답변 폼 \"), _createVNode(_component_v_form, {\n          ref: \"form\",\n          onSubmit: _withModifiers($options.submitAnswer, [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_textarea, {\n            label: \"답변 내용\",\n            modelValue: $data.answerText,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.answerText = $event),\n            rows: \"5\",\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_file_input, {\n            ref: \"fileInput\",\n            onChange: $options.onFileChange,\n            label: \"답변 이미지 (선택사항)\",\n            accept: \"image/*\"\n          }, null, 8 /* PROPS */, [\"onChange\"]), $data.previewImageSrc ? (_openBlock(), _createBlock(_component_v_img, {\n            key: 0,\n            src: $data.previewImageSrc,\n            \"max-width\": \"200\"\n          }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n            type: \"submit\",\n            color: \"primary\",\n            class: \"mt-3\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"답변 제출\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onSubmit\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","class","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_","_component_v_card_text","_createCommentVNode","_component_v_row","_component_v_col","cols","_component_v_text_field","label","modelValue","$data","questionUserNickname","_cache","$event","readonly","questionDate","questionTitle","_component_v_textarea","questionText","rows","questionImage","_component_v_img","key","src","alt","_component_v_form","ref","onSubmit","_withModifiers","$options","submitAnswer","answerText","required","_component_v_file_input","onChange","onFileChange","accept","previewImageSrc","_component_v_btn","type","color","_createTextVNode"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/CreateAnswer.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card>\n        <v-card-title>\n          <h3>QnA 답변하기</h3>\n        </v-card-title>\n  \n        <v-card-text>\n          <!-- 질문자 정보 -->\n          <v-row>\n            <v-col cols=\"6\">\n              <v-text-field\n                label=\"질문자\"\n                v-model=\"questionUserNickname\"\n                readonly\n              />\n            </v-col>\n            <v-col cols=\"6\">\n              <v-text-field\n                label=\"질문 날짜\"\n                v-model=\"questionDate\"\n                readonly\n              />\n            </v-col>\n          </v-row>\n  \n          <!-- 질문 내용 -->\n          <v-text-field label=\"제목\" v-model=\"questionTitle\" readonly />\n          <v-textarea label=\"질문 내용\" v-model=\"questionText\" rows=\"5\" readonly />\n  \n          <!-- 질문 이미지 -->\n          <v-img\n            v-if=\"questionImage\"\n            :src=\"questionImage\"\n            alt=\"질문 이미지\"\n            max-width=\"400\"\n            class=\"my-3\"\n          ></v-img>\n  \n          <!-- 답변 폼 -->\n          <v-form ref=\"form\" @submit.prevent=\"submitAnswer\">\n            <v-textarea\n              label=\"답변 내용\"\n              v-model=\"answerText\"\n              rows=\"5\"\n              required\n            />\n            <v-file-input\n              ref=\"fileInput\"\n              @change=\"onFileChange\"\n              label=\"답변 이미지 (선택사항)\"\n              accept=\"image/*\"\n            />\n            <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" />\n            <v-btn type=\"submit\" color=\"primary\" class=\"mt-3\">답변 제출</v-btn>\n          </v-form>\n        </v-card-text>\n      </v-card>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        questionUserNickname: '',\n        questionDate: '',\n        questionTitle: '',\n        questionText: '',\n        questionImage: null,\n  \n        answererEmail: '',\n        answerText: '',\n        answerImage: null,\n        previewImageSrc: null,\n        answerAt: ''\n      };\n    },\n    created() {\n      this.fetchQuestionDetails();\n    },\n    methods: {\n      fetchQuestionDetails() {\n        const questionId = this.$route.params.id;\n        axios\n          .get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`)\n          .then((response) => {\n            console.log(response.data); // 응답 데이터를 콘솔에 출력하여 확인\n            const question = response.data.result;\n            this.questionUserNickname = question.questionUserNickname;\n            this.questionDate = new Date(question.createdTime).toLocaleString();\n            this.questionTitle = question.title;\n            this.questionText = question.questionText;\n            this.questionImage = question.qimageUrl;\n          })\n          .catch((error) => {\n            console.error('질문 정보를 불러오는 중 오류가 발생했습니다:', error);\n          });\n      },\n      onFileChange(event) {\n        const files = event.target.files || event.dataTransfer.files;\n        if (files && files.length > 0) {\n          this.answerImage = files[0];\n          this.previewImage();\n        } else {\n          this.answerImage = null;\n          this.previewImageSrc = null;\n        }\n      },\n      previewImage() {\n        if (this.answerImage) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            this.previewImageSrc = e.target.result;\n          };\n          reader.readAsDataURL(this.answerImage);\n        } else {\n          this.previewImageSrc = null;\n        }\n      },\n      async submitAnswer() {\n        const formData = new FormData();\n        formData.append('answererEmail', this.answererEmail);\n        formData.append('answerText', this.answerText);\n        if (this.answerImage) {\n          formData.append('image', this.answerImage);\n        }\n  \n        try {\n          const response = await axios.post(\n            `${process.env.VUE_APP_API_BASE_URL}/qna/answer/${this.$route.params.id}`,\n            formData,\n            {\n              headers: {\n                'Content-Type': 'multipart/form-data',\n              },\n            }\n          );\n          console.log(response);\n          alert('답변이 성공적으로 제출되었습니다!');\n          this.$router.push({ name: 'QnaList' });\n        } catch (error) {\n          const errorMessage =\n            error.response && error.response.data\n              ? error.response.data.message\n              : '답변 제출에 실패했습니다.';\n          alert(errorMessage);\n          console.error('Error details:', error);\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 600px;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}