{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-23773c15\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"QnA 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"번호\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"작성자\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"생성 시간\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"수정 시간\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_simple_table = _resolveComponent(\"v-simple-table\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n          color: \"primary\",\n          onClick: $options.createNewQuestion\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"질문 작성하기\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_simple_table, null, {\n          default: _withCtx(() => [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, _hoisted_6, $data.userRole === 'ADMIN' || $data.userRole === 'TEACHER' ? (_openBlock(), _createElementBlock(\"th\", _hoisted_7, \"답변하기\")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, (question, index) => {\n            return _openBlock(), _createElementBlock(\"tr\", {\n              key: question.id\n            }, [_createElementVNode(\"td\", null, _toDisplayString(index + 1 + ($data.currentPage - 1) * $data.itemsPerPage), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(question.questionUserName), 1 /* TEXT */), _createElementVNode(\"td\", {\n              onClick: $event => $options.viewDetail(question.id),\n              class: \"clickable\"\n            }, _toDisplayString(question.title), 9 /* TEXT, PROPS */, _hoisted_8), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(question.createdTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(question.updatedTime)), 1 /* TEXT */), $options.canAnswerQuestion && !question.answerText ? (_openBlock(), _createElementBlock(\"td\", _hoisted_9, [_createVNode(_component_v_btn, {\n              small: \"\",\n              onClick: $event => $options.answerQuestion(question.id),\n              color: \"primary\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"답변하기\")]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true)]);\n          }), 128 /* KEYED_FRAGMENT */))])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_actions, {\n        class: \"pagination\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          onClick: $options.goToPreviousPage,\n          disabled: $data.currentPage === 1\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Previous\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\", \"disabled\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.totalPages, page => {\n          return _openBlock(), _createBlock(_component_v_btn, {\n            key: page,\n            onClick: $event => $options.goToPage(page),\n            class: _normalizeClass([{\n              active: $data.currentPage === page\n            }, \"pagination-page\"]),\n            text: \"\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(page), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n        }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n          onClick: $options.goToNextPage,\n          disabled: $data.currentPage === $data.totalPages\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Next\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\", \"disabled\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","key","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_component_v_spacer","_component_v_btn","color","onClick","$options","createNewQuestion","_createTextVNode","_","_component_v_card_text","_component_v_simple_table","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","$data","userRole","_createElementBlock","_hoisted_7","_createCommentVNode","_Fragment","_renderList","questions","question","index","id","_toDisplayString","currentPage","itemsPerPage","questionUserName","$event","viewDetail","class","title","_hoisted_8","formatDate","createdTime","updatedTime","canAnswerQuestion","answerText","_hoisted_9","small","answerQuestion","_component_v_card_actions","goToPreviousPage","disabled","totalPages","page","goToPage","_normalizeClass","active","text","goToNextPage"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectQna.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-card>\n      <v-card-title>\n        <h3>QnA 목록</h3>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"createNewQuestion\">질문 작성하기</v-btn>\n      </v-card-title>\n      <v-card-text>\n        <v-simple-table>\n          <thead>\n            <tr>\n              <th>번호</th>\n              <th>작성자</th>\n              <th>제목</th>\n              <th>생성 시간</th>\n              <th>수정 시간</th>\n              <th v-if=\"userRole === 'ADMIN' || userRole === 'TEACHER'\">답변하기</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(question, index) in questions\" :key=\"question.id\">\n              <td>{{ index + 1 + (currentPage - 1) * itemsPerPage }}</td>\n              <td>{{ question.questionUserName }}</td>\n              <td @click=\"viewDetail(question.id)\" class=\"clickable\">{{ question.title }}</td>\n              <td>{{ formatDate(question.createdTime) }}</td>\n              <td>{{ formatDate(question.updatedTime) }}</td>\n              <td v-if=\"canAnswerQuestion && !question.answerText\">\n                <v-btn small @click=\"answerQuestion(question.id)\" color=\"primary\">답변하기</v-btn>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n      </v-card-text>\n      <v-card-actions class=\"pagination\">\n        <v-btn @click=\"goToPreviousPage\" :disabled=\"currentPage === 1\">Previous</v-btn>\n        <v-btn\n          v-for=\"page in totalPages\"\n          :key=\"page\"\n          @click=\"goToPage(page)\"\n          :class=\"{ active: currentPage === page }\"\n          class=\"pagination-page\"\n          text\n        >\n          {{ page }}\n        </v-btn>\n        <v-btn @click=\"goToNextPage\" :disabled=\"currentPage === totalPages\">Next</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    subjectId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n      userRole: localStorage.getItem('role'),\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n          params: {\n            subjectId: this.subjectId,\n            page: this.currentPage - 1,\n            size: this.itemsPerPage,\n          },\n        });\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    createNewQuestion() {\n      this.$router.push(`/qna/create?subjectId=${this.subjectId}`);\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    answerQuestion(id) {\n      this.$router.push(`/qna/answer/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    },\n  },\n  computed: {\n    canAnswerQuestion() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    },\n  },\n};\n</script>\n\n<style scoped>\n.clickable {\n  cursor: pointer;\n  color: blue;\n  text-decoration: underline;\n}\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n.pagination-page {\n  margin: 0 5px;\n  cursor: pointer;\n}\n.pagination-page.active {\n  font-weight: bold;\n  color: blue;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}