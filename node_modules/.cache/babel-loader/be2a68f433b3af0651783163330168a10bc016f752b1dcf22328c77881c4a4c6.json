{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-439adaa3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"신고 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-start\"\n}, \"신고자\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-start\"\n}, \"피신고자\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-start\"\n}, \"사유\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-start\"\n}, \"상세 내용\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-start\"\n}, \"신고 날짜\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-start\"\n}, \"조치\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_spacer), _createVNode(_component_v_select, {\n          modelValue: $data.selectedType,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedType = $event),\n          items: $data.types,\n          \"item-text\": \"text\",\n          \"item-value\": \"value\",\n          label: \"신고 유형 필터\",\n          onChange: $options.fetchReports\n        }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_data_table, {\n          items: $data.reports,\n          \"items-per-page\": 10,\n          class: \"elevation-1\",\n          loading: $data.loading\n        }, {\n          header: _withCtx(() => [_hoisted_2]),\n          body: _withCtx(({\n            items\n          }) => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items, item => {\n            return _openBlock(), _createElementBlock(\"tr\", {\n              key: item.id\n            }, [_createElementVNode(\"td\", null, _toDisplayString(item.reportEmail), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.suspectEmail), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatReason(item.reason)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.details), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(item.createdTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n              onClick: $event => _ctx.viewReportDetail(item),\n              color: \"primary\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"상세 보기\")]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"items\", \"loading\"]), $data.totalPages > 1 ? (_openBlock(), _createBlock(_component_v_pagination, {\n          key: 0,\n          modelValue: $data.page,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.page = $event),\n          length: $data.totalPages,\n          onInput: $options.fetchReports,\n          class: \"mt-3\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"length\", \"onInput\"])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_component_v_spacer","_component_v_select","modelValue","$data","selectedType","_cache","$event","items","types","label","onChange","$options","fetchReports","_","_component_v_card_text","_component_v_data_table","reports","loading","header","_hoisted_2","body","_createElementBlock","_Fragment","_renderList","item","key","id","_toDisplayString","reportEmail","suspectEmail","formatReason","reason","details","formatDate","createdTime","_component_v_btn","onClick","_ctx","viewReportDetail","color","_createTextVNode","totalPages","_component_v_pagination","page","length","onInput","_createCommentVNode"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/report/ReportList.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card>\n        <v-card-title>\n          <h3>신고 목록</h3>\n          <v-spacer></v-spacer>\n          <v-select\n            v-model=\"selectedType\"\n            :items=\"types\"\n            item-text=\"text\"\n            item-value=\"value\"\n            label=\"신고 유형 필터\"\n            @change=\"fetchReports\"\n          ></v-select>\n        </v-card-title>\n  \n        <v-card-text>\n          <v-data-table\n            :items=\"reports\"\n            :items-per-page=\"10\"\n            class=\"elevation-1\"\n            :loading=\"loading\"\n          >\n            <!-- 각 열에 대한 헤더를 수동으로 작성 -->\n            <template v-slot:header>\n              <tr>\n                <th class=\"text-start\">신고자</th>\n                <th class=\"text-start\">피신고자</th>\n                <th class=\"text-start\">사유</th>\n                <th class=\"text-start\">상세 내용</th>\n                <th class=\"text-start\">신고 날짜</th>\n                <th class=\"text-start\">조치</th>\n              </tr>\n            </template>\n  \n            <!-- 각 열에 해당하는 데이터를 출력 -->\n            <template v-slot:body=\"{ items }\">\n              <tr v-for=\"item in items\" :key=\"item.id\">\n                <td>{{ item.reportEmail }}</td>\n                <td>{{ item.suspectEmail }}</td>\n                <td>{{ formatReason(item.reason) }}</td>\n                <td>{{ item.details }}</td>\n                <td>{{ formatDate(item.createdTime) }}</td>\n                <td>\n                  <v-btn @click=\"viewReportDetail(item)\" color=\"primary\">상세 보기</v-btn>\n                </td>\n              </tr>\n            </template>\n          </v-data-table>\n  \n          <v-pagination\n            v-if=\"totalPages > 1\"\n            v-model=\"page\"\n            :length=\"totalPages\"\n            @input=\"fetchReports\"\n            class=\"mt-3\"\n          ></v-pagination>\n        </v-card-text>\n      </v-card>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from \"axios\";\n  \n  export default {\n    data() {\n      return {\n        reports: [],\n        selectedType: \"\",\n        types: [\n          { text: \"전체\", value: \"\" },\n          { text: \"QnA 신고\", value: \"qna\" },\n          { text: \"게시글 신고\", value: \"post\" },\n          { text: \"댓글 신고\", value: \"comment\" },\n        ],\n        page: 1,\n        totalPages: 1,\n        loading: false,\n      };\n    },\n    methods: {\n      async fetchReports() {\n        this.loading = true;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/report/list`, {\n            params: {\n              type: this.selectedType || \"\", // type이 선택되지 않았을 경우 빈 문자열로 설정\n              page: this.page - 1, // page는 1부터 시작하는 UI에서 -1을 해서 0부터 서버로 요청\n            },\n          });\n          this.reports = response.data.result.content;\n          this.totalPages = response.data.result.totalPages;\n        } catch (error) {\n          console.error(\"신고 목록을 불러오는 중 오류가 발생했습니다:\", error);\n        } finally {\n          this.loading = false;\n        }\n      },\n  \n      // Reason을 사용자 친화적인 텍스트로 변환하는 메서드\n      formatReason(reason) {\n        const reasonMap = {\n          SPAM: \"스팸홍보/도배글\",\n          PORNOGRAPHY: \"음란물\",\n          ILLEGAL_INFORMATION: \"불법정보 포함\",\n          HARMFUL_TO_MINORS: \"청소년에게 유해한 내용\",\n          ABUSIVE_LANGUAGE: \"욕설/생명경시/혐오/차별적 표현\",\n          PRIVACY_VIOLATION: \"개인정보 노출\",\n          OFFENSIVE_CONTENT: \"불쾌한 표현\",\n        };\n        return reasonMap[reason] || \"알 수 없는 이유\";\n      },\n  \n      formatDate(date) {\n        if (!date) return \"\";\n        const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\", hour: \"2-digit\", minute: \"2-digit\" };\n        return new Date(date).toLocaleDateString(\"ko-KR\", options);\n      },\n    },\n    created() {\n      this.fetchReports();\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}