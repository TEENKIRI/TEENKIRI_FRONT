{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a09f8938\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"text-h4 font-weight-bold\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex justify-end mb-3\"\n};\nconst _hoisted_3 = {\n  class: \"info\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"작성일:\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-h6 font-weight-bold\"\n}, \"댓글\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"comment-text\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item_subtitle = _resolveComponent(\"v-list-item-subtitle\");\n  const _component_v_list_item_action = _resolveComponent(\"v-list-item-action\");\n  const _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_alert = _resolveComponent(\"v-alert\");\n  const _component_v_progress_circular = _resolveComponent(\"v-progress-circular\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_ReportCreate = _resolveComponent(\"ReportCreate\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [$data.post ? (_openBlock(), _createBlock(_component_v_card, {\n      key: 0,\n      class: \"pa-5\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 제목 \"), _createVNode(_component_v_card_title, {\n        class: \"d-flex justify-space-between align-center\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"h2\", _hoisted_1, _toDisplayString($data.post.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [$data.isFreeBoard ? (_openBlock(), _createBlock(_component_v_btn, {\n          key: 0,\n          class: \"btn_st2 mr-2\",\n          onClick: $options.openPostReportModal\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"신고\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 본문 내용 \"), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, {\n            cols: \"12\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"ul\", _hoisted_3, [_createElementVNode(\"li\", null, [_createElementVNode(\"strong\", null, \"작성자: \" + _toDisplayString($data.post.nickname), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_4, _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.post.createdTime)), 1 /* TEXT */)])]), $data.post.imageUrl ? (_openBlock(), _createBlock(_component_v_img, {\n              key: 0,\n              src: $data.post.imageUrl,\n              alt: \"Post Image\",\n              \"max-width\": \"400\",\n              class: \"my-3\"\n            }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n              innerHTML: $data.post.content,\n              class: \"text-body-1 bodyTxt\"\n            }, null, 8 /* PROPS */, _hoisted_5)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 댓글 섹션 \"), $data.isFreeBoard ? (_openBlock(), _createBlock(_component_v_row, {\n        key: 0\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_divider, {\n          class: \"my-3\"\n        }), _createVNode(_component_v_col, {\n          cols: \"12\"\n        }, {\n          default: _withCtx(() => [_hoisted_6, _createVNode(_component_v_list, {\n            \"two-line\": \"\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n              return _openBlock(), _createBlock(_component_v_list_item, {\n                key: comment.id,\n                class: \"py-2\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item_content, {\n                  class: \"comment-content\"\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_v_list_item_title, {\n                    class: \"text-subtitle-1\"\n                  }, {\n                    default: _withCtx(() => [_createTextVNode(_toDisplayString(comment.content), 1 /* TEXT */)]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_list_item_subtitle, null, {\n                    default: _withCtx(() => [_createTextVNode(_toDisplayString(comment.nickname) + \" (\" + _toDisplayString($options.formatDate(comment.createdTime)) + \")\", 1 /* TEXT */)]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */)]), _createVNode(_component_v_list_item_action, {\n                    class: \"action-buttons\"\n                  }, {\n                    default: _withCtx(() => [_createElementVNode(\"a\", {\n                      href: \"javascript:void(0)\",\n                      class: \"btn_board_option\",\n                      onClick: $event => $options.openCommentReportModal(comment)\n                    }, \"신고\", 8 /* PROPS */, _hoisted_8), $options.canDeleteComment() ? (_openBlock(), _createElementBlock(\"a\", {\n                      key: 0,\n                      href: \"javascript:void(0)\",\n                      class: \"btn_board_option\",\n                      onClick: $event => $options.deleteComment(comment.id)\n                    }, \"삭제\", 8 /* PROPS */, _hoisted_9)) : _createCommentVNode(\"v-if\", true)]),\n                    _: 2 /* DYNAMIC */\n                  }, 1024 /* DYNAMIC_SLOTS */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */);\n            }), 128 /* KEYED_FRAGMENT */))]),\n            _: 1 /* STABLE */\n          }), $data.isLoggedIn ? (_openBlock(), _createBlock(_component_v_form, {\n            key: 0,\n            onSubmit: _withModifiers($options.submitComment, [\"prevent\"]),\n            class: \"mt-3\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_textarea, {\n              label: \"댓글 작성\",\n              modelValue: $data.newCommentContent,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCommentContent = $event),\n              required: \"\",\n              outlined: \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onSubmit\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 액션 버튼들 \"), _createVNode(_component_v_form, {\n        onSubmit: _withModifiers($options.submitComment, [\"prevent\"]),\n        class: \"mt-3\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card_actions, {\n          class: \"d-flex justify-end\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_btn, {\n            class: \"btn_solid\",\n            onClick: $options.goBack\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"목록으로\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n            type: \"submit\",\n            class: \"btn_comment_ok\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"댓글작성\")]),\n            _: 1 /* STABLE */\n          }), $options.canEditPost ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 0,\n            class: \"btn_st2\",\n            onClick: $options.editPost\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"수정\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), $options.canDeletePost ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 1,\n            class: \"btn_del\",\n            onClick: $options.confirmDeletePost\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"삭제\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onSubmit\"])]),\n      _: 1 /* STABLE */\n    })) : $data.error ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createCommentVNode(\" 에러 및 로딩 상태 \"), _createVNode(_component_v_alert, {\n      type: \"error\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.error), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createBlock(_component_v_progress_circular, {\n      key: 2,\n      indeterminate: \"\",\n      color: \"primary\"\n    })), _createCommentVNode(\" 게시글 삭제 확인 다이얼로그 \"), _createVNode(_component_v_dialog, {\n      modelValue: $data.deleteDialog,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.deleteDialog = $event),\n      \"max-width\": \"500px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card, null, {\n        default: _withCtx(() => [_createVNode(_component_v_card_title, {\n          class: \"headline\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"게시글 삭제\")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_createTextVNode(\"게시글을 정말 삭제하시겠습니까?\")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_actions, null, {\n          default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n            class: \"btn_white\",\n            text: \"\",\n            onClick: _cache[1] || (_cache[1] = $event => $data.deleteDialog = false)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"취소\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_btn, {\n            class: \"btn_del\",\n            text: \"\",\n            onClick: $options.deletePost\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"삭제\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 신고 모달 창 \"), $data.showReportModal ? (_openBlock(), _createBlock(_component_ReportCreate, {\n      key: 3,\n      postId: $data.reportData.postId,\n      postTitle: $data.reportData.postTitle,\n      postContent: $data.reportData.postContent,\n      authorEmail: $data.reportData.authorEmail,\n      postCategory: $data.reportData.postCategory,\n      commentId: $data.reportData.commentId,\n      commentContent: $data.reportData.commentContent,\n      commentAuthor: $data.reportData.commentAuthor,\n      onClose: $options.closeReportModal\n    }, null, 8 /* PROPS */, [\"postId\", \"postTitle\", \"postContent\", \"authorEmail\", \"postCategory\", \"commentId\", \"commentContent\", \"commentAuthor\", \"onClose\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createElementVNode","_createBlock","_component_v_container","default","_withCtx","$data","post","_component_v_card","key","_createCommentVNode","_createVNode","_component_v_card_title","_hoisted_1","_toDisplayString","title","_hoisted_2","isFreeBoard","_component_v_btn","onClick","$options","openPostReportModal","_createTextVNode","_","_component_v_card_text","_component_v_row","_component_v_col","cols","_hoisted_3","nickname","_hoisted_4","formatDate","createdTime","imageUrl","_component_v_img","src","alt","innerHTML","content","_hoisted_5","_component_v_divider","_hoisted_6","_component_v_list","_createElementBlock","_Fragment","_renderList","comments","comment","_component_v_list_item","id","_component_v_list_item_content","_hoisted_7","_component_v_list_item_title","_component_v_list_item_subtitle","_component_v_list_item_action","href","$event","openCommentReportModal","_hoisted_8","canDeleteComment","deleteComment","_hoisted_9","isLoggedIn","_component_v_form","onSubmit","_withModifiers","submitComment","_component_v_textarea","label","modelValue","newCommentContent","_cache","required","outlined","_component_v_card_actions","goBack","type","canEditPost","editPost","canDeletePost","confirmDeletePost","error","_component_v_alert","_component_v_progress_circular","indeterminate","color","_component_v_dialog","deleteDialog","_component_v_spacer","text","deletePost","showReportModal","_component_ReportCreate","postId","reportData","postTitle","postContent","authorEmail","postCategory","commentId","commentContent","commentAuthor","onClose","closeReportModal"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/board/BoardDetail.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card v-if=\"post\" class=\"pa-5\">\n      <!-- 제목 -->\n      <v-card-title class=\"d-flex justify-space-between align-center\">\n        <h2 class=\"text-h4 font-weight-bold\">{{ post.title }}</h2>\n        <div class=\"d-flex justify-end mb-3\">\n          <v-btn v-if=\"isFreeBoard\" class=\"btn_st2 mr-2\" @click=\"openPostReportModal\">신고</v-btn>\n        </div>\n      </v-card-title>\n\n      <!-- 본문 내용 -->\n      <v-card-text>\n        <v-row>\n          <v-col cols=\"12\">\n            <ul class=\"info\">\n              <li><strong>작성자: {{post.nickname}}</strong></li>\n              <li><strong>작성일:</strong> {{ formatDate(post.createdTime) }}</li>\n            </ul>\n            <v-img v-if=\"post.imageUrl\" :src=\"post.imageUrl\" alt=\"Post Image\" max-width=\"400\" class=\"my-3\"/>\n            <div v-html=\"post.content\" class=\"text-body-1 bodyTxt\"></div>\n          </v-col>\n        </v-row>\n      </v-card-text>\n\n      <!-- 댓글 섹션 -->\n      <v-row v-if=\"isFreeBoard\">\n        <v-divider class=\"my-3\"></v-divider>\n        <v-col cols=\"12\">\n          <h4 class=\"text-h6 font-weight-bold\">댓글</h4>\n          <v-list two-line>\n            <v-list-item v-for=\"comment in comments\" :key=\"comment.id\" class=\"py-2\">\n              <v-list-item-content class=\"comment-content\">\n                <div class=\"comment-text\">\n                <v-list-item-title class=\"text-subtitle-1\">{{ comment.content }}</v-list-item-title>\n                <v-list-item-subtitle>{{ comment.nickname }} ({{ formatDate(comment.createdTime) }})</v-list-item-subtitle>\n                </div>\n              <v-list-item-action class=\"action-buttons\">\n                <a href=\"javascript:void(0)\" class=\"btn_board_option\" @click=\"openCommentReportModal(comment)\">신고</a>  \n                <a v-if=\"canDeleteComment()\" href=\"javascript:void(0)\" class=\"btn_board_option\" @click=\"deleteComment(comment.id)\">삭제</a>\n              </v-list-item-action>\n            </v-list-item-content>\n            </v-list-item>\n          </v-list>\n\n  \n          <v-form v-if=\"isLoggedIn\" @submit.prevent=\"submitComment\" class=\"mt-3\">\n            <v-textarea label=\"댓글 작성\" v-model=\"newCommentContent\" required outlined />\n            \n          </v-form>\n        </v-col>\n      </v-row>\n\n      <!-- 액션 버튼들 -->\n      <v-form @submit.prevent=\"submitComment\" class=\"mt-3\">\n      <v-card-actions class=\"d-flex justify-end\">\n        <v-btn class=\"btn_solid\" @click=\"goBack\">목록으로</v-btn>\n        <v-btn type=\"submit\" class=\"btn_comment_ok\">댓글작성</v-btn>\n        <v-btn v-if=\"canEditPost\" class=\"btn_st2\"  @click=\"editPost\">수정</v-btn>\n        <v-btn v-if=\"canDeletePost\" class=\"btn_del\" @click=\"confirmDeletePost\">삭제</v-btn>\n      </v-card-actions>\n      </v-form>\n    </v-card>\n\n    <!-- 에러 및 로딩 상태 -->\n    <v-alert type=\"error\" v-else-if=\"error\">{{ error }}</v-alert>\n    <v-progress-circular v-else indeterminate color=\"primary\"></v-progress-circular>\n\n    <!-- 게시글 삭제 확인 다이얼로그 -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title class=\"headline\">게시글 삭제</v-card-title>\n        <v-card-text>게시글을 정말 삭제하시겠습니까?</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn class=\"btn_white\" text @click=\"deleteDialog = false\">취소</v-btn>\n          <v-btn class=\"btn_del\" text @click=\"deletePost\">삭제</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- 신고 모달 창 -->\n    <ReportCreate \n      v-if=\"showReportModal\" \n      :postId=\"reportData.postId\" \n      :postTitle=\"reportData.postTitle\" \n      :postContent=\"reportData.postContent\" \n      :authorEmail=\"reportData.authorEmail\" \n      :postCategory=\"reportData.postCategory\" \n      :commentId=\"reportData.commentId\" \n      :commentContent=\"reportData.commentContent\" \n      :commentAuthor=\"reportData.commentAuthor\" \n      @close=\"closeReportModal\" \n    />\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport ReportCreate from '../report/ReportCreate.vue';\n\nexport default {\n  components: {\n    ReportCreate\n  },\n  data() {\n    return {\n      post: null,\n      isAdmin: false,\n      comments: [],\n      newCommentContent: '',\n      isLoggedIn: false,\n      isFreeBoard: false,\n      showReportModal: false,\n      reportData: {},\n      userId: localStorage.getItem('userId'),\n      deleteDialog: false,\n      error: null,\n      userEmail: '',\n      activeComment: null, // 현재 열려있는 conLayer의 댓글 ID\n    };\n  },\n  computed: {\n    canEditPost() {\n      return this.isAdmin || (this.isFreeBoard && this.post && this.post.userEmail === this.userEmail);\n    },\n    canDeletePost() {\n      return this.isAdmin || (this.isFreeBoard && this.post && this.post.userEmail === this.userEmail);\n    }\n  },\n  created() {\n    this.decodeToken();\n    this.checkAdminRole();\n    this.checkLoginStatus();\n    this.checkIfFreeBoard();\n    this.fetchPostDetail();\n\n    if (this.isFreeBoard) {\n      this.fetchComments();\n    }\n  },\n  methods: {\n    decodeToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const decoded = this.parseJwt(token);\n        this.userEmail = decoded.sub;\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(\n          atob(base64)\n            .split('')\n            .map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n        );\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    },\n    checkAdminRole() {\n      const role = localStorage.getItem('role');\n      this.isAdmin = role === 'ADMIN';\n    },\n    checkLoginStatus() {\n      const token = localStorage.getItem('token');\n      this.isLoggedIn = !!token;\n    },\n    checkIfFreeBoard() {\n      const category = this.$route.params.category;\n      this.isFreeBoard = category === 'post';\n    },\n    async fetchPostDetail() {\n      try {\n        const postId = this.$route.params.id;\n        const category = this.$route.params.category;\n        let apiUrl;\n\n        if (category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/detail/${postId}`;\n        } else if (category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/detail/${postId}`;\n        } else if (category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/detail/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n\n        const response = await axios.get(apiUrl);\n        this.post = response.data.result;\n      } catch (error) {\n        console.error('게시글을 불러오는 데 실패했습니다:', error);\n        alert('게시글을 불러오는 데 실패했습니다.');\n      }\n    },\n    async fetchComments() {\n      try {\n        const postId = this.$route.params.id;\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/post/${postId}`);\n        this.comments = response.data.result;\n      } catch (error) {\n        console.error('댓글을 불러오는 데 실패했습니다:', error);\n      }\n    },\n    async submitComment() {\n      try {\n        if (!this.newCommentContent.trim()) {\n          alert('댓글 내용을 입력하세요.');\n          return;\n        }\n\n        const postId = this.$route.params.id;\n        const userId = localStorage.getItem('userId');\n        const newComment = {\n          content: this.newCommentContent,\n          postId: postId,\n          userId: userId\n        };\n\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, newComment);\n        this.newCommentContent = '';\n        this.fetchComments();\n      } catch (error) {\n        console.error('댓글 작성에 실패했습니다:', error);\n        alert('댓글 작성에 실패했습니다.');\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        const confirmed = confirm(\"이 댓글을 삭제하시겠습니까?\");\n        if (confirmed) {\n          await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/comment/delete/${commentId}`);\n          this.fetchComments();\n        }\n      } catch (error) {\n        console.error('댓글 삭제에 실패했습니다:', error);\n        alert('댓글 삭제에 실패했습니다.');\n      }\n    },\n    toggleCommentOptions(commentId) {\n      if (this.activeComment === commentId) {\n        this.activeComment = null;\n      } else {\n        this.activeComment = commentId;\n      }\n    },\n    canDeleteComment() {\n      return this.isAdmin;\n    },\n    formatDate(date) {\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    goBack() {\n      const category = this.$route.params.category;\n      let routeName = 'BoardList';\n\n      this.$router.push({ name: routeName, params: { category } });\n    },\n    editPost() {\n      const category = this.$route.params.category;\n      this.$router.push({ name: 'BoardUpdate', params: { id: this.post.id, category } });\n    },\n    confirmDeletePost() {\n      this.deleteDialog = true;\n    },\n    async deletePost() {\n      try {\n        const confirmed = confirm(\"이 게시글을 삭제하시겠습니까?\");\n        if (confirmed) {\n          const category = this.$route.params.category;\n\n          let apiUrl;\n          if (category === 'event') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/delete/${this.post.id}`;\n          } else if (category === 'notice') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/delete/${this.post.id}`;\n          } else if (category === 'post') {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/delete/${this.post.id}`;\n          } else {\n            throw new Error('잘못된 카테고리입니다.');\n          }\n\n          await axios.get(apiUrl);\n          alert('게시글이 삭제되었습니다.');\n          this.goBack();\n        }\n      } catch (error) {\n        console.error('게시글을 삭제하는 데 실패했습니다:', error);\n        alert('게시글 삭제에 실패했습니다.');\n      }\n    },\n    openPostReportModal() {\n      this.reportData = {\n        postId: this.post.id,\n        postTitle: this.post.title,\n        postContent: this.post.content,\n        authorEmail: this.post.nickname,\n        postCategory: this.$route.params.category\n      };\n      this.showReportModal = true;\n    },\n    openCommentReportModal(comment) {\n      this.reportData = {\n        commentId: comment.id,\n        commentContent: comment.content,\n        commentAuthor: comment.nickname,\n        postTitle: this.post.title,\n        postCategory: this.$route.params.category\n      };\n      this.showReportModal = true;\n    },\n    closeReportModal() {\n      this.showReportModal = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.text-body-1 {\n  font-size: 1rem;\n  line-height: 1.5;\n  color: #555;\n}\n\n.info {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.info li {\n  display: inline-block;\n  margin-right: 20px;\n}\n\n.v-btn {\n  font-weight: bold;\n  border-radius: 0;\n}\n\n.btn_white {\n  background-color: white !important;\n  color: #424242 !important;\n  border: 1px solid #dcdcdc !important;\n}\n\n.btn_white:hover {\n  background-color: #f5f5f5 !important;\n}\n\n.btn_del {\n  background-color: #f27885 !important;\n  color: white;\n  border-radius: 8px;\n}\n\n.btn_solid {\n  background-color: #ffdb69 !important;\n  color: rgb(255, 255, 255);\n  border-radius: 8px;\n}\n\n.btn_st2 {\n  background-color: #424242 !important;\n  color: white;\n  border-radius: 8px;\n}\n\n.btn_alert {\n  background-color: #d32f2f !important;\n  color: white;\n}\n\n.btn_comment_ok {\n  background-color: #5087c7 !important;\n  color: white;\n  border-radius: 8px;\n}\n\n.action-buttons {\n  display: flex;\n  align-items: center;\n  margin-left: 16px; /* 원하는 여백 추가 */\n}\n\n.v-list-item-action {\n  margin-left: auto;\n}\n\n.v-list-item-action .v-btn {\n  margin-left: 8px;\n}\n\n.comment-text {\n  flex-grow: 1;\n}\n\n.comment-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.btn_board_option {\n  display: block;\n  padding: 5px 10px;\n  color: #ffffff;\n  text-decoration: none;\n  background-color: #f27885;\n  border-bottom: 1px solid #ccc;\n  border-radius: 8px;\n}\n\n.btn_board_option:hover {\n  background-color: #f5f5f5;\n  color: black;\n}\n\n.v-icon {\n  font-size: 18px !important;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}