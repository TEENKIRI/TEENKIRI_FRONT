{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1351cae6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"board-title\"\n}, \"내 질문 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"tbl_list\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"caption\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"colgroup\", null, [/*#__PURE__*/_createElementVNode(\"col\", {\n  width: \"80\"\n}), /*#__PURE__*/_createElementVNode(\"col\", {\n  width: \"auto\"\n}), /*#__PURE__*/_createElementVNode(\"col\", {\n  width: \"140\"\n}), /*#__PURE__*/_createElementVNode(\"col\", {\n  width: \"160\"\n}), /*#__PURE__*/_createCommentVNode(\" 작성일 칸의 너비를 160으로 증가 \"), /*#__PURE__*/_createElementVNode(\"col\", {\n  width: \"140\"\n}), /*#__PURE__*/_createCommentVNode(\" 상태 칸 추가 \")], -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"번호\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"상태\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성일\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"보기\")])], -1 /* HOISTED */));\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_chip = _resolveComponent(\"v-chip\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_hoisted_1, _createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _hoisted_4, _hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.qnaList, (item, index) => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: item.id\n        }, [_createElementVNode(\"td\", null, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"td\", {\n          onClick: $event => $options.viewDetails(item.id),\n          class: \"text_left subject\"\n        }, _toDisplayString(item.title), 9 /* TEXT, PROPS */, _hoisted_6), _createElementVNode(\"td\", null, [_createVNode(_component_v_chip, {\n          color: item.answeredAt ? 'green' : 'red',\n          dark: \"\",\n          small: \"\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(item.answeredAt ? '답변완료' : '미답변'), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\"])]), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(item.createdTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n          onClick: $event => $options.viewDetails(item.id),\n          class: \"btn_view\",\n          color: \"dark\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 보기 \")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]);\n      }), 128 /* KEYED_FRAGMENT */))])])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","width","_createCommentVNode","_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_container","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","_renderList","$data","qnaList","item","index","key","id","_toDisplayString","onClick","$event","$options","viewDetails","title","_hoisted_6","_component_v_chip","color","answeredAt","dark","small","_createTextVNode","_","formatDate","createdTime","_component_v_btn"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/UserQuestions.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <h1 class=\"board-title\">내 질문 목록</h1>\n\n      <table class=\"tbl_list\">\n        <caption></caption>\n        <colgroup>\n          <col width=\"80\" />\n          <col width=\"auto\" />\n          <col width=\"140\" />\n          <col width=\"160\" /> <!-- 작성일 칸의 너비를 160으로 증가 -->\n          <col width=\"140\" /> <!-- 상태 칸 추가 -->\n        </colgroup>\n        <thead>\n          <tr>\n            <th>번호</th>\n            <th>제목</th>\n            <th>상태</th>\n            <th>작성일</th>\n            <th>보기</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in qnaList\" :key=\"item.id\">\n            <td>{{ index + 1 }}</td>\n            <td @click=\"viewDetails(item.id)\" class=\"text_left subject\">{{ item.title }}</td>\n            <td>\n              <v-chip\n                :color=\"item.answeredAt ? 'green' : 'red'\"\n                dark\n                small\n              >\n                {{ item.answeredAt ? '답변완료' : '미답변' }}\n              </v-chip>\n            </td>\n            <td>{{ formatDate(item.createdTime) }}</td>\n            <td>\n              <v-btn @click=\"viewDetails(item.id)\" class=\"btn_view\" color=\"dark\">\n                보기\n              </v-btn>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"QnAList\",\n  data() {\n    return {\n      qnaList: [] // 초기값은 빈 배열\n    };\n  },\n  async mounted() {\n    await this.fetchQnAList(); // 컴포넌트가 마운트될 때 Q&A 리스트를 불러옵니다.\n  },\n  methods: {\n    async fetchQnAList() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/qna`);\n        if (response.status === 200) {\n          this.qnaList = response.data.result; // 응답 데이터에서 Q&A 리스트를 추출\n        } else {\n          console.error('Q&A 리스트 가져오기 실패:', response.data.message || response.statusText);\n        }\n      } catch (error) {\n        console.error('Q&A 리스트 가져오기 중 오류 발생:', error.response ? error.response.data.message : error.message);\n      }\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleString();\n    },\n    viewDetails(id) {\n      this.$router.push(`/qna/detail/${id}`); // ID를 포함한 상세 페이지 URL로 이동\n    }\n  }\n};\n</script>\n\n<style scoped>\n.board-title {\n  font-size: 26px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.tbl_list {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.tbl_list th,\n.tbl_list td {\n  border-top: 1px solid #ddd;\n  border-bottom: 1px solid #ddd;\n  padding: 10px;\n  text-align: left;\n}\n\n.tbl_list th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n\n.text_left {\n  text-align: left;\n}\n\n.subject {\n  text-decoration: none;\n  color: #333;\n  cursor: pointer;\n}\n\n.subject:hover {\n  text-decoration: underline;\n}\n\n.btn_view {\n  text-transform: uppercase;\n}\n\n</style>\n"],"mappings":";;gEAGMA,mBAAA,CAAoC;EAAhCC,KAAK,EAAC;AAAa,GAAC,SAAO;;EAExBA,KAAK,EAAC;AAAU;gEACrBD,mBAAA,CAAmB;gEACnBA,mBAAA,CAMW,mB,aALTA,mBAAA,CAAkB;EAAbE,KAAK,EAAC;AAAI,I,aACfF,mBAAA,CAAoB;EAAfE,KAAK,EAAC;AAAM,I,aACjBF,mBAAA,CAAmB;EAAdE,KAAK,EAAC;AAAK,I,aAChBF,mBAAA,CAAmB;EAAdE,KAAK,EAAC;AAAK,I,aAAIC,mBAAA,yBAA4B,E,aAChDH,mBAAA,CAAmB;EAAdE,KAAK,EAAC;AAAK,I,aAAIC,mBAAA,aAAgB,C;gEAEtCH,mBAAA,CAQQ,gB,aAPNA,mBAAA,CAMK,a,aALHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAW,YAAP,IAAE,E;mBApBlB;;;;;;uBACEI,YAAA,CA6CQC,gBAAA;IA9CVC,OAAA,EAAAC,QAAA,CAEI,MA2Cc,CA3CdC,YAAA,CA2CcC,sBAAA;MA7ClBH,OAAA,EAAAC,QAAA,CAGM,MAAoC,CAApCG,UAAoC,EAEpCV,mBAAA,CAuCQ,SAvCRW,UAuCQ,GAtCNC,UAAmB,EACnBC,UAMW,EACXC,UAQQ,EACRd,mBAAA,CAoBQ,iB,kBAnBNe,mBAAA,CAkBKC,SAAA,QA1CfC,WAAA,CAwBsCC,KAAA,CAAAC,OAAO,EAxB7C,CAwBsBC,IAAI,EAAEC,KAAK;6BAAvBN,mBAAA,CAkBK;UAlBiCO,GAAG,EAAEF,IAAI,CAACG;YAC9CvB,mBAAA,CAAwB,YAAAwB,gBAAA,CAAjBH,KAAK,sBACZrB,mBAAA,CAAiF;UAA5EyB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACR,IAAI,CAACG,EAAE;UAAGtB,KAAK,EAAC;4BAAuBmB,IAAI,CAACS,KAAK,wBA1BrFC,UAAA,GA2BY9B,mBAAA,CAQK,aAPHQ,YAAA,CAMSuB,iBAAA;UALNC,KAAK,EAAEZ,IAAI,CAACa,UAAU;UACvBC,IAAI,EAAJ,EAAI;UACJC,KAAK,EAAL;;UA/BhB7B,OAAA,EAAAC,QAAA,CAiCgB,MAAsC,CAjCtD6B,gBAAA,CAAAZ,gBAAA,CAiCmBJ,IAAI,CAACa,UAAU,kC;UAjClCI,CAAA;0DAoCYrC,mBAAA,CAA2C,YAAAwB,gBAAA,CAApCG,QAAA,CAAAW,UAAU,CAAClB,IAAI,CAACmB,WAAW,mBAClCvC,mBAAA,CAIK,aAHHQ,YAAA,CAEQgC,gBAAA;UAFAf,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACR,IAAI,CAACG,EAAE;UAAGtB,KAAK,EAAC,UAAU;UAAC+B,KAAK,EAAC;;UAtC1E1B,OAAA,EAAAC,QAAA,CAsCiF,MAEnE,CAxCd6B,gBAAA,CAsCiF,MAEnE,E;UAxCdC,CAAA;;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}