{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport axios from 'axios';\nimport { ref, computed } from 'vue';\nexport default {\n  name: 'HeaderComponent',\n  setup() {\n    const logo = require('@/assets/images/ico_logo.png');\n    const isLogin = ref(false);\n    const notifications = ref([]);\n    const menuVisible = ref(false);\n    const token = localStorage.getItem('token');\n    isLogin.value = !!token;\n    const unreadNotificationsCount = computed(() => notifications.value.filter(notification => notification.delYN === 'N').length);\n    const fetchNotifications = async () => {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/list`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        notifications.value = response.data;\n      } catch (error) {\n        console.error('알림 목록을 가져오는 중 오류 발생:', error);\n      }\n    };\n    const markAsRead = async (notification, index) => {\n      if (notification.delYN === 'N') {\n        try {\n          const id = notification.id;\n          await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/update/${id}`, null, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          notifications.value[index].delYN = 'Y';\n        } catch (error) {\n          console.error('알림을 읽음으로 표시하는 중 오류 발생:', error);\n        }\n      }\n    };\n    const toggleMenu = () => {\n      menuVisible.value = !menuVisible.value;\n    };\n    if (isLogin.value) {\n      fetchNotifications();\n      const eventSource = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/subscribe`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      eventSource.addEventListener('connect', event => {\n        console.log(event);\n      });\n      eventSource.addEventListener('notification', event => {\n        const notification = JSON.parse(event.data);\n        notifications.value.push(notification);\n        console.log('새 알림:', notification.message);\n      });\n      eventSource.onerror = error => {\n        console.error('SSE 연결 오류:', error);\n      };\n    }\n    return {\n      logo,\n      isLogin,\n      notifications,\n      menuVisible,\n      unreadNotificationsCount,\n      fetchNotifications,\n      markAsRead,\n      toggleMenu,\n      navigate: section => {\n        // Navigation logic here\n      },\n      goToMember: () => {\n        // Member navigation logic here\n      },\n      goToMenu: () => {\n        // Menu navigation logic here\n      },\n      doLogout: () => {\n        localStorage.removeItem('role');\n        localStorage.removeItem('token');\n        isLogin.value = false;\n        window.location.reload();\n      }\n    };\n  }\n};","map":{"version":3,"names":["EventSourcePolyfill","axios","ref","computed","name","setup","logo","require","isLogin","notifications","menuVisible","token","localStorage","getItem","value","unreadNotificationsCount","filter","notification","delYN","length","fetchNotifications","response","get","process","env","VUE_APP_API_BASE_URL","headers","Authorization","data","error","console","markAsRead","index","id","toggleMenu","eventSource","addEventListener","event","log","JSON","parse","push","message","onerror","navigate","section","goToMember","goToMenu","doLogout","removeItem","window","location","reload"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/components/HeaderComponent.vue"],"sourcesContent":["<template>\n  <v-app-bar app>\n    <v-container>\n      <v-row align=\"center\">\n        <v-col cols=\"3\">\n          <v-toolbar-title>\n            <router-link to=\"/\" class=\"logo\">\n              <img :src=\"logo\" alt=\"로고\" class=\"logo-image\" />\n            </router-link>\n          </v-toolbar-title>\n        </v-col>\n        <v-col cols=\"6\">\n          <v-row justify=\"center\">\n            <v-btn text @click=\"navigate('강좌')\">강좌</v-btn>\n            <v-btn text @click=\"navigate('추천')\">추천</v-btn>\n            <v-btn text @click=\"navigate('이벤트')\">이벤트</v-btn>\n            <v-btn text @click=\"navigate('공지사항')\">공지사항</v-btn>\n            <v-btn text @click=\"navigate('자유게시판')\">자유게시판</v-btn>\n            <v-btn text @click=\"navigate('QnA')\">질문게시판</v-btn>\n          </v-row>\n        </v-col>\n        <v-col cols=\"3\" class=\"text-right\">\n          <v-btn icon @click=\"goToMember\">\n            <v-icon>mdi-account</v-icon>\n          </v-btn>\n          <v-btn v-if=\"isLogin\" @click=\"doLogout\">로그아웃</v-btn>\n          <v-btn icon @click=\"goToMenu\">\n            <v-icon>mdi-menu</v-icon>\n          </v-btn>\n\n          <!-- 알림 아이콘 및 알림 목록 -->\n          <v-menu v-model=\"menuVisible\" offset-y>\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn icon v-bind=\"attrs\" v-on=\"on\" @click=\"toggleMenu\">\n                <v-badge\n                  color=\"red\"\n                  :content=\"unreadNotificationsCount\"\n                  overlap\n                  v-if=\"unreadNotificationsCount > 0\"\n                >\n                  <v-icon>mdi-bell</v-icon>\n                </v-badge>\n                <v-icon v-else>mdi-bell</v-icon>\n              </v-btn>\n            </template>\n            <v-list max-width=\"300\" max-height=\"400\" style=\"overflow-y: auto;\">\n              <v-list-item\n                v-for=\"(notification, index) in notifications\"\n                :key=\"index\"\n                :class=\"notification.delYN === 'Y' ? 'read-notification' : 'unread-notification'\"\n                @click=\"markAsRead(notification, index)\"\n              >\n                <v-list-item-content>\n                  <v-list-item-title>{{ notification.message }}</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-app-bar>\n</template>\n\n<script>\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport axios from 'axios';\nimport { ref, computed } from 'vue';\n\nexport default {\n  name: 'HeaderComponent',\n  setup() {\n    const logo = require('@/assets/images/ico_logo.png');\n    const isLogin = ref(false);\n    const notifications = ref([]);\n    const menuVisible = ref(false);\n\n    const token = localStorage.getItem('token');\n    isLogin.value = !!token;\n\n    const unreadNotificationsCount = computed(() =>\n      notifications.value.filter(notification => notification.delYN === 'N').length\n    );\n\n    const fetchNotifications = async () => {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/list`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        notifications.value = response.data;\n      } catch (error) {\n        console.error('알림 목록을 가져오는 중 오류 발생:', error);\n      }\n    };\n\n    const markAsRead = async (notification, index) => {\n      if (notification.delYN === 'N') {\n        try {\n          const id = notification.id;\n          await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/update/${id}`, null, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n\n          notifications.value[index].delYN = 'Y';\n        } catch (error) {\n          console.error('알림을 읽음으로 표시하는 중 오류 발생:', error);\n        }\n      }\n    };\n\n    const toggleMenu = () => {\n      menuVisible.value = !menuVisible.value;\n    };\n\n    if (isLogin.value) {\n      fetchNotifications();\n\n      const eventSource = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/subscribe`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      eventSource.addEventListener('connect', (event) => {\n        console.log(event);\n      });\n\n      eventSource.addEventListener('notification', (event) => {\n        const notification = JSON.parse(event.data);\n        notifications.value.push(notification);\n        console.log('새 알림:', notification.message);\n      });\n\n      eventSource.onerror = (error) => {\n        console.error('SSE 연결 오류:', error);\n      };\n    }\n\n    return {\n      logo,\n      isLogin,\n      notifications,\n      menuVisible,\n      unreadNotificationsCount,\n      fetchNotifications,\n      markAsRead,\n      toggleMenu,\n      navigate: section => {\n        // Navigation logic here\n      },\n      goToMember: () => {\n        // Member navigation logic here\n      },\n      goToMenu: () => {\n        // Menu navigation logic here\n      },\n      doLogout: () => {\n        localStorage.removeItem('role');\n        localStorage.removeItem('token');\n        isLogin.value = false;\n        window.location.reload();\n      },\n    };\n  },\n};\n</script>\n\n<style scoped>\n.logo {\n  font-weight: bold;\n  color: inherit;\n  text-decoration: none;\n}\n\n.logo-image {\n  height: 10%;\n}\n\n/* 읽은 알림의 배경색 */\n.read-notification {\n  background-color: #e0e0e0; /* 회색 배경 */\n}\n\n/* 읽지 않은 알림의 배경색 */\n.unread-notification {\n  background-color: white; /* 흰색 배경 */\n}\n</style>\n"],"mappings":";AAiEA,SAASA,mBAAkB,QAAS,uBAAuB;AAC3D,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAO,QAAS,KAAK;AAEnC,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIC,OAAO,CAAC,8BAA8B,CAAC;IACpD,MAAMC,OAAM,GAAIN,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMO,aAAY,GAAIP,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMQ,WAAU,GAAIR,GAAG,CAAC,KAAK,CAAC;IAE9B,MAAMS,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CL,OAAO,CAACM,KAAI,GAAI,CAAC,CAACH,KAAK;IAEvB,MAAMI,wBAAuB,GAAIZ,QAAQ,CAAC,MACxCM,aAAa,CAACK,KAAK,CAACE,MAAM,CAACC,YAAW,IAAKA,YAAY,CAACC,KAAI,KAAM,GAAG,CAAC,CAACC,MACzE,CAAC;IAED,MAAMC,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMpB,KAAK,CAACqB,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,yBAAyB,EAAE;UAC7FC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUf,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CAAC,CAAC;QACFJ,aAAa,CAACK,KAAI,GAAIO,QAAQ,CAACO,IAAI;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,MAAME,UAAS,GAAI,MAAAA,CAAOd,YAAY,EAAEe,KAAK,KAAK;MAChD,IAAIf,YAAY,CAACC,KAAI,KAAM,GAAG,EAAE;QAC9B,IAAI;UACF,MAAMe,EAAC,GAAIhB,YAAY,CAACgB,EAAE;UAC1B,MAAMhC,KAAK,CAACqB,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,6BAA6BQ,EAAE,EAAE,EAAE,IAAI,EAAE;YAC1FP,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUf,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;YACxD;UACF,CAAC,CAAC;UAEFJ,aAAa,CAACK,KAAK,CAACkB,KAAK,CAAC,CAACd,KAAI,GAAI,GAAG;QACxC,EAAE,OAAOW,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;MACF;IACF,CAAC;IAED,MAAMK,UAAS,GAAIA,CAAA,KAAM;MACvBxB,WAAW,CAACI,KAAI,GAAI,CAACJ,WAAW,CAACI,KAAK;IACxC,CAAC;IAED,IAAIN,OAAO,CAACM,KAAK,EAAE;MACjBM,kBAAkB,CAAC,CAAC;MAEpB,MAAMe,WAAU,GAAI,IAAInC,mBAAmB,CAAC,GAAGuB,OAAO,CAACC,GAAG,CAACC,oBAAoB,YAAY,EAAE;QAC3FC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUhB,KAAK;QAChC;MACF,CAAC,CAAC;MAEFwB,WAAW,CAACC,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;QACjDP,OAAO,CAACQ,GAAG,CAACD,KAAK,CAAC;MACpB,CAAC,CAAC;MAEFF,WAAW,CAACC,gBAAgB,CAAC,cAAc,EAAGC,KAAK,IAAK;QACtD,MAAMpB,YAAW,GAAIsB,IAAI,CAACC,KAAK,CAACH,KAAK,CAACT,IAAI,CAAC;QAC3CnB,aAAa,CAACK,KAAK,CAAC2B,IAAI,CAACxB,YAAY,CAAC;QACtCa,OAAO,CAACQ,GAAG,CAAC,OAAO,EAAErB,YAAY,CAACyB,OAAO,CAAC;MAC5C,CAAC,CAAC;MAEFP,WAAW,CAACQ,OAAM,GAAKd,KAAK,IAAK;QAC/BC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACpC,CAAC;IACH;IAEA,OAAO;MACLvB,IAAI;MACJE,OAAO;MACPC,aAAa;MACbC,WAAW;MACXK,wBAAwB;MACxBK,kBAAkB;MAClBW,UAAU;MACVG,UAAU;MACVU,QAAQ,EAAEC,OAAM,IAAK;QACnB;MAAA,CACD;MACDC,UAAU,EAAEA,CAAA,KAAM;QAChB;MAAA,CACD;MACDC,QAAQ,EAAEA,CAAA,KAAM;QACd;MAAA,CACD;MACDC,QAAQ,EAAEA,CAAA,KAAM;QACdpC,YAAY,CAACqC,UAAU,CAAC,MAAM,CAAC;QAC/BrC,YAAY,CAACqC,UAAU,CAAC,OAAO,CAAC;QAChCzC,OAAO,CAACM,KAAI,GAAI,KAAK;QACrBoC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}