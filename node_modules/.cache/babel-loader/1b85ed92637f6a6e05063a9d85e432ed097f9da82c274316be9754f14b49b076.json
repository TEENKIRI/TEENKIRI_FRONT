{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-60738bad\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"QnA 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성자\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"생성 시간\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"수정 시간\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"상세보기\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"답변하기\")])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_simple_table = _resolveComponent(\"v-simple-table\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n              color: \"primary\",\n              onClick: $options.createNewQuestion\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"질문 작성하기\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_simple_table, null, {\n              default: _withCtx(() => [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, question => {\n                return _openBlock(), _createElementBlock(\"tr\", {\n                  key: question.id\n                }, [_createElementVNode(\"td\", null, _toDisplayString(question.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(question.questionUserName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(question.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(question.createdTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(question.updatedTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n                  small: \"\",\n                  onClick: $event => $options.viewDetail(question.id),\n                  color: \"primary\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"상세보기\")]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]), _createElementVNode(\"td\", null, [!question.answerText ? (_openBlock(), _createBlock(_component_v_btn, {\n                  key: 0,\n                  small: \"\",\n                  onClick: $event => $options.answerQuestion(question.id),\n                  color: \"primary\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"답변하기\")]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]);\n              }), 128 /* KEYED_FRAGMENT */))])]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_pagination, {\n              modelValue: $data.currentPage,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentPage = $event),\n              length: $data.totalPages,\n              onInput: $options.fetchQuestions,\n              class: \"justify-center\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"length\", \"onInput\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","_component_v_col","cols","_component_v_card","_component_v_card_title","_hoisted_1","_component_v_spacer","_component_v_btn","color","onClick","$options","createNewQuestion","_createTextVNode","_","_component_v_card_text","_component_v_simple_table","_hoisted_2","_createElementBlock","_Fragment","_renderList","$data","questions","question","key","id","_toDisplayString","questionUserName","title","formatDate","createdTime","updatedTime","small","$event","viewDetail","answerText","answerQuestion","_createCommentVNode","_component_v_card_actions","_component_v_pagination","modelValue","currentPage","_cache","length","totalPages","onInput","fetchQuestions","class"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaList.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title>\n              <h3>QnA 목록</h3>\n              <v-spacer></v-spacer>\n              <v-btn color=\"primary\" @click=\"createNewQuestion\">질문 작성하기</v-btn>\n            </v-card-title>\n  \n            <v-card-text>\n              <v-simple-table>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>작성자</th>\n                    <th>제목</th>\n                    <th>생성 시간</th>\n                    <th>수정 시간</th>\n                    <th>상세보기</th>\n                    <th>답변하기</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"question in questions\" :key=\"question.id\">\n                    <td>{{ question.id }}</td>\n                    <td>{{ question.questionUserName }}</td>\n                    <td>{{ question.title }}</td>\n                    <td>{{ formatDate(question.createdTime) }}</td>\n                    <td>{{ formatDate(question.updatedTime) }}</td>\n                    <td>\n                      <v-btn small @click=\"viewDetail(question.id)\" color=\"primary\">상세보기</v-btn>\n                    </td>\n                    <td>\n                      <v-btn v-if=\"!question.answerText\" small @click=\"answerQuestion(question.id)\" color=\"primary\">답변하기</v-btn>\n                    </td>\n                  </tr>\n                </tbody>\n              </v-simple-table>\n            </v-card-text>\n  \n            <v-card-actions>\n              <v-pagination\n                v-model=\"currentPage\"\n                :length=\"totalPages\"\n                @input=\"fetchQuestions\"\n                class=\"justify-center\"\n              ></v-pagination>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        questions: [],\n        currentPage: 1,\n        totalPages: 1,\n      };\n    },\n    created() {\n      this.fetchQuestions();\n    },\n    methods: {\n      async fetchQuestions() {\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n            params: {\n              page: this.currentPage - 1,\n              size: 10, // 페이지 크기\n            }\n          });\n  \n          const result = response.data.result;\n          if (result && result.content) {\n            this.questions = result.content;\n            this.totalPages = result.totalPages;\n          } else {\n            console.error('올바르지 않은 데이터 형식입니다:', response.data);\n          }\n        } catch (error) {\n          console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n        }\n      },\n      formatDate(date) {\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      createNewQuestion() {\n        this.$router.push('/qna/create');\n      },\n      viewDetail(id) {\n        this.$router.push(`/qna/detail/${id}`);\n      },\n      answerQuestion(id) {\n        this.$router.push(`/qna/answer/${id}`);\n      },\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 800px;\n    margin: 0 auto;\n    padding-top: 20px;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}