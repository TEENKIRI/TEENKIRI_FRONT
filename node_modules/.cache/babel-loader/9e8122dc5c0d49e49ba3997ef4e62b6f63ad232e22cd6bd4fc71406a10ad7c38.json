{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-084c8a14\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"강좌명:\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_form, {\n      onSubmit: _withModifiers($options.updateQuestion, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_text_field, {\n        label: \"제목\",\n        modelValue: $data.question.title,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.question.title = $event),\n        required: \"\",\n        outlined: \"\",\n        dense: \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _hoisted_1, _createElementVNode(\"p\", null, _toDisplayString(_ctx.questionDetail.subjectTitle), 1 /* TEXT */), _createVNode(_component_v_textarea, {\n        label: \"질문 내용\",\n        modelValue: $data.question.questionText,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.question.questionText = $event),\n        required: \"\",\n        outlined: \"\",\n        dense: \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 이미지 선택 \"), _createVNode(_component_v_file_input, {\n        label: \"이미지 선택\",\n        onChange: $options.onFileChange,\n        accept: \"image/*\",\n        outlined: \"\",\n        dense: \"\"\n      }, null, 8 /* PROPS */, [\"onChange\"]), _createCommentVNode(\" 미리보기 이미지 \"), $data.previewImageSrc || $data.question.qimageUrl ? (_openBlock(), _createBlock(_component_v_img, {\n        key: 0,\n        src: $data.previewImageSrc || $data.question.qimageUrl,\n        \"max-width\": \"200\",\n        class: \"my-3\"\n      }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n        type: \"submit\",\n        color: \"primary\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"수정 완료\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_btn, {\n        color: \"secondary\",\n        onClick: $options.goBack\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"취소\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onSubmit\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","class","default","_withCtx","_createVNode","_component_v_form","onSubmit","_withModifiers","$options","updateQuestion","_component_v_text_field","label","modelValue","$data","question","title","_cache","$event","required","outlined","dense","_hoisted_1","_toDisplayString","_ctx","questionDetail","subjectTitle","_component_v_textarea","questionText","_createCommentVNode","_component_v_file_input","onChange","onFileChange","accept","previewImageSrc","qimageUrl","_component_v_img","key","src","_component_v_btn","type","color","_createTextVNode","_","onClick","goBack"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/UpdateQuestion.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-form @submit.prevent=\"updateQuestion\">\n        <v-text-field\n          label=\"제목\"\n          v-model=\"question.title\"\n          required\n          outlined\n          dense\n        ></v-text-field>\n        <p><strong>강좌명:</strong></p>\n        <p>{{ questionDetail.subjectTitle }}</p>\n  \n        <v-textarea\n          label=\"질문 내용\"\n          v-model=\"question.questionText\"\n          required\n          outlined\n          dense\n        ></v-textarea>\n  \n        <!-- 이미지 선택 -->\n        <v-file-input\n          label=\"이미지 선택\"\n          @change=\"onFileChange\"\n          accept=\"image/*\"\n          outlined\n          dense\n        ></v-file-input>\n  \n        <!-- 미리보기 이미지 -->\n        <v-img v-if=\"previewImageSrc || question.qimageUrl\" :src=\"previewImageSrc || question.qimageUrl\" max-width=\"200\" class=\"my-3\"/>\n  \n        <v-btn type=\"submit\" color=\"primary\">수정 완료</v-btn>\n        <v-btn color=\"secondary\" @click=\"goBack\">취소</v-btn>\n      </v-form>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        question: {\n          title: '',\n          questionText: '',\n          qimageUrl: null, // 기존 이미지 URL\n          qImage: null // 새로 선택된 이미지 파일\n        },\n        previewImageSrc: null, // 새로 선택한 이미지 미리보기\n      };\n    },\n    created() {\n      this.fetchQuestionDetail();\n    },\n    methods: {\n      async fetchQuestionDetail() {\n        const questionId = this.$route.params.id;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n          this.question = response.data.result;\n  \n          // 기존 이미지가 있는 경우 미리보기 이미지로 설정\n          if (this.question.qimageUrl) {\n            this.previewImageSrc = this.question.qimageUrl;\n          }\n        } catch (error) {\n          this.$router.push(`/qna/detail/${questionId}`);\n        }\n      },\n      onFileChange(event) {\n        const files = event?.target?.files || event?.dataTransfer?.files;\n        if (files && files.length > 0) {\n          this.question.qImage = files[0]; // 새로 선택된 파일을 저장\n          this.previewImage(files[0]); // 새 이미지로 미리보기 업데이트\n        } else {\n          this.question.qImage = null;\n          this.previewImageSrc = this.question.qimageUrl; // 기존 이미지로 설정\n        }\n      },\n      previewImage(file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      },\n      async updateQuestion() {\n        const formData = new FormData();\n        formData.append('title', this.question.title);\n        formData.append('questionText', this.question.questionText);\n  \n        // 새 이미지가 선택된 경우에만 FormData에 추가하고, 기존 이미지는 URL을 전송\n        if (this.question.qImage) {\n          formData.append('qImage', this.question.qImage);\n        } else if (this.question.qimageUrl) {\n          formData.append('qimageUrl', this.question.qimageUrl);\n        }\n  \n        try {\n          await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/update/question/${this.$route.params.id}`, formData);\n          this.$router.push(`/qna/detail/${this.$route.params.id}`);\n        } catch (error) {\n          alert('질문 수정에 실패했습니다.');\n        }\n      },\n      goBack() {\n        const questionId = this.$route.params.id;\n        this.$router.push(`/qna/detail/${questionId}`);\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  .my-3 {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n  </style>\n  "],"mappings":";;gEAUQA,mBAAA,CAA4B,Y,aAAzBA,mBAAA,CAAqB,gBAAb,MAAI,E;;;;;;;;;uBATnBC,YAAA,CAmCcC,sBAAA;IAnCDC,KAAK,EAAC;EAAM;IAD7BC,OAAA,EAAAC,QAAA,CAEM,MAiCS,CAjCTC,YAAA,CAiCSC,iBAAA;MAjCAC,QAAM,EAFrBC,cAAA,CAE+BC,QAAA,CAAAC,cAAc;;MAF7CP,OAAA,EAAAC,QAAA,CAGQ,MAMgB,CANhBC,YAAA,CAMgBM,uBAAA;QALdC,KAAK,EAAC,IAAI;QAJpBC,UAAA,EAKmBC,KAAA,CAAAC,QAAQ,CAACC,KAAK;QALjC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKmBJ,KAAA,CAAAC,QAAQ,CAACC,KAAK,GAAAE,MAAA;QACvBC,QAAQ,EAAR,EAAQ;QACRC,QAAQ,EAAR,EAAQ;QACRC,KAAK,EAAL;+CAEFC,UAA4B,EAC5BvB,mBAAA,CAAwC,WAAAwB,gBAAA,CAAlCC,IAAA,CAAAC,cAAc,CAACC,YAAY,kBAEjCrB,YAAA,CAMcsB,qBAAA;QALZf,KAAK,EAAC,OAAO;QAdvBC,UAAA,EAemBC,KAAA,CAAAC,QAAQ,CAACa,YAAY;QAfxC,uBAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAemBJ,KAAA,CAAAC,QAAQ,CAACa,YAAY,GAAAV,MAAA;QAC9BC,QAAQ,EAAR,EAAQ;QACRC,QAAQ,EAAR,EAAQ;QACRC,KAAK,EAAL;+CAGFQ,mBAAA,YAAe,EACfxB,YAAA,CAMgByB,uBAAA;QALdlB,KAAK,EAAC,QAAQ;QACbmB,QAAM,EAAEtB,QAAA,CAAAuB,YAAY;QACrBC,MAAM,EAAC,SAAS;QAChBb,QAAQ,EAAR,EAAQ;QACRC,KAAK,EAAL;6CAGFQ,mBAAA,cAAiB,EACJf,KAAA,CAAAoB,eAAe,IAAIpB,KAAA,CAAAC,QAAQ,CAACoB,SAAS,I,cAAlDnC,YAAA,CAA+HoC,gBAAA;QA/BvIC,GAAA;QA+B6DC,GAAG,EAAExB,KAAA,CAAAoB,eAAe,IAAIpB,KAAA,CAAAC,QAAQ,CAACoB,SAAS;QAAE,WAAS,EAAC,KAAK;QAACjC,KAAK,EAAC;0CA/B/H2B,mBAAA,gBAiCQxB,YAAA,CAAkDkC,gBAAA;QAA3CC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;;QAjCnCtC,OAAA,EAAAC,QAAA,CAiC6C,MAAK,CAjClDsC,gBAAA,CAiC6C,OAAK,E;QAjClDC,CAAA;UAkCQtC,YAAA,CAAmDkC,gBAAA;QAA5CE,KAAK,EAAC,WAAW;QAAEG,OAAK,EAAEnC,QAAA,CAAAoC;;QAlCzC1C,OAAA,EAAAC,QAAA,CAkCiD,MAAE,CAlCnDsC,gBAAA,CAkCiD,IAAE,E;QAlCnDC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}