{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  name: \"ResetPasswordPage\",\n  data() {\n    return {\n      newPassword: \"\",\n      confirmPassword: \"\",\n      errorMessage: \"\",\n      successMessage: \"\",\n      token: \"\" // JWT 토큰은 URL에서 가져올 것으로 가정\n    };\n  },\n  created() {\n    // URL에서 토큰을 추출하여 서버로 GET 요청을 보내 토큰 확인\n    const urlParams = new URLSearchParams(window.location.search);\n    this.token = urlParams.get('token');\n    this.verifyToken();\n  },\n  methods: {\n    async verifyToken() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/reset-password`, {\n          params: {\n            token: this.token\n          }\n        });\n        if (response.data.status_code === 200) {\n          // 토큰이 확인되었으므로 비밀번호 재설정 폼을 활성화\n          this.successMessage = response.data.status_message;\n        } else {\n          this.errorMessage = '유효하지 않은 토큰입니다.';\n        }\n      } catch (error) {\n        this.errorMessage = '토큰 확인 중 오류가 발생했습니다.';\n      }\n    },\n    async resetPassword() {\n      if (this.newPassword.length <= 7) {\n        this.errorMessage = '비밀번호는 8자 이상이어야 합니다.';\n        this.successMessage = '';\n        return;\n      }\n      if (this.newPassword !== this.confirmPassword) {\n        this.errorMessage = '비밀번호가 일치하지 않습니다.';\n        this.successMessage = '';\n        return;\n      }\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/reset-password`, {\n          token: this.token,\n          newPassword: this.newPassword,\n          confirmPassword: this.confirmPassword\n        });\n        if (response.status === 200) {\n          this.successMessage = '비밀번호가 재설정되었습니다.';\n          this.errorMessage = '';\n        } else {\n          this.errorMessage = `비밀번호 재설정에 실패했습니다: ${response.data?.message || 'Unknown error occurred'}`;\n          this.successMessage = '';\n        }\n      } catch (e) {\n        this.errorMessage = `비밀번호 재설정에 실패했습니다: ${e.response?.data?.message || 'Unknown error occurred'}`;\n        this.successMessage = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","newPassword","confirmPassword","errorMessage","successMessage","token","created","urlParams","URLSearchParams","window","location","search","get","verifyToken","methods","response","process","env","VUE_APP_API_BASE_URL","params","status_code","status_message","error","resetPassword","length","post","status","message","e"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/ResetPasswordPage.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" sm=\"8\" md=\"6\">\n        <v-card class=\"pa-5\" color=\"#ff7e5f\" dark>\n          <v-card-title class=\"text-h5 text-center white--text\">비밀번호 재설정</v-card-title>\n          <v-card-text>\n            <v-form @submit.prevent=\"resetPassword\">\n              <v-text-field\n                label=\"새 비밀번호\"\n                v-model=\"newPassword\"\n                type=\"password\"\n                prepend-icon=\"mdi-lock\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"비밀번호 확인\"\n                v-model=\"confirmPassword\"\n                type=\"password\"\n                prepend-icon=\"mdi-lock-check\"\n                required\n              ></v-text-field>\n              <v-btn block type=\"submit\" color=\"primary\">비밀번호 재설정</v-btn>\n            </v-form>\n            <v-alert v-if=\"errorMessage\" type=\"error\" class=\"mt-3\">{{ errorMessage }}</v-alert>\n            <v-alert v-if=\"successMessage\" type=\"success\" class=\"mt-3\">{{ successMessage }}</v-alert>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"ResetPasswordPage\",\n  data() {\n    return {\n      newPassword: \"\",\n      confirmPassword: \"\",\n      errorMessage: \"\",\n      successMessage: \"\",\n      token: \"\" // JWT 토큰은 URL에서 가져올 것으로 가정\n    };\n  },\n  created() {\n    // URL에서 토큰을 추출하여 서버로 GET 요청을 보내 토큰 확인\n    const urlParams = new URLSearchParams(window.location.search);\n    this.token = urlParams.get('token');\n    this.verifyToken();\n  },\n  methods: {\n    async verifyToken() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/user/reset-password`, {\n          params: { token: this.token }\n        });\n\n        if (response.data.status_code === 200) {\n          // 토큰이 확인되었으므로 비밀번호 재설정 폼을 활성화\n          this.successMessage = response.data.status_message;\n        } else {\n          this.errorMessage = '유효하지 않은 토큰입니다.';\n        }\n      } catch (error) {\n        this.errorMessage = '토큰 확인 중 오류가 발생했습니다.';\n      }\n    },\n\n    async resetPassword() {\n      if (this.newPassword.length <= 7) {\n        this.errorMessage = '비밀번호는 8자 이상이어야 합니다.';\n        this.successMessage = '';\n        return;\n      }\n\n      if (this.newPassword !== this.confirmPassword) {\n        this.errorMessage = '비밀번호가 일치하지 않습니다.';\n        this.successMessage = '';\n        return;\n      }\n\n      try {\n        const response = await axios.post(\n          `${process.env.VUE_APP_API_BASE_URL}/user/reset-password`,\n          {\n            token: this.token,\n            newPassword: this.newPassword,\n            confirmPassword: this.confirmPassword\n          }\n        );\n\n        if (response.status === 200) {\n          this.successMessage = '비밀번호가 재설정되었습니다.';\n          this.errorMessage = '';\n        } else {\n          this.errorMessage = `비밀번호 재설정에 실패했습니다: ${response.data?.message || 'Unknown error occurred'}`;\n          this.successMessage = '';\n        }\n      } catch (e) {\n        this.errorMessage = `비밀번호 재설정에 실패했습니다: ${e.response?.data?.message || 'Unknown error occurred'}`;\n        this.successMessage = '';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nbody {\n  background: linear-gradient(to right, #ff7e5f, #feb47b);\n  height: 100vh;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-family: Arial, sans-serif;\n}\n\n.v-card {\n  background-color: rgba(0, 0, 0, 0.7);\n}\n\n.v-btn {\n  background-color: #feb47b !important;\n}\n\n.white--text {\n  color: white !important;\n}\n</style>\n"],"mappings":";;;AAkCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,EAAE;MAClBC,KAAK,EAAE,EAAC,CAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,SAAQ,GAAI,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,IAAI,CAACN,KAAI,GAAIE,SAAS,CAACK,GAAG,CAAC,OAAO,CAAC;IACnC,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMjB,KAAK,CAACc,GAAG,CAC9B,GAAGI,OAAO,CAACC,GAAG,CAACC,oBAAoB,sBAAsB,EAAE;UAC3DC,MAAM,EAAE;YAAEd,KAAK,EAAE,IAAI,CAACA;UAAM;QAC9B,CAAC,CAAC;QAEF,IAAIU,QAAQ,CAACf,IAAI,CAACoB,WAAU,KAAM,GAAG,EAAE;UACrC;UACA,IAAI,CAAChB,cAAa,GAAIW,QAAQ,CAACf,IAAI,CAACqB,cAAc;QACpD,OAAO;UACL,IAAI,CAAClB,YAAW,GAAI,gBAAgB;QACtC;MACF,EAAE,OAAOmB,KAAK,EAAE;QACd,IAAI,CAACnB,YAAW,GAAI,qBAAqB;MAC3C;IACF,CAAC;IAED,MAAMoB,aAAaA,CAAA,EAAG;MACpB,IAAI,IAAI,CAACtB,WAAW,CAACuB,MAAK,IAAK,CAAC,EAAE;QAChC,IAAI,CAACrB,YAAW,GAAI,qBAAqB;QACzC,IAAI,CAACC,cAAa,GAAI,EAAE;QACxB;MACF;MAEA,IAAI,IAAI,CAACH,WAAU,KAAM,IAAI,CAACC,eAAe,EAAE;QAC7C,IAAI,CAACC,YAAW,GAAI,kBAAkB;QACtC,IAAI,CAACC,cAAa,GAAI,EAAE;QACxB;MACF;MAEA,IAAI;QACF,MAAMW,QAAO,GAAI,MAAMjB,KAAK,CAAC2B,IAAI,CAC/B,GAAGT,OAAO,CAACC,GAAG,CAACC,oBAAoB,sBAAsB,EACzD;UACEb,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBJ,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BC,eAAe,EAAE,IAAI,CAACA;QACxB,CACF,CAAC;QAED,IAAIa,QAAQ,CAACW,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACtB,cAAa,GAAI,iBAAiB;UACvC,IAAI,CAACD,YAAW,GAAI,EAAE;QACxB,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,qBAAqBY,QAAQ,CAACf,IAAI,EAAE2B,OAAM,IAAK,wBAAwB,EAAE;UAC7F,IAAI,CAACvB,cAAa,GAAI,EAAE;QAC1B;MACF,EAAE,OAAOwB,CAAC,EAAE;QACV,IAAI,CAACzB,YAAW,GAAI,qBAAqByB,CAAC,CAACb,QAAQ,EAAEf,IAAI,EAAE2B,OAAM,IAAK,wBAAwB,EAAE;QAChG,IAAI,CAACvB,cAAa,GAAI,EAAE;MAC1B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}