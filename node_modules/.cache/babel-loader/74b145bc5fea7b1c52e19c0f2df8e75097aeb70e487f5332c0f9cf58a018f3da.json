{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-439adaa3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"mb-0\"\n}, \"신고 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"ID\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"신고자 이메일\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"피신고자 이메일\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"사유\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"상세사유\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  key: 2\n};\nconst _hoisted_10 = {\n  key: 3\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"생성 시간\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = {\n  key: 1\n};\nconst _hoisted_14 = {\n  key: 2\n};\nconst _hoisted_15 = {\n  key: 3\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_simple_table = _resolveComponent(\"v-simple-table\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, {\n      class: \"elevation-2\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, {\n        class: \"d-flex align-center justify-space-between\"\n      }, {\n        default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_select, {\n          modelValue: $data.selectedType,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedType = $event),\n          items: $data.types,\n          \"item-title\": \"text\",\n          \"item-value\": \"value\",\n          label: \"신고 유형 필터\",\n          onChange: $options.filterReports,\n          density: \"compact\",\n          outlined: \"\",\n          class: \"filter-select\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_divider), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_simple_table, {\n          class: \"styled-table\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, _hoisted_6, $options.showQnaCol ? (_openBlock(), _createElementBlock(\"th\", _hoisted_7, \"QnA ID\")) : _createCommentVNode(\"v-if\", true), $options.showPostCol ? (_openBlock(), _createElementBlock(\"th\", _hoisted_8, \"Post ID\")) : _createCommentVNode(\"v-if\", true), $options.showCommentCol ? (_openBlock(), _createElementBlock(\"th\", _hoisted_9, \"Comment ID\")) : _createCommentVNode(\"v-if\", true), $options.showChatMessageCol ? (_openBlock(), _createElementBlock(\"th\", _hoisted_10, \"Chat Message ID\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" chatMessageId 컬럼 추가 \"), _hoisted_11])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredReports, report => {\n            return _openBlock(), _createElementBlock(\"tr\", {\n              key: report.id\n            }, [_createElementVNode(\"td\", null, _toDisplayString(report.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(report.reportEmail), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(report.suspectEmail), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatReason(report.reason)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(report.details), 1 /* TEXT */), $options.showQnaCol ? (_openBlock(), _createElementBlock(\"td\", _hoisted_12, _toDisplayString(report.qnaId), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $options.showPostCol ? (_openBlock(), _createElementBlock(\"td\", _hoisted_13, _toDisplayString(report.postId), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $options.showCommentCol ? (_openBlock(), _createElementBlock(\"td\", _hoisted_14, _toDisplayString(report.commentId), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $options.showChatMessageCol ? (_openBlock(), _createElementBlock(\"td\", _hoisted_15, _toDisplayString(report.chatMessageId), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" chatMessageId 데이터 표시 \"), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(report.createdTime)), 1 /* TEXT */)]);\n          }), 128 /* KEYED_FRAGMENT */))])]),\n          _: 1 /* STABLE */\n        }), $data.totalPages > 1 ? (_openBlock(), _createBlock(_component_v_pagination, {\n          key: 0,\n          currentPage: $data.page,\n          \"onUpdate:currentPage\": _cache[1] || (_cache[1] = $event => $data.page = $event),\n          length: $data.totalPages,\n          onInput: $options.fetchReports,\n          class: \"mt-4\",\n          \"align-self\": \"center\"\n        }, null, 8 /* PROPS */, [\"currentPage\", \"length\", \"onInput\"])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","key","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_component_v_select","modelValue","$data","selectedType","_cache","$event","items","types","label","onChange","$options","filterReports","density","outlined","_","_component_v_divider","_component_v_card_text","_component_v_simple_table","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","showQnaCol","_createElementBlock","_hoisted_7","_createCommentVNode","showPostCol","_hoisted_8","showCommentCol","_hoisted_9","showChatMessageCol","_hoisted_10","_hoisted_11","_Fragment","_renderList","filteredReports","report","id","_toDisplayString","reportEmail","suspectEmail","formatReason","reason","details","_hoisted_12","qnaId","_hoisted_13","postId","_hoisted_14","commentId","_hoisted_15","chatMessageId","formatDate","createdTime","totalPages","_component_v_pagination","currentPage","page","length","onInput","fetchReports"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/report/ReportList.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card class=\"elevation-2\">\n      <v-card-title class=\"d-flex align-center justify-space-between\">\n        <h3 class=\"mb-0\">신고 목록</h3>\n        <v-select\n          v-model=\"selectedType\"\n          :items=\"types\"\n          item-title=\"text\"\n          item-value=\"value\"\n          label=\"신고 유형 필터\"\n          @change=\"filterReports\"\n          density=\"compact\"\n          outlined\n          class=\"filter-select\"\n        ></v-select>\n      </v-card-title>\n\n      <v-divider></v-divider>\n\n      <v-card-text>\n        <v-simple-table class=\"styled-table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>신고자 이메일</th>\n              <th>피신고자 이메일</th>\n              <th>사유</th>\n              <th>상세사유</th>\n              <th v-if=\"showQnaCol\">QnA ID</th>\n              <th v-if=\"showPostCol\">Post ID</th>\n              <th v-if=\"showCommentCol\">Comment ID</th>\n              <th v-if=\"showChatMessageCol\">Chat Message ID</th> <!-- chatMessageId 컬럼 추가 -->\n              <th>생성 시간</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"report in filteredReports\" :key=\"report.id\">\n              <td>{{ report.id }}</td>\n              <td>{{ report.reportEmail }}</td>\n              <td>{{ report.suspectEmail }}</td>\n              <td>{{ formatReason(report.reason) }}</td>\n              <td>{{ report.details }}</td>\n              <td v-if=\"showQnaCol\">{{ report.qnaId }}</td>\n              <td v-if=\"showPostCol\">{{ report.postId }}</td>\n              <td v-if=\"showCommentCol\">{{ report.commentId }}</td>\n              <td v-if=\"showChatMessageCol\">{{ report.chatMessageId }}</td> <!-- chatMessageId 데이터 표시 -->\n              <td>{{ formatDate(report.createdTime) }}</td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n\n        <v-pagination\n          v-if=\"totalPages > 1\"\n          v-model:currentPage=\"page\"\n          :length=\"totalPages\"\n          @input=\"fetchReports\"\n          class=\"mt-4\"\n          align-self=\"center\"\n        ></v-pagination>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      reports: [],\n      selectedType: '',\n      types: [\n        { text: '전체', value: '' },\n        { text: 'QnA 신고', value: 'qna' },\n        { text: '게시글 신고', value: 'post' },\n        { text: '댓글 신고', value: 'comment' },\n        { text: '채팅 신고', value: 'chatMessage' } // chatMessage 타입 추가\n      ],\n      page: 1,\n      totalPages: 1,\n      loading: false,\n    };\n  },\n  computed: {\n    showQnaCol() {\n      return this.selectedType === '' || this.selectedType === 'qna';\n    },\n    showPostCol() {\n      return this.selectedType === '' || this.selectedType === 'post';\n    },\n    showCommentCol() {\n      return this.selectedType === '' || this.selectedType === 'comment';\n    },\n    showChatMessageCol() {\n      return this.selectedType === '' || this.selectedType === 'chatMessage';\n    },\n    filteredReports() {\n      return this.reports.filter(report => {\n        if (this.selectedType === 'qna' && !report.qnaId) return false;\n        if (this.selectedType === 'post' && !report.postId) return false;\n        if (this.selectedType === 'comment' && !report.commentId) return false;\n        if (this.selectedType === 'chatMessage' && !report.chatMessageId) return false; // 필터에 chatMessageId 추가\n        return true;\n      });\n    }\n  },\n  methods: {\n    async fetchReports() {\n      this.loading = true;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/report/list`, {\n          params: {\n            type: this.selectedType || '',\n            page: this.page - 1\n          }\n        });\n        this.reports = response.data.result.content;\n        this.totalPages = response.data.result.totalPages;\n      } catch (error) {\n        console.error('신고 목록을 불러오는 중 오류가 발생했습니다:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatReason(reason) {\n      const reasonMap = {\n        SPAM: '스팸홍보/도배글',\n        PORNOGRAPHY: '음란물',\n        ILLEGAL_INFORMATION: '불법정보 포함',\n        HARMFUL_TO_MINORS: '청소년에게 유해한 내용',\n        ABUSIVE_LANGUAGE: '욕설/생명경시/혐오/차별적 표현',\n        PRIVACY_VIOLATION: '개인정보 노출',\n        OFFENSIVE_CONTENT: '불쾌한 표현'\n      };\n      return reasonMap[reason] || '알 수 없는 이유';\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    filterReports() {\n      this.page = 1;\n      this.fetchReports();\n    }\n  },\n  created() {\n    this.fetchReports();\n  }\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.v-card-title {\n  font-size: 24px;\n  font-weight: bold;\n  color: #4a4a4a;\n}\n\n.filter-select {\n  max-width: 250px;\n}\n\n.v-card-text {\n  font-size: 16px;\n  padding-top: 0;\n}\n\n.styled-table {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 14px;\n  letter-spacing: 0.5px;\n}\n\n.styled-table th, \n.styled-table td {\n  padding: 15px 20px;\n  text-align: left;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.styled-table th {\n  background-color: #f5f5f5;\n  font-weight: bold;\n}\n\n.styled-table tr:hover {\n  background-color: #f1f1f1;\n}\n\n.v-pagination {\n  justify-content: center;\n}\n\n.v-pagination .v-btn {\n  color: #1976d2;\n}\n\n.v-pagination .v-btn:hover {\n  background-color: #e3f2fd;\n}\n\n.v-pagination .v-btn--active {\n  background-color: #1976d2;\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}