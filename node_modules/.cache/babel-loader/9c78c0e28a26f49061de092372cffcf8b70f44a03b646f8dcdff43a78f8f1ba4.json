{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SubjectDetailComponent from \"@/components/subject/SubjectDetailComponent.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    SubjectDetailComponent\n  },\n  data() {\n    return {\n      user: {},\n      subjectData: null,\n      // 초기 상태는 null\n      subjectId: \"\",\n      selectedMenu: \"SubjectDetail\",\n      // 기본으로 선택된 메뉴\n      lecture: {\n        lectureList: [],\n        page: {\n          pageSize: 5,\n          currentPage: 0\n        }\n      }\n    };\n  },\n  async created() {\n    this.subjectId = this.$route.params.id;\n    try {\n      await this.$store.dispatch(\"setUserAllInfoActions\");\n      this.user = this.$store.getters.getUserObj;\n    } catch (error) {\n      console.error(\"사용자 정보를 가져오는 중 오류가 발생했습니다:\", error);\n    }\n    this.getSubjectPerLectureList();\n  },\n  methods: {\n    async getSubjectPerLectureList() {\n      const params = {\n        size: this.lecture.page.pageSize,\n        page: this.lecture.page.currentPage\n      };\n      const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/subject/${this.subjectId}/lecture/list`, {\n        params\n      });\n      const additionalData = response.data.result.content;\n      this.lecture.lectureList = [...this.lecture.lectureList, ...additionalData];\n    },\n    setLectureCreateBtn() {\n      if (Number(this.user.userId) === this.subjectData.userTeacherId || this.user.role == \"ADMIN\") {\n        this.user.isAdmin = true;\n      } else {\n        this.user.isAdmin = false;\n      }\n    },\n    handleSubjectDataLoaded(data) {\n      this.subjectData = data;\n      if (this.subjectData && this.user.userId) {\n        this.setLectureCreateBtn();\n      }\n    },\n    goToDetail(lectureId) {\n      this.$router.push({\n        name: \"LectureDetail\",\n        params: {\n          id: lectureId\n        }\n      });\n    }\n  },\n  computed: {\n    isAdmin() {\n      return this.user.isAdmin;\n    }\n  }\n};","map":{"version":3,"names":["SubjectDetailComponent","axios","components","data","user","subjectData","subjectId","selectedMenu","lecture","lectureList","page","pageSize","currentPage","created","$route","params","id","$store","dispatch","getters","getUserObj","error","console","getSubjectPerLectureList","methods","size","response","get","process","env","VUE_APP_API_BASE_URL","additionalData","result","content","setLectureCreateBtn","Number","userId","userTeacherId","role","isAdmin","handleSubjectDataLoaded","goToDetail","lectureId","$router","push","name","computed"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectDetail.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- subjectData가 로드된 후에만 컴포넌트를 렌더링 -->\n      <SubjectDetailComponent @subject-data-loaded=\"handleSubjectDataLoaded\" v-model=\"selectedMenu\" />\n\n      <div class=\"btnWrap\" v-if=\"this.user.isAdmin\">\n        <router-link to=\"/lecture/create\">\n          <a href=\"javascript:void(0)\" class=\"btn_write\">강의 업로드하기</a>\n        </router-link>\n      </div>\n\n      <!-- 강의 목록 -->\n      <table class=\"tbl_list\">\n        <caption></caption>\n        <colgroup>\n          <col width=\"80\" />\n          <col width=\"\" />\n          <col width=\"140\" />\n          <col :width=\"isAdmin ? '180' : '280'\" /> <!-- 수강여부 열의 너비를 관리자가 아닐 때 넓힘 -->\n          <col v-if=\"isAdmin\" width=\"100\" /> <!-- 관리 열 -->\n        </colgroup>\n        <thead>\n          <tr>\n            <th>번호</th>\n            <th>제목</th>\n            <th>수강여부</th>\n            <th>강의시간</th>\n            <th>이동</th>\n            <th v-if=\"isAdmin\">관리</th> <!-- 관리 버튼 헤더 -->\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-if=\"lecture.lectureList.length === 0\">\n            <td :colspan=\"isAdmin ? 6 : 5\" class=\"text_center\">강의가 없습니다.</td>\n          </tr>\n          <tr v-for=\"(item, index) in lecture.lectureList\" :key=\"item.id\">\n            <td>{{ index + 1 }}</td>\n            <td class=\"text_left\">{{ item.title }}</td>\n            <td>{{ item.progress }}</td>\n            <td>{{ item.videoDuration }}</td>\n            <td>\n              <a v-if=\"user.userId\" href=\"javascript:void(0)\" class=\"btn_write\" @click=\"goToDetail(item.id)\">강의보기</a>\n            </td>\n            <td v-if=\"isAdmin\">\n              <a href=\"javascript:void(0)\" class=\"btn_write\" :to=\"`/lecture/create/${item.id}`\">수정</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport SubjectDetailComponent from \"@/components/subject/SubjectDetailComponent.vue\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    SubjectDetailComponent,\n  },\n  data() {\n    return {\n      user: {},\n      subjectData: null, // 초기 상태는 null\n      subjectId: \"\",\n      selectedMenu: \"SubjectDetail\", // 기본으로 선택된 메뉴\n      lecture: {\n        lectureList: [],\n        page: {\n          pageSize: 5,\n          currentPage: 0,\n        },\n      },\n    };\n  },\n  async created() {\n    this.subjectId = this.$route.params.id;\n    try {\n      await this.$store.dispatch(\"setUserAllInfoActions\");\n      this.user = this.$store.getters.getUserObj;\n    } catch (error) {\n      console.error(\"사용자 정보를 가져오는 중 오류가 발생했습니다:\", error);\n    }\n    this.getSubjectPerLectureList();\n  },\n  methods: {\n    async getSubjectPerLectureList() {\n      const params = {\n        size: this.lecture.page.pageSize,\n        page: this.lecture.page.currentPage,\n      };\n\n      const response = await axios.get(\n        `${process.env.VUE_APP_API_BASE_URL}/subject/${this.subjectId}/lecture/list`,\n        { params }\n      );\n      const additionalData = response.data.result.content;\n      this.lecture.lectureList = [...this.lecture.lectureList, ...additionalData];\n    },\n    setLectureCreateBtn() {\n      if(Number(this.user.userId) === this.subjectData.userTeacherId || this.user.role == \"ADMIN\"){\n        this.user.isAdmin = true;\n      } else {\n        this.user.isAdmin = false;\n      }\n    },\n    handleSubjectDataLoaded(data) {\n      this.subjectData = data;\n      if(this.subjectData && this.user.userId){\n        this.setLectureCreateBtn();\n      }\n    },\n    goToDetail(lectureId) {\n      this.$router.push({ name: \"LectureDetail\", params: { id: lectureId } });\n    },\n  },\n  computed: {\n    isAdmin() {\n      return this.user.isAdmin;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding-top: 20px;\n}\n\n.btnWrap {\n  text-align: right;\n  margin-bottom: 20px;\n}\n\n.btn_write {\n  background-color:   #f27885;\n  color: #fff;\n  padding: 10px 20px;\n  text-decoration: none;\n  border-radius: 5px;\n  font-size: 16px;\n  display: inline-block;\n  transition: background-color 0.3s ease;\n}\n\n<!-- .btn_write:hover {\n  background-color: #0056b3;\n} -->\n\n.tbl_list {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.tbl_list th,\n.tbl_list td {\n  border-top: 1px solid #ddd;\n  border-bottom: 1px solid #ddd;\n  padding: 10px;\n  text-align: left;\n  border-left: none; \n  border-right: none; \n}\n\n.tbl_list th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n\n.text_left {\n  text-align: left;\n}\n\n.text_center {\n  text-align: center;\n}\n</style>\n"],"mappings":";AAuDA,OAAOA,sBAAqB,MAAO,iDAAiD;AACpF,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,CAAC;MACRC,WAAW,EAAE,IAAI;MAAE;MACnBC,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE,eAAe;MAAE;MAC/BC,OAAO,EAAE;QACPC,WAAW,EAAE,EAAE;QACfC,IAAI,EAAE;UACJC,QAAQ,EAAE,CAAC;UACXC,WAAW,EAAE;QACf;MACF;IACF,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACP,SAAQ,GAAI,IAAI,CAACQ,MAAM,CAACC,MAAM,CAACC,EAAE;IACtC,IAAI;MACF,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,uBAAuB,CAAC;MACnD,IAAI,CAACd,IAAG,GAAI,IAAI,CAACa,MAAM,CAACE,OAAO,CAACC,UAAU;IAC5C,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;IACA,IAAI,CAACE,wBAAwB,CAAC,CAAC;EACjC,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,wBAAwBA,CAAA,EAAG;MAC/B,MAAMR,MAAK,GAAI;QACbU,IAAI,EAAE,IAAI,CAACjB,OAAO,CAACE,IAAI,CAACC,QAAQ;QAChCD,IAAI,EAAE,IAAI,CAACF,OAAO,CAACE,IAAI,CAACE;MAC1B,CAAC;MAED,MAAMc,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAC9B,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,YAAY,IAAI,CAACxB,SAAS,eAAe,EAC5E;QAAES;MAAO,CACX,CAAC;MACD,MAAMgB,cAAa,GAAIL,QAAQ,CAACvB,IAAI,CAAC6B,MAAM,CAACC,OAAO;MACnD,IAAI,CAACzB,OAAO,CAACC,WAAU,GAAI,CAAC,GAAG,IAAI,CAACD,OAAO,CAACC,WAAW,EAAE,GAAGsB,cAAc,CAAC;IAC7E,CAAC;IACDG,mBAAmBA,CAAA,EAAG;MACpB,IAAGC,MAAM,CAAC,IAAI,CAAC/B,IAAI,CAACgC,MAAM,MAAM,IAAI,CAAC/B,WAAW,CAACgC,aAAY,IAAK,IAAI,CAACjC,IAAI,CAACkC,IAAG,IAAK,OAAO,EAAC;QAC1F,IAAI,CAAClC,IAAI,CAACmC,OAAM,GAAI,IAAI;MAC1B,OAAO;QACL,IAAI,CAACnC,IAAI,CAACmC,OAAM,GAAI,KAAK;MAC3B;IACF,CAAC;IACDC,uBAAuBA,CAACrC,IAAI,EAAE;MAC5B,IAAI,CAACE,WAAU,GAAIF,IAAI;MACvB,IAAG,IAAI,CAACE,WAAU,IAAK,IAAI,CAACD,IAAI,CAACgC,MAAM,EAAC;QACtC,IAAI,CAACF,mBAAmB,CAAC,CAAC;MAC5B;IACF,CAAC;IACDO,UAAUA,CAACC,SAAS,EAAE;MACpB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAE9B,MAAM,EAAE;UAAEC,EAAE,EAAE0B;QAAU;MAAE,CAAC,CAAC;IACzE;EACF,CAAC;EACDI,QAAQ,EAAE;IACRP,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACnC,IAAI,CAACmC,OAAO;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}