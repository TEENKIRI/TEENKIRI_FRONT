{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode'; // Import the JWT decode library\n\nexport default {\n  data() {\n    return {\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n      userRole: '' // Store the user's role\n    };\n  },\n  created() {\n    this.fetchUserRole(); // Decode the token to get the user role\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.itemsPerPage\n          }\n        });\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    fetchUserRole() {\n      try {\n        const token = localStorage.getItem('authToken'); // Adjust this to where your token is stored\n        if (token) {\n          const decoded = jwt_decode(token);\n          this.userRole = decoded.role; // Assumes the role is stored as `role` in the token payload\n        }\n      } catch (error) {\n        console.error('토큰에서 역할을 가져오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    createNewQuestion() {\n      this.$router.push('/qna/create');\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    answerQuestion(id) {\n      this.$router.push(`/qna/answer/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    }\n  },\n  computed: {\n    canAnswerQuestion() {\n      return this.userRole === 'ADMIN' || this.userRole === 'teacher';\n    }\n  }\n};","map":{"version":3,"names":["axios","jwt_decode","data","questions","currentPage","totalPages","itemsPerPage","userRole","created","fetchUserRole","fetchQuestions","methods","response","get","process","env","VUE_APP_API_BASE_URL","params","page","size","result","content","console","error","token","localStorage","getItem","decoded","role","formatDate","date","options","year","month","day","hour","minute","Date","toLocaleDateString","createNewQuestion","$router","push","viewDetail","id","answerQuestion","goToPreviousPage","goToNextPage","goToPage","computed","canAnswerQuestion"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaList.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title>\n              <h3 class=\"board-title\">QnA 목록</h3>\n              <v-spacer></v-spacer>\n              <v-btn color=\"primary\" @click=\"createNewQuestion\" class=\"create-button\">질문 작성하기</v-btn>\n            </v-card-title>\n  \n            <v-card-text>\n              <v-simple-table>\n                <thead>\n                  <tr>\n                    <th>번호</th>\n                    <th>작성자</th>\n                    <th>제목</th>\n                    <th>생성 시간</th>\n                    <th>수정 시간</th>\n                    <th>답변하기</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(question, index) in questions\" :key=\"question.id\">\n                    <td>{{ index + 1 + (currentPage - 1) * itemsPerPage }}</td>\n                    <td>{{ question.questionUserName }}</td>\n                    <td @click=\"viewDetail(question.id)\" class=\"clickable\">{{ question.title }}</td>\n                    <td>{{ formatDate(question.createdTime) }}</td>\n                    <td>{{ formatDate(question.updatedTime) }}</td>\n                    <td>\n                      <v-btn v-if=\"canAnswerQuestion && !question.answerText\" small @click=\"answerQuestion(question.id)\" color=\"primary\">답변하기</v-btn>\n                    </td>\n                  </tr>\n                </tbody>\n              </v-simple-table>\n            </v-card-text>\n  \n            <v-card-actions class=\"pagination\">\n              <v-btn @click=\"goToPreviousPage\" :disabled=\"currentPage === 1\">Previous</v-btn>\n              <v-btn\n                v-for=\"page in totalPages\"\n                :key=\"page\"\n                @click=\"goToPage(page)\"\n                :class=\"{ active: currentPage === page }\"\n                class=\"pagination-page\"\n                text\n              >\n                {{ page }}\n              </v-btn>\n              <v-btn @click=\"goToNextPage\" :disabled=\"currentPage === totalPages\">Next</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import jwt_decode from 'jwt-decode'; // Import the JWT decode library\n  \n  export default {\n    data() {\n      return {\n        questions: [],\n        currentPage: 1,\n        totalPages: 1,\n        itemsPerPage: 10,\n        userRole: '', // Store the user's role\n      };\n    },\n    created() {\n      this.fetchUserRole(); // Decode the token to get the user role\n      this.fetchQuestions();\n    },\n    methods: {\n      async fetchQuestions() {\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n            params: {\n              page: this.currentPage - 1,\n              size: this.itemsPerPage,\n            }\n          });\n  \n          const result = response.data.result;\n          if (result && result.content) {\n            this.questions = result.content;\n            this.totalPages = result.totalPages;\n          } else {\n            console.error('올바르지 않은 데이터 형식입니다:', response.data);\n          }\n        } catch (error) {\n          console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n        }\n      },\n      fetchUserRole() {\n        try {\n          const token = localStorage.getItem('authToken'); // Adjust this to where your token is stored\n          if (token) {\n            const decoded = jwt_decode(token);\n            this.userRole = decoded.role; // Assumes the role is stored as `role` in the token payload\n          }\n        } catch (error) {\n          console.error('토큰에서 역할을 가져오는 중 오류가 발생했습니다:', error);\n        }\n      },\n      formatDate(date) {\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      createNewQuestion() {\n        this.$router.push('/qna/create');\n      },\n      viewDetail(id) {\n        this.$router.push(`/qna/detail/${id}`);\n      },\n      answerQuestion(id) {\n        this.$router.push(`/qna/answer/${id}`);\n      },\n      goToPreviousPage() {\n        if (this.currentPage > 1) {\n          this.currentPage--;\n          this.fetchQuestions();\n        }\n      },\n      goToNextPage() {\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n          this.fetchQuestions();\n        }\n      },\n      goToPage(page) {\n        if (page !== this.currentPage) {\n          this.currentPage = page;\n          this.fetchQuestions();\n        }\n      },\n    },\n    computed: {\n      canAnswerQuestion() {\n        return this.userRole === 'ADMIN' || this.userRole === 'teacher';\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding-top: 20px;\n  }\n  .board-title {\n    font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n  .create-button {\n    margin: 0 auto;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: white;\n  }\n  .create-button:hover {\n    background-color: #0056b3;\n  }\n  .clickable {\n    cursor: pointer;\n    color: blue;\n    text-decoration: underline;\n  }\n  .pagination {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 20px;\n  }\n  .pagination-page {\n    margin: 0 5px;\n    cursor: pointer;\n  }\n  .pagination-page.active {\n    font-weight: bold;\n    color: blue;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}