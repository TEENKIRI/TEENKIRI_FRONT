{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      questionDetail: null,\n      newComment: '',\n      error: null,\n      deleteDialog: false,\n      // 삭제 확인 다이얼로그 표시 여부\n      isQuestionAuthor: localStorage.getItem('userId') === this.$route.params.userId,\n      // 작성자인지 확인\n      isAdmin: localStorage.getItem('role') === 'ADMIN' // 관리자인지 확인\n    };\n  },\n  computed: {\n    canEditQuestion() {\n      return !this.questionDetail.answerText; // 답변이 없는 경우에만 수정 가능\n    }\n  },\n  created() {\n    this.fetchQuestionDetail();\n  },\n  methods: {\n    async fetchQuestionDetail() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.questionDetail = response.data.result;\n      } catch (error) {\n        this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n      }\n    },\n    async submitComment() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, {\n          qnaId: questionId,\n          content: this.newComment,\n          userId: localStorage.getItem('userId') // 로그인한 사용자 ID\n        });\n        this.newComment = '';\n        this.fetchQuestionDetail(); // 댓글 목록 갱신을 위해 상세 정보를 다시 불러옴\n      } catch (error) {\n        this.error = '댓글 등록에 실패했습니다.';\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/delete/${commentId}`);\n        this.fetchQuestionDetail(); // 댓글 목록 갱신을 위해 상세 정보를 다시 불러옴\n      } catch (error) {\n        this.error = '댓글 삭제에 실패했습니다.';\n      }\n    },\n    confirmDeleteQuestion() {\n      this.deleteDialog = true; // 삭제 확인 다이얼로그 표시\n    },\n    async deleteQuestion() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${questionId}`);\n        this.$router.push('/qna/list'); // 삭제 후 목록으로 돌아가기\n      } catch (error) {\n        this.error = '질문 삭제에 실패했습니다.';\n      }\n    },\n    editQuestion() {\n      this.$router.push(`/qna/edit/${this.$route.params.id}`); // 수정 페이지로 이동\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    goBack() {\n      this.$router.push('/qna/list');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","questionDetail","newComment","error","deleteDialog","isQuestionAuthor","localStorage","getItem","$route","params","userId","isAdmin","computed","canEditQuestion","answerText","created","fetchQuestionDetail","methods","questionId","id","response","get","process","env","VUE_APP_API_BASE_URL","result","message","submitComment","post","qnaId","content","deleteComment","commentId","confirmDeleteQuestion","deleteQuestion","$router","push","editQuestion","formatDate","date","options","year","month","day","hour","minute","Date","toLocaleDateString","goBack"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaDetail.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card v-if=\"questionDetail\">\n      <v-card-title>\n        <h3>{{ questionDetail.title }}</h3>\n        <!-- 질문 수정, 삭제 버튼 -->\n        <v-spacer></v-spacer>\n        <div v-if=\"isQuestionAuthor || isAdmin\">\n          <v-btn v-if=\"canEditQuestion\" color=\"warning\" @click=\"editQuestion\">수정</v-btn>\n          <v-btn color=\"error\" @click=\"confirmDeleteQuestion\">삭제</v-btn>\n        </div>\n      </v-card-title>\n\n      <v-card-text>\n        <v-row>\n          <v-col cols=\"12\">\n            <p><strong>작성자:</strong> {{ questionDetail.questionUserNickname }}</p>\n            <p><strong>작성 시간:</strong> {{ formatDate(questionDetail.createdTime) }}</p>\n            <v-img\n              v-if=\"questionDetail.qimageUrl\"\n              :src=\"questionDetail.qimageUrl\"\n              alt=\"질문 이미지\"\n              max-width=\"400\"\n              class=\"my-3\"\n            />\n            <p><strong>질문 내용:</strong></p>\n            <p>{{ questionDetail.questionText }}</p>\n          </v-col>\n\n          <v-col cols=\"12\" v-if=\"questionDetail.answerText\">\n            <v-divider class=\"my-3\"></v-divider>\n            <p><strong>답변자:</strong> {{ questionDetail.answeredByNickname }}</p>\n            <p><strong>답변 시간:</strong> {{ formatDate(questionDetail.answeredAt) }}</p>\n            <v-img\n              v-if=\"questionDetail.aimageUrl\"\n              :src=\"questionDetail.aimageUrl\"\n              alt=\"답변 이미지\"\n              max-width=\"400\"\n              class=\"my-3\"\n            />\n            <p><strong>답변 내용:</strong></p>\n            <p>{{ questionDetail.answerText }}</p>\n          </v-col>\n        </v-row>\n\n        <!-- 댓글 목록 -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-divider class=\"my-3\"></v-divider>\n            <h4>댓글</h4>\n            <v-list>\n              <v-list-item v-for=\"comment in questionDetail.comments\" :key=\"comment.id\">\n                <v-list-item-content>\n                  <v-list-item-title>{{ comment.nickname }} ({{ formatDate(comment.createdTime) }})</v-list-item-title>\n                  <v-list-item-subtitle>{{ comment.content }}</v-list-item-subtitle>\n                </v-list-item-content>\n                <!-- 댓글 삭제 버튼 (관리자만 볼 수 있음) -->\n                <v-list-item-action v-if=\"isAdmin\">\n                  <v-btn icon @click=\"deleteComment(comment.id)\">\n                    <v-icon>mdi-delete</v-icon>\n                  </v-btn>\n                </v-list-item-action>\n              </v-list-item>\n            </v-list>\n\n            <!-- 댓글 작성 -->\n            <v-form @submit.prevent=\"submitComment\">\n              <v-textarea\n                label=\"댓글 작성\"\n                v-model=\"newComment\"\n                required\n              />\n              <v-btn type=\"submit\" color=\"primary\">댓글 등록</v-btn>\n            </v-form>\n          </v-col>\n        </v-row>\n      </v-card-text>\n\n      <v-card-actions>\n        <v-btn color=\"primary\" @click=\"goBack\">목록으로 돌아가기</v-btn>\n      </v-card-actions>\n    </v-card>\n\n    <v-alert type=\"error\" v-else-if=\"error\">\n      {{ error }}\n    </v-alert>\n\n    <v-progress-circular v-else indeterminate color=\"primary\"></v-progress-circular>\n\n    <!-- 질문 삭제 확인 다이얼로그 -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title class=\"headline\">게시글 삭제</v-card-title>\n        <v-card-text>게시글을 정말 삭제하시겠습니까?</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"deleteDialog = false\">취소</v-btn>\n          <v-btn color=\"error\" text @click=\"deleteQuestion\">삭제</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      questionDetail: null,\n      newComment: '',\n      error: null,\n      deleteDialog: false, // 삭제 확인 다이얼로그 표시 여부\n      isQuestionAuthor: localStorage.getItem('userId') === this.$route.params.userId, // 작성자인지 확인\n      isAdmin: localStorage.getItem('role') === 'ADMIN', // 관리자인지 확인\n    };\n  },\n  computed: {\n    canEditQuestion() {\n      return !this.questionDetail.answerText; // 답변이 없는 경우에만 수정 가능\n    }\n  },\n  created() {\n    this.fetchQuestionDetail();\n  },\n  methods: {\n    async fetchQuestionDetail() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.questionDetail = response.data.result;\n      } catch (error) {\n        this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n      }\n    },\n    async submitComment() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, {\n          qnaId: questionId,\n          content: this.newComment,\n          userId: localStorage.getItem('userId') // 로그인한 사용자 ID\n        });\n        this.newComment = '';\n        this.fetchQuestionDetail(); // 댓글 목록 갱신을 위해 상세 정보를 다시 불러옴\n      } catch (error) {\n        this.error = '댓글 등록에 실패했습니다.';\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/delete/${commentId}`);\n        this.fetchQuestionDetail(); // 댓글 목록 갱신을 위해 상세 정보를 다시 불러옴\n      } catch (error) {\n        this.error = '댓글 삭제에 실패했습니다.';\n      }\n    },\n    confirmDeleteQuestion() {\n      this.deleteDialog = true; // 삭제 확인 다이얼로그 표시\n    },\n    async deleteQuestion() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${questionId}`);\n        this.$router.push('/qna/list'); // 삭제 후 목록으로 돌아가기\n      } catch (error) {\n        this.error = '질문 삭제에 실패했습니다.';\n      }\n    },\n    editQuestion() {\n      this.$router.push(`/qna/edit/${this.$route.params.id}`); // 수정 페이지로 이동\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    goBack() {\n      this.$router.push('/qna/list');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}