{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-60738bad\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"QnA 목록\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n              color: \"primary\",\n              onClick: $options.createNewQuestion\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"질문 작성하기\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_data_table, {\n              headers: $data.headers,\n              items: $data.questions,\n              loading: $data.loading,\n              \"items-per-page\": $data.options.itemsPerPage,\n              class: \"elevation-1\"\n            }, {\n              item: _withCtx(({\n                item\n              }) => [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(item.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.questionUserName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(item.createdTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(item.updatedTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n                small: \"\",\n                onClick: $event => $options.viewDetail(item.id),\n                color: \"primary\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"상세보기\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), !item.answerText ? (_openBlock(), _createBlock(_component_v_btn, {\n                key: 0,\n                small: \"\",\n                onClick: $event => $options.answerQuestion(item.id),\n                color: \"primary\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"답변하기\")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])])]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"headers\", \"items\", \"loading\", \"items-per-page\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_pagination, {\n              modelValue: $data.currentPage,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentPage = $event),\n              length: $data.totalPages,\n              onInput: $options.fetchQuestions,\n              class: \"justify-center\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"length\", \"onInput\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","_component_v_col","cols","_component_v_card","_component_v_card_title","_hoisted_1","_component_v_spacer","_component_v_btn","color","onClick","$options","createNewQuestion","_createTextVNode","_","_component_v_card_text","_component_v_data_table","headers","$data","items","questions","loading","options","itemsPerPage","class","item","_toDisplayString","id","questionUserName","title","formatDate","createdTime","updatedTime","small","$event","viewDetail","answerText","key","answerQuestion","_createCommentVNode","_component_v_card_actions","_component_v_pagination","modelValue","currentPage","_cache","length","totalPages","onInput","fetchQuestions"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaList.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title>\n              <h3>QnA 목록</h3>\n              <v-spacer></v-spacer>\n              <v-btn color=\"primary\" @click=\"createNewQuestion\">질문 작성하기</v-btn>\n            </v-card-title>\n  \n            <v-card-text>\n              <v-data-table\n                :headers=\"headers\"\n                :items=\"questions\"\n                :loading=\"loading\"\n                :items-per-page=\"options.itemsPerPage\"\n                class=\"elevation-1\"\n              >\n                <!-- 기본 슬롯을 사용하여 액션 버튼을 추가 -->\n                <template #item=\"{ item }\">\n                  <tr>\n                    <td>{{ item.id }}</td>\n                    <td>{{ item.questionUserName }}</td>\n                    <td>{{ item.title }}</td>\n                    <td>{{ formatDate(item.createdTime) }}</td>\n                    <td>{{ formatDate(item.updatedTime) }}</td>\n                    <td>\n                      <v-btn small @click=\"viewDetail(item.id)\" color=\"primary\">상세보기</v-btn>\n                      <v-btn v-if=\"!item.answerText\" small @click=\"answerQuestion(item.id)\" color=\"primary\">답변하기</v-btn>\n                    </td>\n                  </tr>\n                </template>\n              </v-data-table>\n            </v-card-text>\n  \n            <v-card-actions>\n              <v-pagination\n                v-model=\"currentPage\"\n                :length=\"totalPages\"\n                @input=\"fetchQuestions\"\n                class=\"justify-center\"\n              ></v-pagination>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        questions: [],\n        loading: false,\n        headers: [\n          { text: 'ID', value: 'id' },\n          { text: '작성자', value: 'questionUserName' },\n          { text: '제목', value: 'title' },\n          { text: '생성 시간', value: 'createdTime' },\n          { text: '수정 시간', value: 'updatedTime' },\n          { text: '상세보기', value: 'actions', sortable: false }\n        ],\n        options: {\n          itemsPerPage: 10,\n        },\n        currentPage: 1,\n        totalPages: 1,\n      };\n    },\n    created() {\n      this.fetchQuestions();\n    },\n    methods: {\n      async fetchQuestions() {\n        this.loading = true;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n            params: {\n              page: this.currentPage - 1,\n              size: this.options.itemsPerPage,\n            }\n          });\n          const data = response.data.qnaList;\n          this.questions = data.content;\n          this.totalPages = data.totalPages;\n        } catch (error) {\n          console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n      formatDate(date) {\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      createNewQuestion() {\n        this.$router.push('/qna/create');\n      },\n      viewDetail(id) {\n        this.$router.push(`/qna/detail/${id}`);\n      },\n      answerQuestion(id) {\n        this.$router.push(`/qna/answer/${id}`);\n      },\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 800px;\n    margin: 0 auto;\n    padding-top: 20px;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}