{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from 'axios';\nimport ReportCreate from '../report/ReportCreate.vue';\nexport default {\n  components: {\n    ReportCreate\n  },\n  data() {\n    return {\n      questionDetail: null,\n      newComment: '',\n      error: null,\n      deleteDialog: false,\n      userEmail: '',\n      userRole: '',\n      showReportModal: false,\n      reportData: {},\n      activeComment: null // 현재 열려있는 conLayer의 댓글 ID\n    };\n  },\n  computed: {\n    isQuestionAuthor() {\n      return this.questionDetail && this.questionDetail.userEmail === this.userEmail;\n    },\n    isAdmin() {\n      return this.userRole === 'ADMIN';\n    },\n    canEditAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    },\n    canAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    }\n  },\n  created() {\n    this.decodeToken();\n    this.fetchQuestionDetail();\n  },\n  methods: {\n    decodeToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const decoded = this.parseJwt(token);\n        this.userEmail = decoded.sub;\n        this.userRole = decoded.role;\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    },\n    async fetchQuestionDetail() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.questionDetail = response.data.result;\n      } catch (error) {\n        this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n      }\n    },\n    async submitComment() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, {\n          qnaId: questionId,\n          content: this.newComment,\n          userId: localStorage.getItem('userId')\n        });\n        this.newComment = '';\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 등록에 실패했습니다.';\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/delete/${commentId}`);\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 삭제에 실패했습니다.';\n      }\n    },\n    toggleCommentOptions(commentId) {\n      if (this.activeComment === commentId) {\n        this.activeComment = null;\n      } else {\n        this.activeComment = commentId;\n      }\n    },\n    confirmDeleteQuestion() {\n      this.deleteDialog = true;\n    },\n    async deleteQuestion() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${questionId}`);\n        this.$router.push('/qna/list');\n      } catch (error) {\n        this.error = '질문 삭제에 실패했습니다.';\n      }\n    },\n    editQuestion() {\n      this.$router.push(`/qna/update/question/${this.$route.params.id}`);\n    },\n    editAnswer() {\n      this.$router.push(`/qna/update/answer/${this.$route.params.id}`);\n    },\n    goToAnswer() {\n      this.$router.push(`/qna/answer/${this.$route.params.id}`);\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    goBack() {\n      this.$router.push('/qna/list');\n    },\n    openReportModal(type, comment = null) {\n      if (type === 'question') {\n        this.reportData = {\n          qnaId: this.questionDetail.id\n        };\n      } else if (type === 'comment' && comment) {\n        this.reportData = {\n          qnaId: this.questionDetail.id,\n          commentId: comment.id\n        };\n      }\n      this.showReportModal = true;\n    },\n    closeReportModal() {\n      this.showReportModal = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","ReportCreate","components","data","questionDetail","newComment","error","deleteDialog","userEmail","userRole","showReportModal","reportData","activeComment","computed","isQuestionAuthor","isAdmin","canEditAnswer","canAnswer","created","decodeToken","fetchQuestionDetail","methods","token","localStorage","getItem","decoded","parseJwt","sub","role","$router","push","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","questionId","$route","params","id","response","get","process","env","VUE_APP_API_BASE_URL","result","message","submitComment","post","qnaId","content","userId","deleteComment","commentId","toggleCommentOptions","confirmDeleteQuestion","deleteQuestion","editQuestion","editAnswer","goToAnswer","formatDate","date","options","year","month","day","hour","minute","Date","toLocaleDateString","goBack","openReportModal","type","comment","closeReportModal"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaDetail.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <!-- 질문 상세 카드 -->\n    <v-card class=\"pa-5\" v-if=\"questionDetail\">\n      <!-- 제목 및 버튼들 -->\n      <div class=\"d-flex justify-space-between align-center mb-3\">\n        <h2 class=\"text-h5 font-weight-bold\">{{ questionDetail.title }}</h2>\n        <div>\n          <v-btn v-if=\"isQuestionAuthor\" class=\"btn_st2 mr-2\" @click=\"editQuestion\">수정</v-btn>\n          <v-btn v-if=\"isAdmin\" class=\"btn_del mr-2\" @click=\"confirmDeleteQuestion\">삭제</v-btn>\n          <v-btn class=\"btn_st2 mr-2\" @click=\"openReportModal('question')\">신고</v-btn>\n          <v-btn v-if=\"canAnswer\" class=\"btn_write mr-2\" @click=\"goToAnswer\">답변</v-btn>\n        </div>\n      </div>\n\n      <!-- 질문 정보 -->\n      <v-row class=\"mb-5\">\n        <v-col cols=\"12\" md=\"4\">\n          <v-img v-if=\"questionDetail.qimageUrl\" :src=\"questionDetail.qimageUrl\" alt=\"질문 이미지\" class=\"mb-3 rounded\" />\n        </v-col>\n        <v-col cols=\"12\" md=\"8\">\n          <v-card flat>\n            <v-card-text>\n              <div class=\"text-body-1\">\n                <p><strong>작성자:</strong> {{ questionDetail.questionUserNickname }}</p>\n                <p><strong>작성 시간:</strong> {{ formatDate(questionDetail.createdTime) }}</p>\n                <p><strong>수정 시간:</strong> {{ formatDate(questionDetail.updatedTime) }}</p>\n                <p><strong>질문 내용:</strong> {{ questionDetail.questionText }}</p>\n                <p><strong>강좌명:</strong> {{ questionDetail.subjectTitle }}</p>\n              </div>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <!-- 답변 정보 -->\n      <v-row v-if=\"questionDetail.answerText\" class=\"mb-5\">\n        <v-divider></v-divider>\n        <v-col cols=\"12\" md=\"4\">\n          <v-img v-if=\"questionDetail.aimageUrl\" :src=\"questionDetail.aimageUrl\" alt=\"답변 이미지\" class=\"mb-3 rounded\" />\n        </v-col>\n        <v-col cols=\"12\" md=\"8\">\n          <v-card flat>\n            <v-card-text>\n              <div class=\"text-body-1\">\n                <p><strong>답변자:</strong> {{ questionDetail.answeredByNickname }}</p>\n                <p><strong>답변 시간:</strong> {{ formatDate(questionDetail.answeredAt) }}</p>\n                <p><strong>답변 내용:</strong> {{ questionDetail.answerText }}</p>\n              </div>\n            </v-card-text>\n            <v-card-actions class=\"d-flex justify-end\">\n              <v-btn v-if=\"canEditAnswer\" class=\"btn_st2\" @click=\"editAnswer\">답변 수정</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <!-- 댓글 목록 -->\n      <v-row>\n        <v-divider></v-divider>\n        <v-col cols=\"12\">\n          <h4 class=\"text-h6 font-weight-bold\">댓글</h4>\n          <v-list two-line>\n            <v-list-item v-for=\"comment in questionDetail.comments\" :key=\"comment.id\" class=\"py-2\">\n              <v-list-item-content>\n                <v-list-item-title class=\"text-subtitle-1\">{{ comment.nickname }}</v-list-item-title>\n                <v-list-item-subtitle>{{ formatDate(comment.createdTime) }} - {{ comment.content }}</v-list-item-subtitle>\n              </v-list-item-content>\n              <v-list-item-action>\n                <v-btn icon @click=\"toggleCommentOptions(comment.id)\" small>\n                  <v-icon small>mdi-dots-vertical</v-icon>\n                </v-btn>\n                <div v-if=\"activeComment === comment.id\" class=\"conLayer\">\n                  <a v-if=\"isAdmin\" href=\"javascript:void(0)\" class=\"btn_board_option\" @click=\"deleteComment(comment.id)\">삭제</a>\n                  <a href=\"javascript:void(0)\" class=\"btn_board_option\" @click=\"openReportModal('comment', comment)\">신고</a>\n                </div>\n              </v-list-item-action>\n            </v-list-item>\n          </v-list>\n\n          <!-- 댓글 작성 -->\n          <v-form @submit.prevent=\"submitComment\" class=\"mt-3\">\n            <v-textarea label=\"댓글 작성\" v-model=\"newComment\" outlined required></v-textarea>\n            <div class=\"mt-3 d-flex justify-end\">\n              <v-btn type=\"submit\" class=\"mt-2 btn_comment_ok\">댓글작성</v-btn>\n            </div>\n          </v-form>\n        </v-col>\n      </v-row>\n\n      <!-- 액션 버튼들 -->\n      <v-card-actions class=\"d-flex justify-end\">\n        <v-btn class=\"mr-2 btn_solid\" @click=\"goBack\">목록으로</v-btn>\n        <v-btn v-if=\"isQuestionAuthor\" class=\"mr-2 btn_st2\" @click=\"editQuestion\">수정</v-btn>\n        <v-btn v-if=\"isAdmin\" class=\"mr-2 btn_del\" @click=\"confirmDeleteQuestion\">삭제</v-btn>\n        <v-btn v-if=\"canAnswer\" class=\"mr-2 btn_write\" @click=\"goToAnswer\">답변</v-btn>\n      </v-card-actions>\n    </v-card>\n\n    <!-- 에러 및 로딩 상태 -->\n    <v-alert type=\"error\" v-if=\"error\">{{ error }}</v-alert>\n    <v-progress-circular v-else indeterminate color=\"primary\"></v-progress-circular>\n\n    <!-- 삭제 확인 다이얼로그 -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title class=\"headline\">게시글 삭제</v-card-title>\n        <v-card-text>게시글을 정말 삭제하시겠습니까?</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn class=\"btn_solid\" text @click=\"deleteDialog = false\">취소</v-btn>\n          <v-btn class=\"btn_del\" text @click=\"deleteQuestion\">삭제</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- 신고 모달 -->\n    <ReportCreate v-if=\"showReportModal\" :postId=\"reportData.postId\" :commentId=\"reportData.commentId\" :qnaId=\"reportData.qnaId\" @close=\"closeReportModal\" />\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport ReportCreate from '../report/ReportCreate.vue';\n\nexport default {\n  components: {\n    ReportCreate,\n  },\n  data() {\n    return {\n      questionDetail: null,\n      newComment: '',\n      error: null,\n      deleteDialog: false,\n      userEmail: '',\n      userRole: '',\n      showReportModal: false,\n      reportData: {},\n      activeComment: null, // 현재 열려있는 conLayer의 댓글 ID\n    };\n  },\n  computed: {\n    isQuestionAuthor() {\n      return this.questionDetail && this.questionDetail.userEmail === this.userEmail;\n    },\n    isAdmin() {\n      return this.userRole === 'ADMIN';\n    },\n    canEditAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    },\n    canAnswer() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    },\n  },\n  created() {\n    this.decodeToken();\n    this.fetchQuestionDetail();\n  },\n  methods: {\n    decodeToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const decoded = this.parseJwt(token);\n        this.userEmail = decoded.sub;\n        this.userRole = decoded.role;\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(\n          atob(base64)\n            .split('')\n            .map(function(c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n        );\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    },\n    async fetchQuestionDetail() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.questionDetail = response.data.result;\n      } catch (error) {\n        this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n      }\n    },\n    async submitComment() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, {\n          qnaId: questionId,\n          content: this.newComment,\n          userId: localStorage.getItem('userId'),\n        });\n        this.newComment = '';\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 등록에 실패했습니다.';\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/delete/${commentId}`);\n        this.fetchQuestionDetail();\n      } catch (error) {\n        this.error = '댓글 삭제에 실패했습니다.';\n      }\n    },\n    toggleCommentOptions(commentId) {\n      if (this.activeComment === commentId) {\n        this.activeComment = null;\n      } else {\n        this.activeComment = commentId;\n      }\n    },\n    confirmDeleteQuestion() {\n      this.deleteDialog = true;\n    },\n    async deleteQuestion() {\n      const questionId = this.$route.params.id;\n      try {\n        await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${questionId}`);\n        this.$router.push('/qna/list');\n      } catch (error) {\n        this.error = '질문 삭제에 실패했습니다.';\n      }\n    },\n    editQuestion() {\n      this.$router.push(`/qna/update/question/${this.$route.params.id}`);\n    },\n    editAnswer() {\n      this.$router.push(`/qna/update/answer/${this.$route.params.id}`);\n    },\n    goToAnswer() {\n      this.$router.push(`/qna/answer/${this.$route.params.id}`);\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    goBack() {\n      this.$router.push('/qna/list');\n    },\n    openReportModal(type, comment = null) {\n      if (type === 'question') {\n        this.reportData = {\n          qnaId: this.questionDetail.id,\n        };\n      } else if (type === 'comment' && comment) {\n        this.reportData = {\n          qnaId: this.questionDetail.id,\n          commentId: comment.id,\n        };\n      }\n      this.showReportModal = true;\n    },\n    closeReportModal() {\n      this.showReportModal = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 900px;\n  margin: 0 auto;\n}\n\n.text-body-1 {\n  font-size: 1rem;\n  line-height: 1.5;\n  color: #555;\n}\n\nh2.text-h5 {\n  color: #333;\n}\n\n.v-btn {\n  font-weight: bold;\n  border-radius: 0;\n  min-width: 100px;\n}\n\n.v-btn.primary {\n  background-color: #1e88e5 !important;\n  color: white;\n}\n\n.v-btn.teal.darken-3 {\n  background-color: #00796b !important;\n  color: white;\n}\n\n.v-btn.red.darken-2 {\n  background-color: #d32f2f !important;\n  color: white;\n}\n\n.v-btn.secondary {\n  background-color: #424242 !important;\n  color: white;\n}\n\n.v-btn:hover {\n  opacity: 0.9;\n}\n\n.v-list-item-title {\n  font-weight: bold;\n}\n\n.v-list-item-subtitle {\n  color: #757575;\n}\n\n.v-card-actions {\n  padding: 0;\n}\n\n.v-img {\n  border-radius: 10px;\n}\n\n.btn_solid {\n  background-color: #00796b !important;\n  color: white;\n}\n\n.btn_st2 {\n  background-color: #424242 !important;\n  color: white;\n}\n\n.btn_del {\n  background-color: #d32f2f !important;\n  color: white;\n}\n\n.btn_write {\n  background-color: #1e88e5 !important;\n  color: white;\n}\n\n.btn_comment_ok {\n  background-color: #1e88e5 !important;\n  color: white;\n}\n\n.btn_alert {\n  background-color: #ffb300 !important;\n  color: white;\n}\n\n.conLayer {\n  display: inline-block;\n  background-color: white;\n  border: 1px solid #ccc;\n  position: absolute;\n  z-index: 1;\n  right: 0;\n}\n\n.btn_board_option {\n  display: block;\n  padding: 5px 10px;\n  color: #424242;\n  text-decoration: none;\n  background-color: white;\n  border-bottom: 1px solid #ccc;\n}\n\n.btn_board_option:hover {\n  background-color: #f5f5f5;\n  color: black;\n}\n\n.v-icon {\n  font-size: 18px !important;\n}\n</style>\n"],"mappings":";;AA0HA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,YAAW,MAAO,4BAA4B;AAErD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,IAAI;MACpBC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,KAAK;MACtBC,UAAU,EAAE,CAAC,CAAC;MACdC,aAAa,EAAE,IAAI,CAAE;IACvB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACV,cAAa,IAAK,IAAI,CAACA,cAAc,CAACI,SAAQ,KAAM,IAAI,CAACA,SAAS;IAChF,CAAC;IACDO,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACN,QAAO,KAAM,OAAO;IAClC,CAAC;IACDO,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACP,QAAO,KAAM,OAAM,IAAK,IAAI,CAACA,QAAO,KAAM,SAAS;IACjE,CAAC;IACDQ,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACR,QAAO,KAAM,OAAM,IAAK,IAAI,CAACA,QAAO,KAAM,SAAS;IACjE;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACPF,WAAWA,CAAA,EAAG;MACZ,MAAMG,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,MAAMG,OAAM,GAAI,IAAI,CAACC,QAAQ,CAACJ,KAAK,CAAC;QACpC,IAAI,CAACd,SAAQ,GAAIiB,OAAO,CAACE,GAAG;QAC5B,IAAI,CAAClB,QAAO,GAAIgB,OAAO,CAACG,IAAI;MAC9B,OAAO;QACL,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B;IACF,CAAC;IACDJ,QAAQA,CAACJ,KAAK,EAAE;MACd,IAAI;QACF,MAAMS,SAAQ,GAAIT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrC,MAAMC,MAAK,GAAIF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;QAC9D,MAAMC,WAAU,GAAIC,kBAAkB,CACpCC,IAAI,CAACJ,MAAM,EACRD,KAAK,CAAC,EAAE,EACRM,GAAG,CAAC,UAASC,CAAC,EAAE;UACf,OAAO,GAAE,GAAI,CAAC,IAAG,GAAIA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,EACAC,IAAI,CAAC,EAAE,CACZ,CAAC;QACD,OAAOC,IAAI,CAACC,KAAK,CAACV,WAAW,CAAC;MAChC,EAAE,OAAO7B,KAAK,EAAE;QACd,OAAO,IAAI;MACb;IACF,CAAC;IACD,MAAMc,mBAAmBA,CAAA,EAAG;MAC1B,MAAM0B,UAAS,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACxC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMlD,KAAK,CAACmD,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,eAAeR,UAAU,EAAE,CAAC;QAChG,IAAI,CAAC1C,cAAa,GAAI8C,QAAQ,CAAC/C,IAAI,CAACoD,MAAM;MAC5C,EAAE,OAAOjD,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAAC4C,QAAO,GAAI5C,KAAK,CAAC4C,QAAQ,CAAC/C,IAAI,CAACqD,OAAM,GAAI,2BAA2B;MACzF;IACF,CAAC;IACD,MAAMC,aAAaA,CAAA,EAAG;MACpB,MAAMX,UAAS,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACxC,IAAI;QACF,MAAMjD,KAAK,CAAC0D,IAAI,CAAC,GAAGN,OAAO,CAACC,GAAG,CAACC,oBAAoB,iBAAiB,EAAE;UACrEK,KAAK,EAAEb,UAAU;UACjBc,OAAO,EAAE,IAAI,CAACvD,UAAU;UACxBwD,MAAM,EAAEtC,YAAY,CAACC,OAAO,CAAC,QAAQ;QACvC,CAAC,CAAC;QACF,IAAI,CAACnB,UAAS,GAAI,EAAE;QACpB,IAAI,CAACe,mBAAmB,CAAC,CAAC;MAC5B,EAAE,OAAOd,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,gBAAgB;MAC/B;IACF,CAAC;IACD,MAAMwD,aAAaA,CAACC,SAAS,EAAE;MAC7B,IAAI;QACF,MAAM/D,KAAK,CAACmD,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,mBAAmBS,SAAS,EAAE,CAAC;QAClF,IAAI,CAAC3C,mBAAmB,CAAC,CAAC;MAC5B,EAAE,OAAOd,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,gBAAgB;MAC/B;IACF,CAAC;IACD0D,oBAAoBA,CAACD,SAAS,EAAE;MAC9B,IAAI,IAAI,CAACnD,aAAY,KAAMmD,SAAS,EAAE;QACpC,IAAI,CAACnD,aAAY,GAAI,IAAI;MAC3B,OAAO;QACL,IAAI,CAACA,aAAY,GAAImD,SAAS;MAChC;IACF,CAAC;IACDE,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAAC1D,YAAW,GAAI,IAAI;IAC1B,CAAC;IACD,MAAM2D,cAAcA,CAAA,EAAG;MACrB,MAAMpB,UAAS,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACxC,IAAI;QACF,MAAMjD,KAAK,CAACmD,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,eAAeR,UAAU,EAAE,CAAC;QAC/E,IAAI,CAACjB,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;MAChC,EAAE,OAAOxB,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,gBAAgB;MAC/B;IACF,CAAC;IACD6D,YAAYA,CAAA,EAAG;MACb,IAAI,CAACtC,OAAO,CAACC,IAAI,CAAC,wBAAwB,IAAI,CAACiB,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE,CAAC;IACpE,CAAC;IACDmB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACvC,OAAO,CAACC,IAAI,CAAC,sBAAsB,IAAI,CAACiB,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE,CAAC;IAClE,CAAC;IACDoB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACxC,OAAO,CAACC,IAAI,CAAC,eAAe,IAAI,CAACiB,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE,CAAC;IAC3D,CAAC;IACDqB,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;MACpB,MAAMC,OAAM,GAAI;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,GAAG,EAAE,SAAS;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC;MACzG,OAAO,IAAIC,IAAI,CAACP,IAAI,CAAC,CAACQ,kBAAkB,CAAC,OAAO,EAAEP,OAAO,CAAC;IAC5D,CAAC;IACDQ,MAAMA,CAAA,EAAG;MACP,IAAI,CAACnD,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IACDmD,eAAeA,CAACC,IAAI,EAAEC,OAAM,GAAI,IAAI,EAAE;MACpC,IAAID,IAAG,KAAM,UAAU,EAAE;QACvB,IAAI,CAACvE,UAAS,GAAI;UAChBgD,KAAK,EAAE,IAAI,CAACvD,cAAc,CAAC6C;QAC7B,CAAC;MACH,OAAO,IAAIiC,IAAG,KAAM,SAAQ,IAAKC,OAAO,EAAE;QACxC,IAAI,CAACxE,UAAS,GAAI;UAChBgD,KAAK,EAAE,IAAI,CAACvD,cAAc,CAAC6C,EAAE;UAC7Bc,SAAS,EAAEoB,OAAO,CAAClC;QACrB,CAAC;MACH;MACA,IAAI,CAACvC,eAAc,GAAI,IAAI;IAC7B,CAAC;IACD0E,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAC1E,eAAc,GAAI,KAAK;IAC9B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}