{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"PasswordResetPage\",\n  data() {\n    return {\n      email: \"\"\n    };\n  },\n  methods: {\n    async sendResetLink() {\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/reset-password`, {\n          email: this.email\n        });\n        alert('비밀번호 재설정 링크가 이메일로 발송되었습니다.');\n        console.log(response);\n      } catch (e) {\n        alert('비밀번호 재설정 요청에 실패하였습니다.');\n        console.log(e);\n        const error_message = e.response?.data?.status_message || '알 수 없는 오류가 발생했습니다.';\n        alert(error_message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","methods","sendResetLink","response","post","process","env","VUE_APP_API_BASE_URL","alert","console","log","e","error_message","status_message"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/FindPasswordPage.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row justify=\"center\">\n        <v-col cols=\"12\" sm=\"6\" md=\"8\">\n          <v-card>\n            <v-card-title class=\"text-h5 text-center\">비밀번호 찾기</v-card-title>\n            <v-card-text>\n              <v-form @submit.prevent=\"sendResetLink\">\n                <v-text-field\n                  label=\"이메일 주소\"\n                  v-model=\"email\"\n                  type=\"email\"\n                  prepend-icon=\"mdi-email\"\n                  required\n                ></v-text-field>\n                <v-btn block type=\"submit\" color=\"primary\">비밀번호 재설정 링크 보내기</v-btn>\n                <v-divider class=\"my-4\"></v-divider>\n                <v-btn block @click=\"$router.push('/login')\" color=\"secondary\">로그인 페이지로 돌아가기</v-btn>\n              </v-form>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: \"PasswordResetPage\",\n    data() {\n      return {\n        email: \"\"\n      };\n    },\n    methods: {\n      async sendResetLink() {\n        try {\n          const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/reset-password`, { email: this.email });\n          alert('비밀번호 재설정 링크가 이메일로 발송되었습니다.');\n          console.log(response);\n        } catch (e) {\n          alert('비밀번호 재설정 요청에 실패하였습니다.');\n          console.log(e);\n          const error_message = e.response?.data?.status_message || '알 수 없는 오류가 발생했습니다.';\n          alert(error_message);\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  /* 스타일은 필요에 따라 조정하세요 */\n  </style>\n  "],"mappings":"AA2BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,sBAAsB,EAAE;UAAEP,KAAK,EAAE,IAAI,CAACA;QAAM,CAAC,CAAC;QACnHQ,KAAK,CAAC,4BAA4B,CAAC;QACnCC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;MACvB,EAAE,OAAOQ,CAAC,EAAE;QACVH,KAAK,CAAC,uBAAuB,CAAC;QAC9BC,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;QACd,MAAMC,aAAY,GAAID,CAAC,CAACR,QAAQ,EAAEJ,IAAI,EAAEc,cAAa,IAAK,oBAAoB;QAC9EL,KAAK,CAACI,aAAa,CAAC;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}