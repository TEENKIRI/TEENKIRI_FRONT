{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"th\", null, \"번호\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"th\", null, \"수강여부\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"th\", null, \"강의시간\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"th\", null, \"이동\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SubjectDetailComponent = _resolveComponent(\"SubjectDetailComponent\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_table = _resolveComponent(\"v-table\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createCommentVNode(\" subjectData가 로드된 후에만 컴포넌트를 렌더링 \"), _createVNode(_component_SubjectDetailComponent, {\n        onSubjectDataLoaded: $options.handleSubjectDataLoaded,\n        modelValue: $data.selectedMenu,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedMenu = $event)\n      }, null, 8 /* PROPS */, [\"onSubjectDataLoaded\", \"modelValue\"]), _createCommentVNode(\" <SubjectDetailComponent  /> \"), this.user.isAdmin ? (_openBlock(), _createBlock(_component_v_row, {\n        key: 0\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_col, null, {\n          default: _withCtx(() => [_createVNode(_component_router_link, {\n            to: \"/lecture/create\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, null, {\n              default: _withCtx(() => [_createTextVNode(\"강의 업로드하기\")]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_row, null, {\n        default: _withCtx(() => [_createVNode(_component_v_col, null, {\n          default: _withCtx(() => [_createVNode(_component_v_table, null, {\n            default: _withCtx(() => [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_1, _hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, this.user.isAdmin ? (_openBlock(), _createElementBlock(\"th\", _hoisted_6, \"관리\")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.lecture.lectureList, item => {\n              return _openBlock(), _createElementBlock(\"tr\", {\n                key: item.id\n              }, [_createElementVNode(\"td\", null, _toDisplayString(item.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.progress), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.videoDuration), 1 /* TEXT */), _createElementVNode(\"td\", null, [$data.user.userId ? (_openBlock(), _createBlock(_component_v_btn, {\n                key: 0,\n                onClick: $event => $options.goToDetail(item.id)\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"강의보기 \")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]), this.user.isAdmin ? (_openBlock(), _createElementBlock(\"td\", _hoisted_7, [_createVNode(_component_v_btn, {\n                to: `/lecture/create/${item.id}`\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"수정 \")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])])) : _createCommentVNode(\"v-if\", true)]);\n            }), 128 /* KEYED_FRAGMENT */))])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 강의 목록에 해당하는 내용 \")]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","key","_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_container","_createCommentVNode","_component_SubjectDetailComponent","onSubjectDataLoaded","$options","handleSubjectDataLoaded","modelValue","$data","selectedMenu","_cache","$event","user","isAdmin","_component_v_row","_component_v_col","_component_router_link","to","_component_v_btn","_createTextVNode","_","_component_v_table","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","_hoisted_6","_Fragment","_renderList","lecture","lectureList","item","id","_toDisplayString","title","progress","videoDuration","userId","onClick","goToDetail","_hoisted_7"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectDetail.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- subjectData가 로드된 후에만 컴포넌트를 렌더링 -->\n      <SubjectDetailComponent @subject-data-loaded=\"handleSubjectDataLoaded\" v-model=\"selectedMenu\" />\n      <!-- <SubjectDetailComponent  /> -->\n\n      <v-row v-if=\"this.user.isAdmin\">\n        <v-col>\n        <router-link to=\"/lecture/create\">\n          <v-btn>강의 업로드하기</v-btn>\n        </router-link>\n        </v-col>\n      </v-row>\n\n      <v-row>\n        <v-col>\n          <v-table>\n            <thead>\n              <tr>\n                <th>번호</th>\n                <th>제목</th>\n                <th>수강여부</th>\n                <th>강의시간</th>\n                <th>이동</th>\n                <th v-if=\"this.user.isAdmin\">관리</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"item in lecture.lectureList\" :key=\"item.id\">\n                <td>{{ item.id }}</td>\n                <td>{{ item.title }}</td>\n                <td>{{ item.progress }}</td>\n                <td>{{ item.videoDuration }}</td>\n                <td>\n                  <v-btn v-if=\"user.userId\" \n                    @click=\"goToDetail(item.id)\">강의보기\n                  </v-btn>\n                </td>\n                <td v-if=\"this.user.isAdmin\">\n                  <v-btn  \n                    :to=\"`/lecture/create/${item.id}`\">수정\n                  </v-btn>\n                </td>\n              </tr>\n            </tbody>\n          </v-table>\n        </v-col>\n      </v-row>\n\n      <!-- 강의 목록에 해당하는 내용 -->\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport SubjectDetailComponent from \"@/components/subject/SubjectDetailComponent.vue\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    SubjectDetailComponent,\n  },\n  provide() {\n    return {\n      getSubjectData: () => this.subjectData, // subjectData를 함수로 제공\n    };\n  },\n  data() {\n    return {\n      user: {},\n\n      subjectData: null, // 초기 상태는 null\n\n      subjectId: \"\",\n      selectedMenu: \"SubjectDetail\", // 기본으로 선택된 메뉴\n      lecture: {\n        lectureList: [],\n        page: {\n          pageSize: 5,\n          currentPage: 0,\n        },\n      },\n    };\n  },\n  async created() {\n    this.subjectId = this.$route.params.id;\n    try {\n      await this.$store.dispatch(\"setUserAllInfoActions\");\n      this.user = this.$store.getters.getUserObj;\n    } catch (error) {\n      console.error(\"An error occurred while fetching user info:\", error);\n    }\n\n    this.getSubjectPerLectureList();\n  },\n  watch: {\n    subjectData: {\n      deep: true,\n      handler(newVal) {\n        console.log(\"Subject Data Updated:\", newVal);\n      },\n    },\n  },\n  methods: {\n    async getSubjectPerLectureList() {\n      const params = {\n        size: this.lecture.page.pageSize,\n        page: this.lecture.page.currentPage,\n      };\n\n      const response = await axios.get(\n        `${process.env.VUE_APP_API_BASE_URL}/subject/${this.subjectId}/lecture/list`,\n        { params }\n      );\n      const addtionalData = response.data.result.content;\n      console.log(response);\n      this.lecture.lectureList = [...this.lecture.lectureList, ...addtionalData];\n      \n    },\n    setLectureCreateBtn() {\n      console.log(this.user);\n      console.log(this.user.userId, this.subjectData.userTeacherId)\n      if(Number(this.user.userId) === this.subjectData.userTeacherId || this.user.role == \"ADMIN\"){\n        console.log(\"수정 가능!!\")\n        this.user.isAdmin = true;\n      }else{\n        console.log(\"수정 불가!\")\n      }\n    },\n    handleSubjectDataLoaded(data) {\n      this.subjectData = data;\n      // 여기에 추가 작업을 작성하면 됩니다.\n      if(this.subjectData && this.user.userId){\n        this.setLectureCreateBtn();\n      }\n    },\n    handleMenuUpdate(newSelection) {\n      this.selectedMenu = newSelection;\n      console.log(\"메뉴 바뀜 >> \", newSelection);\n    },\n    goToDetail(lectureId) {\n      console.log(\"강의페이지로 이동~\", lectureId);\n      this.$router.push({ name: \"LectureDetail\", params: { id: lectureId } });\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}