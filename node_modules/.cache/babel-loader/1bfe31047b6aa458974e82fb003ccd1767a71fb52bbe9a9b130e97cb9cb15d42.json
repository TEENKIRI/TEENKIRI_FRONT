{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      user: {},\n      searchType: \"all\",\n      searchOptions: [{\n        text: \"전체\",\n        value: \"all\"\n      }, {\n        text: \"강사명\",\n        value: \"userTeacher\"\n      }, {\n        text: \"강좌명\",\n        value: \"title\"\n      }],\n      selectedType: \"latest\",\n      // 최신순 또는 평점순\n      selectedOptions: [{\n        text: \"최신순\",\n        value: \"latest\"\n      }, {\n        text: \"평점순\",\n        value: \"like\"\n      }],\n      searchValue: \"\",\n      course: {\n        courseList: [],\n        selectedMenu: \"all\",\n        // 선택된 과목 ID\n        page: {\n          pageSize: 5,\n          currentPage: 0\n        }\n      },\n      subject: {\n        subjectList: [],\n        subjectIsMainList: [],\n        page: {\n          pageSize: 5,\n          currentPage: 0\n        }\n      },\n      grade: {\n        gradeList: [{\n          value: \"GRADE_1\",\n          text: \"1학년\"\n        }, {\n          value: \"GRADE_2\",\n          text: \"2학년\"\n        }, {\n          value: \"GRADE_3\",\n          text: \"3학년\"\n        }, {\n          value: \"GRADE_4\",\n          text: \"4학년\"\n        }, {\n          value: \"GRADE_5\",\n          text: \"5학년\"\n        }, {\n          value: \"GRADE_6\",\n          text: \"6학년\"\n        }],\n        selectedGrades: []\n      },\n      page: 1,\n      totalPages: 1\n    };\n  },\n  methods: {\n    async performSearch() {\n      try {\n        const params = {\n          size: 3,\n          page: this.page - 1,\n          // MySQL에서의 페이지는 0부터 시작\n          search: this.searchValue,\n          searchType: this.searchType,\n          sortType: this.selectedType,\n          grades: this.grade.selectedGrades.join(\"&\"),\n          courseId: this.course.selectedMenu !== \"all\" ? this.course.selectedMenu : null\n        };\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/subject/list`, {\n          params\n        });\n        this.subject.subjectList = response.data.result.content;\n        this.totalPages = response.data.result.totalPages;\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    goToDetail(id) {\n      this.$router.push({\n        name: \"SubjectDetail\",\n        params: {\n          id\n        }\n      });\n    },\n    async toggleWish(id, event, type) {\n      event.stopPropagation(); // 이벤트 전파 방지\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/wish/toggle/${id}`);\n        let subject;\n        if (type == \"subjectList\") {\n          subject = this.subject.subjectList.find(s => s.id === id);\n        } else if (type == \"subjectMain\") {\n          subject = this.subject.subjectIsMainList.find(sm => sm.id === id);\n        }\n        if (subject) {\n          subject.isSubscribe = response.data.result.status;\n        }\n      } catch (error) {\n        alert(\"찜 추가 실패\");\n        console.error(error);\n      }\n    },\n    editCourse(id, event) {\n      event.stopPropagation(); // 이벤트 전파 방지\n      this.$router.push({\n        name: \"CourseEdit\",\n        params: {\n          id\n        }\n      });\n    }\n  },\n  watch: {\n    selectedType() {\n      this.performSearch();\n    },\n    selectedGrades() {\n      this.performSearch();\n    },\n    \"course.selectedMenu\": function () {\n      this.performSearch();\n    },\n    searchValue() {\n      this.performSearch();\n    },\n    searchType() {\n      this.performSearch();\n    }\n  },\n  async created() {\n    try {\n      await this.$store.dispatch(\"setUserAllInfoActions\");\n      this.user = this.$store.getters.getUserObj;\n    } catch (error) {\n      console.error(\"사용자 정보를 가져오는 중 오류가 발생했습니다:\", error);\n    }\n    this.getCourseList();\n    this.getSubjectMainList();\n    this.performSearch();\n  }\n};","map":{"version":3,"names":["axios","data","user","searchType","searchOptions","text","value","selectedType","selectedOptions","searchValue","course","courseList","selectedMenu","page","pageSize","currentPage","subject","subjectList","subjectIsMainList","grade","gradeList","selectedGrades","totalPages","methods","performSearch","params","size","search","sortType","grades","join","courseId","response","get","process","env","VUE_APP_API_BASE_URL","result","content","e","console","error","goToDetail","id","$router","push","name","toggleWish","event","type","stopPropagation","find","s","sm","isSubscribe","status","alert","editCourse","watch","course.selectedMenu","created","$store","dispatch","getters","getUserObj","getCourseList","getSubjectMainList"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <!-- 추천 강좌 섹션 -->\n    <v-card class=\"mt-5\">\n      <v-card-title>티니키리 서비스가 이 강좌를 추천해요!</v-card-title>\n      <v-card-text>\n        <div class=\"swiper swiperLectureBest\">\n          <div\n            class=\"swiper-slide\"\n            v-for=\"sm in subject.subjectIsMainList\"\n            :key=\"sm.id\"\n            @click=\"goToDetail(sm.id)\"\n          >\n            <div class=\"thumb\">\n              <a href=\"javascript:void(0)\">\n                <img v-bind:src=\"sm.subjectThumUrl\" alt=\"강좌 썸네일\" />\n              </a>\n            </div>\n            <div class=\"txt\">\n              <p class=\"subject\">{{ sm.title }}</p>\n              <p class=\"name\">{{ sm.teacherName }}</p>\n            </div>\n            <button\n              type=\"button\"\n              class=\"btn_like\"\n              @click=\"toggleWish(sm.id, $event, `subjectMain`)\"\n              :class=\"{\n                'mdi mdi-heart': sm.isSubscribe,\n                'mdi mdi-heart-outline': !sm.isSubscribe,\n              }\"\n            ></button>\n          </div>\n        </div>\n      </v-card-text>\n    </v-card>\n\n    <!-- 검색 및 정렬 섹션 -->\n    <br />\n    <v-row>\n      <v-col class=\"d-flex flex-row align-center\" cols=\"12\" md=\"2\">\n        <v-select\n          v-model=\"selectedType\"\n          :items=\"selectedOptions\"\n          item-title=\"text\"\n          item-value=\"value\"\n          label=\"정렬 기준\"\n          class=\"ml-auto\"\n          width=\"200\"\n          required\n          @change=\"performSearch\"\n        ></v-select>\n      </v-col>\n\n      <v-col cols=\"4\" md=\"3\">\n        <v-select\n          v-model=\"searchType\"\n          :items=\"searchOptions\"\n          item-title=\"text\"\n          item-value=\"value\"\n          label=\"검색 범위\"\n          required\n        ></v-select>\n      </v-col>\n      <v-col cols=\"8\" md=\"7\">\n        <v-text-field\n          v-model=\"searchValue\"\n          label=\"검색어를 입력하세요.\"\n          append-icon=\"mdi-magnify\"\n          @click:append=\"performSearch\"\n          required\n        ></v-text-field>\n      </v-col>\n    </v-row>\n\n    <!-- 과목 선택 섹션 -->\n    <v-btn\n      class=\"mb-2\"\n      color=\"success\"\n      @click=\"$router.push('/subject/create')\"\n      v-if=\"this.user.role === `ADMIN`\"\n      >강좌 업로드</v-btn\n    >\n    <v-btn\n      class=\"mb-2\"\n      color=\"success\"\n      @click=\"$router.push('/course/create')\"\n      v-if=\"this.user.role === `ADMIN`\"\n      >과목 업로드</v-btn\n    >\n\n    <v-row>\n      <v-col cols=\"12\" class=\"py-2\">\n        <v-btn-toggle\n          v-model=\"course.selectedMenu\"\n          color=\"primary\"\n          rounded=\"0\"\n          group\n          class=\"d-flex flex-row\"\n          @change=\"performSearch\"\n        >\n          <v-btn class=\"flex-grow-1\" value=\"all\"> all </v-btn>\n          <v-btn\n            class=\"flex-grow-1\"\n            v-for=\"c in course.courseList\"\n            :key=\"c.id\"\n            :value=\"c.id\"\n          >\n            {{ c.title }}\n            <span\n              v-if=\"this.user.role === `ADMIN`\"\n              class=\"mdi mdi-pencil\"\n              style=\"\n                width: 24px;\n                height: 24px;\n                font-size: 24px;\n                line-height: 24px;\n                color: #f27885;\n              \"\n              @click=\"editCourse(c.id, $event)\"\n            ></span>\n          </v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n\n    <!-- 학년 선택 및 정렬 -->\n    <v-row>\n      <v-col>\n        <v-item-group\n          selected-class=\"bg-purple\"\n          multiple\n          class=\"d-flex justify-start\"\n          v-model=\"grade.selectedGrades\"\n          @change=\"performSearch\"\n        >\n          <div class=\"mr-5\">학년</div>\n          <v-item\n            v-for=\"n in grade.gradeList\"\n            :key=\"n.value\"\n            v-slot=\"{ selectedClass, toggle }\"\n            :value=\"n.value\"\n          >\n            <v-chip class=\"mr-2\" :class=\"selectedClass\" @click=\"toggle\" :value=\"n.value\">\n              {{ n.text }}\n            </v-chip>\n          </v-item>\n        </v-item-group>\n        <br />\n      </v-col>\n    </v-row>\n\n    <!-- 강좌 목록 섹션 -->\n    <v-card class=\"mt-5\">\n      <v-row class=\"mt-5\">\n        <v-card-title>강좌 목록</v-card-title>\n        <v-card-text>\n          <div class=\"swiper swiperLectureBest\">\n            <div\n              class=\"swiper-slide\"\n              v-for=\"s in subject.subjectList\"\n              :key=\"s.id\"\n              @click=\"goToDetail(s.id)\"\n            >\n              <div class=\"thumb\">\n                <a href=\"javascript:void(0)\">\n                  <img v-bind:src=\"s.subjectThumUrl\" alt=\"강좌 썸네일\" />\n                </a>\n              </div>\n              <div class=\"txt\">\n                <p class=\"subject\">{{ s.title }}</p>\n                <p class=\"name\">{{ s.teacherName }}</p>\n              </div>\n              <button\n                type=\"button\"\n                class=\"btn_like\"\n                @click=\"toggleWish(s.id, $event, `subjectList`)\"\n                :class=\"{\n                  'mdi mdi-heart': s.isSubscribe,\n                  'mdi mdi-heart-outline': !s.isSubscribe,\n                }\"\n              ></button>\n            </div>\n          </div>\n        </v-card-text>\n      </v-row>\n    </v-card>\n\n    <!-- 페이지네이션 -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @input=\"performSearch\"\n      class=\"my-4\"\n    ></v-pagination>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      user: {},\n      searchType: \"all\",\n      searchOptions: [\n        { text: \"전체\", value: \"all\" },\n        { text: \"강사명\", value: \"userTeacher\" },\n        { text: \"강좌명\", value: \"title\" },\n      ],\n      selectedType: \"latest\", // 최신순 또는 평점순\n      selectedOptions: [\n        { text: \"최신순\", value: \"latest\" },\n        { text: \"평점순\", value: \"like\" },\n      ],\n      searchValue: \"\",\n      course: {\n        courseList: [],\n        selectedMenu: \"all\", // 선택된 과목 ID\n        page: {\n          pageSize: 5,\n          currentPage: 0,\n        },\n      },\n      subject: {\n        subjectList: [],\n        subjectIsMainList: [],\n        page: {\n          pageSize: 5,\n          currentPage: 0,\n        },\n      },\n      grade: {\n        gradeList: [\n          { value: \"GRADE_1\", text: \"1학년\" },\n          { value: \"GRADE_2\", text: \"2학년\" },\n          { value: \"GRADE_3\", text: \"3학년\" },\n          { value: \"GRADE_4\", text: \"4학년\" },\n          { value: \"GRADE_5\", text: \"5학년\" },\n          { value: \"GRADE_6\", text: \"6학년\" },\n        ],\n        selectedGrades: [],\n      },\n      page: 1,\n      totalPages: 1,\n    };\n  },\n  methods: {\n    async performSearch() {\n      try {\n        const params = {\n          size: 3,\n          page: this.page - 1, // MySQL에서의 페이지는 0부터 시작\n          search: this.searchValue,\n          searchType: this.searchType,\n          sortType: this.selectedType,\n          grades: this.grade.selectedGrades.join(\"&\"),\n          courseId: this.course.selectedMenu !== \"all\" ? this.course.selectedMenu : null,\n        };\n\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/subject/list`,\n          { params }\n        );\n        this.subject.subjectList = response.data.result.content;\n        this.totalPages = response.data.result.totalPages;\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    goToDetail(id) {\n      this.$router.push({ name: \"SubjectDetail\", params: { id } });\n    },\n    async toggleWish(id, event, type) {\n      event.stopPropagation(); // 이벤트 전파 방지\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/wish/toggle/${id}`\n        );\n\n        let subject;\n        if (type == \"subjectList\") {\n          subject = this.subject.subjectList.find((s) => s.id === id);\n        } else if (type == \"subjectMain\") {\n          subject = this.subject.subjectIsMainList.find((sm) => sm.id === id);\n        }\n\n        if (subject) {\n          subject.isSubscribe = response.data.result.status;\n        }\n      } catch (error) {\n        alert(\"찜 추가 실패\");\n        console.error(error);\n      }\n    },\n    editCourse(id, event) {\n      event.stopPropagation(); // 이벤트 전파 방지\n      this.$router.push({ name: \"CourseEdit\", params: { id } });\n    },\n  },\n  watch: {\n    selectedType() {\n      this.performSearch();\n    },\n    selectedGrades() {\n      this.performSearch();\n    },\n    \"course.selectedMenu\": function () {\n      this.performSearch();\n    },\n    searchValue() {\n      this.performSearch();\n    },\n    searchType() {\n      this.performSearch();\n    },\n  },\n  async created() {\n    try {\n      await this.$store.dispatch(\"setUserAllInfoActions\");\n      this.user = this.$store.getters.getUserObj;\n    } catch (error) {\n      console.error(\"사용자 정보를 가져오는 중 오류가 발생했습니다:\", error);\n    }\n    this.getCourseList();\n    this.getSubjectMainList();\n    this.performSearch();\n  },\n};\n</script>\n\n<style src=\"@/assets/css/SubjectList.css\"></style>\n<style>\n.select-small .v-select {\n  min-height: 32px;\n  max-height: 32px;\n  font-size: 14px;\n  line-height: 32px;\n}\n\n.v-btn + .v-btn {\n  margin-left: 16px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}