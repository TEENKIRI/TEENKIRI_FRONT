{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  props: {\n    modelValue: {\n      type: String,\n      required: true\n    }\n  },\n  inject: [\"getSubjectData\"],\n  data() {\n    return {\n      user: {},\n      internalValue: this.modelValue,\n      subjectId: \"\",\n      subjectData: null\n    };\n  },\n  async created() {\n    try {\n      await this.$store.dispatch(\"setUserAllInfoActions\");\n      this.user = this.$store.getters.getUserObj;\n    } catch (error) {\n      console.error(\"사용자 정보를 가져오는 중 오류가 발생했습니다:\", error);\n    }\n    this.subjectId = this.$route.params.id;\n    this.getSubjectDetail();\n  },\n  methods: {\n    async getSubjectDetail() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/subject/detail/${this.subjectId}`);\n        this.subjectData = response.data.result;\n        console.log(this.subjectData);\n\n        // 데이터가 로드된 후 상위 컴포넌트에 알림\n        this.$emit(\"subject-data-loaded\", this.subjectData);\n      } catch (error) {\n        console.error(\"강좌 세부 정보 조회 실패:\", error);\n      }\n    },\n    async checkWishlistStatus() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/wish/check/${this.subjectId}`);\n        this.subjectData.isSubscribe = response.data.isInWishlist;\n      } catch (error) {\n        console.error(\"위시리스트 상태 확인 실패:\", error);\n      }\n    },\n    async checkEnrollmentStatus() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/my/subject/check-enrollment/${this.subjectId}`);\n        this.subjectData.isRegistered = response.data.isEnrolled; // 사용자가 수강중인지 확인\n      } catch (error) {\n        console.error(\"수강 상태 확인 실패:\", error);\n      }\n    },\n    async handleWishlist() {\n      if (this.subjectData.isSubscribe) {\n        await this.removeFromWishlist();\n      } else {\n        await this.addToWishlist();\n      }\n    },\n    async addToWishlist() {\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`);\n        alert(\"찜 추가 성공\");\n        this.subjectData.isSubscribe = true;\n      } catch (error) {\n        alert(\"찜 추가 실패\");\n        console.error(error);\n      }\n    },\n    async removeFromWishlist() {\n      try {\n        await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`);\n        alert(\"찜 취소 성공\");\n        this.subjectData.isSubscribe = false;\n      } catch (error) {\n        alert(\"찜 취소 실패\");\n        console.error(error);\n      }\n    },\n    async applyForSubject() {\n      if (this.subjectData.isRegistered) {\n        alert(\"이미 수강중인 강좌입니다.\");\n        return;\n      }\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/my/subject/create`, {\n          subjectId: this.subjectId\n        });\n        alert(\"강좌 수강 신청이 완료되었습니다.\");\n        this.subjectData.isRegistered = true; // 신청 후 수강 상태 업데이트\n      } catch (error) {\n        alert(\"강좌 수강 신청 실패\");\n        console.error(error);\n      }\n    },\n    goToPage(pathName) {\n      this.$router.push({\n        name: pathName,\n        params: {\n          id: this.subjectId\n        }\n      });\n    },\n    editSubject() {\n      this.$router.push({\n        name: \"SubjectEdit\",\n        params: {\n          id: this.subjectId\n        }\n      });\n    }\n  },\n  computed: {\n    menuItems() {\n      return [{\n        title: \"강의목록\",\n        value: \"SubjectDetail\"\n      }, {\n        title: \"Q&A 게시판\",\n        value: \"SubjectQna\"\n      }, {\n        title: \"강의 후기\",\n        value: \"SubjectReview\"\n      }];\n    }\n  }\n};","map":{"version":3,"names":["axios","props","modelValue","type","String","required","inject","data","user","internalValue","subjectId","subjectData","created","$store","dispatch","getters","getUserObj","error","console","$route","params","id","getSubjectDetail","methods","response","get","process","env","VUE_APP_API_BASE_URL","result","log","$emit","checkWishlistStatus","isSubscribe","isInWishlist","checkEnrollmentStatus","isRegistered","isEnrolled","handleWishlist","removeFromWishlist","addToWishlist","post","alert","delete","applyForSubject","goToPage","pathName","$router","push","name","editSubject","computed","menuItems","title","value"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/components/subject/SubjectDetailComponent.vue"],"sourcesContent":["<template>\n  <v-sheet v-if=\"subjectData\">\n    <v-row>\n      <v-col>\n        <h1>{{ subjectData.title }}</h1>\n      </v-col>\n    </v-row>\n    <v-row v-if=\"this.user.role == `ADMIN`\">\n      <v-col>\n        <v-btn @click=\"editSubject()\">강의 수정</v-btn>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"12\" md=\"6\">\n        <v-img\n          :src=\"subjectData.subjectThumUrl\"\n          max-width=\"100%\"\n          max-height=\"400px\"\n          class=\"mx-auto my-4 mt-8\"\n          aspect-ratio=\"16/9\"\n          contain\n          elevation=\"4\"\n          rounded=\"lg\"\n          \n        ></v-img>\n      </v-col>\n      <v-col cols=\"12\" md=\"6\">\n        <v-row>\n          <v-col class=\"d-flex justify-end\">\n            <v-btn\n              :disabled=\"this.subjectData.isRegistered\"\n              @click=\"applyForSubject\"\n              color=\"primary\"\n              class=\"mr-4\"\n            >\n              {{ this.subjectData.isRegistered ? \"수강 중\" : \"수강신청\" }}\n            </v-btn>\n            <v-btn @click=\"handleWishlist\" color=\"secondary\">\n              {{ this.subjectData.isSubscribe ? \"찜 취소하기\" : \"찜하기\" }}\n            </v-btn>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n            <v-list dense lines=\"two\">\n              <v-list-item>\n                <v-list-item-title class=\"custom-title\">선생님</v-list-item-title>\n                <v-list-item-subtitle class=\"custom-subtitle\">{{ subjectData.userTeacherName }}</v-list-item-subtitle>\n              </v-list-item>\n              <v-list-item>\n                <v-list-item-title class=\"custom-title\">수강대상</v-list-item-title>\n                <v-list-item-subtitle class=\"custom-subtitle\">{{ subjectData.grade }}</v-list-item-subtitle>\n              </v-list-item>\n              <v-list-item>\n                <v-list-item-title class=\"custom-title\">강좌구성</v-list-item-title>\n                <v-list-item-subtitle class=\"custom-subtitle\">{{ subjectData.userTeacherName }}</v-list-item-subtitle>\n              </v-list-item>\n              <v-list-item>\n                <v-list-item-title class=\"custom-title\">평점</v-list-item-title>\n                <v-list-item-subtitle class=\"custom-subtitle\">{{ subjectData.rating + ' 점' }}</v-list-item-subtitle>\n              </v-list-item>\n              <v-list-item>\n                <v-list-item-title class=\"custom-title\">설명</v-list-item-title>\n                <v-list-item-subtitle class=\"custom-subtitle\">{{ subjectData.description }}</v-list-item-subtitle>\n              </v-list-item>\n            </v-list>\n          </v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-btn-toggle\n          v-model=\"internalValue\"\n          color=\"primary\"\n          rounded=\"0\"\n          group\n        >\n          <v-btn\n            class=\"flex-grow-1\"\n            v-for=\"item in menuItems\"\n            :key=\"item.value\"\n            :value=\"item.value\"\n            @click=\"goToPage(item.value)\"\n          >\n            {{ item.title }}\n          </v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n  </v-sheet>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  props: {\n    modelValue: {\n      type: String,\n      required: true,\n    },\n  },\n  inject: [\"getSubjectData\"],\n  data() {\n    return {\n      user: {},\n      internalValue: this.modelValue,\n      subjectId: \"\",\n      subjectData: null,\n    };\n  },\n  async created() {\n    try {\n      await this.$store.dispatch(\"setUserAllInfoActions\");\n      this.user = this.$store.getters.getUserObj;\n    } catch (error) {\n      console.error(\"사용자 정보를 가져오는 중 오류가 발생했습니다:\", error);\n    }\n    this.subjectId = this.$route.params.id;\n    this.getSubjectDetail();\n  },\n  methods: {\n    async getSubjectDetail() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/subject/detail/${this.subjectId}`\n        );\n        this.subjectData = response.data.result;\n        console.log(this.subjectData);\n\n        // 데이터가 로드된 후 상위 컴포넌트에 알림\n        this.$emit(\"subject-data-loaded\", this.subjectData);\n      } catch (error) {\n        console.error(\"강좌 세부 정보 조회 실패:\", error);\n      }\n    },\n    async checkWishlistStatus() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/wish/check/${this.subjectId}`\n        );\n        this.subjectData.isSubscribe = response.data.isInWishlist;\n      } catch (error) {\n        console.error(\"위시리스트 상태 확인 실패:\", error);\n      }\n    },\n    async checkEnrollmentStatus() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/my/subject/check-enrollment/${this.subjectId}`\n        );\n        this.subjectData.isRegistered = response.data.isEnrolled; // 사용자가 수강중인지 확인\n      } catch (error) {\n        console.error(\"수강 상태 확인 실패:\", error);\n      }\n    },\n    async handleWishlist() {\n      if (this.subjectData.isSubscribe) {\n        await this.removeFromWishlist();\n      } else {\n        await this.addToWishlist();\n      }\n    },\n    async addToWishlist() {\n      try {\n        await axios.post(\n          `${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`\n        );\n        alert(\"찜 추가 성공\");\n        this.subjectData.isSubscribe = true;\n      } catch (error) {\n        alert(\"찜 추가 실패\");\n        console.error(error);\n      }\n    },\n    async removeFromWishlist() {\n      try {\n        await axios.delete(\n          `${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`\n        );\n        alert(\"찜 취소 성공\");\n        this.subjectData.isSubscribe = false;\n      } catch (error) {\n        alert(\"찜 취소 실패\");\n        console.error(error);\n      }\n    },\n    async applyForSubject() {\n      if (this.subjectData.isRegistered) {\n        alert(\"이미 수강중인 강좌입니다.\");\n        return;\n      }\n      try {\n        await axios.post(\n          `${process.env.VUE_APP_API_BASE_URL}/my/subject/create`,\n          {\n            subjectId: this.subjectId,\n          }\n        );\n        alert(\"강좌 수강 신청이 완료되었습니다.\");\n        this.subjectData.isRegistered = true; // 신청 후 수강 상태 업데이트\n      } catch (error) {\n        alert(\"강좌 수강 신청 실패\");\n        console.error(error);\n      }\n    },\n    goToPage(pathName) {\n      this.$router.push({ name: pathName, params: { id: this.subjectId } });\n    },\n    editSubject(){\n      this.$router.push({ name: \"SubjectEdit\", params: { id: this.subjectId } });\n    }\n  },\n  computed: {\n    menuItems() {\n      return [\n        { title: \"강의목록\", value: \"SubjectDetail\" },\n        { title: \"Q&A 게시판\", value: \"SubjectQna\" },\n        { title: \"강의 후기\", value: \"SubjectReview\" },\n      ];\n    },\n  },\n};\n</script>\n\n<style>\n.v-img {\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n}\n\n.v-btn {\n  min-width: 150px;\n}\n\n.custom-title {\n  font-size: 1.25rem !important; /* 약 20px */\n  font-weight: bold;\n}\n\n.custom-subtitle {\n  font-size: 1rem !important; /* 약 16px */\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}