{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport axios from 'axios';\nexport default {\n  name: 'HeaderComponent',\n  data() {\n    return {\n      logo: require('@/assets/images/ico_logo.png'),\n      isLogin: false,\n      notifications: [],\n      menuVisible: false // 기본적으로 메뉴를 닫힌 상태로 설정\n    };\n  },\n  mounted() {\n    const token = localStorage.getItem('token');\n    this.isLogin = !!token;\n    if (this.isLogin) {\n      // 서버에서 알림 목록을 불러옵니다.\n      this.fetchNotifications();\n      const eventSource = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/subscribe`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      eventSource.addEventListener('connect', event => {\n        console.log(event);\n      });\n      eventSource.addEventListener('notification', event => {\n        console.log(event);\n        const notification = JSON.parse(event.data);\n        this.notifications.push(notification);\n        console.log('새 알림:', notification.message);\n        console.log('알림 목록: ', this.notifications);\n      });\n      eventSource.onerror = error => {\n        console.error('SSE 연결 오류:', error);\n      };\n    }\n  },\n  methods: {\n    // 메뉴 열림 상태를 토글하는 메서드\n    toggleMenu() {\n      this.menuVisible = !this.menuVisible;\n    },\n    // 서버에서 알림 목록을 가져오는 메서드\n    fetchNotifications() {\n      axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/list`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        this.notifications = response.data;\n      }).catch(error => {\n        console.error('알림 목록을 가져오는 중 오류 발생:', error);\n      });\n    },\n    // 알림을 읽음으로 표시하는 메서드\n    // 알림을 읽음으로 표시하는 메서드\n    markAsRead(notification, index) {\n      if (notification.delYN === 'N') {\n        const id = notification.id;\n        axios.put(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/update/${id}`, null, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        }).then(() => {\n          this.$set(this.notifications, index, {\n            ...notification,\n            delYN: 'Y'\n          });\n        }).catch(error => {\n          console.error('알림을 읽음으로 표시하는 중 오류 발생:', error);\n        });\n      }\n    },\n    navigate(section) {\n      if (section === '강좌') {\n        this.$router.push({\n          name: 'SubjectList',\n          params: {\n            category: 'subject'\n          }\n        });\n      } else if (section === '이벤트') {\n        this.$router.push({\n          name: 'BoardList',\n          params: {\n            category: 'event'\n          }\n        });\n      } else if (section === '공지사항') {\n        this.$router.push({\n          name: 'BoardList',\n          params: {\n            category: 'notice'\n          }\n        });\n      } else if (section === '자유게시판') {\n        this.$router.push({\n          name: 'BoardList',\n          params: {\n            category: 'post'\n          }\n        });\n      } else if (section === 'QnA') {\n        this.$router.push({\n          name: 'QnaList',\n          params: {\n            category: 'qna'\n          }\n        });\n      } else {\n        console.log(section);\n      }\n    },\n    goToMember() {\n      if (this.isLogin) {\n        this.$router.push('/user/edit-info');\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    goToMenu() {\n      console.log('Go to menu');\n    },\n    doLogout() {\n      localStorage.removeItem('role');\n      localStorage.removeItem('token');\n      this.isLogin = false;\n      console.log('Logged out');\n      window.location.reload();\n    }\n  }\n};","map":{"version":3,"names":["EventSourcePolyfill","axios","name","data","logo","require","isLogin","notifications","menuVisible","mounted","token","localStorage","getItem","fetchNotifications","eventSource","process","env","VUE_APP_API_BASE_URL","headers","Authorization","addEventListener","event","console","log","notification","JSON","parse","push","message","onerror","error","methods","toggleMenu","get","then","response","catch","markAsRead","index","delYN","id","put","$set","navigate","section","$router","params","category","goToMember","goToMenu","doLogout","removeItem","window","location","reload"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/components/HeaderComponent.vue"],"sourcesContent":["<template>\n  <v-app-bar app>\n    <v-container>\n      <v-row align=\"center\">\n        <v-col cols=\"3\">\n          <v-toolbar-title>\n            <router-link to=\"/\" class=\"logo\">\n              <img :src=\"logo\" alt=\"로고\" class=\"logo-image\" />\n            </router-link>\n          </v-toolbar-title>\n        </v-col>\n        <v-col cols=\"6\">\n          <v-row justify=\"center\">\n            <v-btn text @click=\"navigate('강좌')\">강좌</v-btn>\n            <v-btn text @click=\"navigate('추천')\">추천</v-btn>\n            <v-btn text @click=\"navigate('이벤트')\">이벤트</v-btn>\n            <v-btn text @click=\"navigate('공지사항')\">공지사항</v-btn>\n            <v-btn text @click=\"navigate('자유게시판')\">자유게시판</v-btn>\n            <v-btn text @click=\"navigate('QnA')\">질문게시판</v-btn>\n          </v-row>\n        </v-col>\n        <v-col cols=\"3\" class=\"text-right\">\n          <v-btn icon @click=\"goToMember\">\n            <v-icon>mdi-account</v-icon>\n          </v-btn>\n          <v-btn v-if=\"isLogin\" @click=\"doLogout\">로그아웃</v-btn>\n          <v-btn icon @click=\"goToMenu\">\n            <v-icon>mdi-menu</v-icon>\n          </v-btn>\n\n          <!-- 알림 아이콘 및 알림 목록 -->\n          <v-menu v-model=\"menuVisible\" offset-y>\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn icon v-bind=\"attrs\" v-on=\"on\" @click=\"toggleMenu\">\n                <v-badge\n                  color=\"red\"\n                  :content=\"notifications.length\"\n                  overlap\n                  v-if=\"notifications.length > 0\"\n                >\n                  <v-icon>mdi-bell</v-icon>\n                </v-badge>\n                <v-icon v-else>mdi-bell</v-icon>\n              </v-btn>\n            </template>\n            <v-list max-width=\"300\" max-height=\"400\" style=\"overflow-y: auto;\">\n              <v-list-item\n                v-for=\"(notification, index) in notifications\"\n                :key=\"index\"\n                :class=\"{'read-notification': notification.delYN === 'Y'}\"\n                @click=\"markAsRead(notification, index)\"\n              >\n                <v-list-item-content>\n                  <v-list-item-title>{{ notification.message }}</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-app-bar>\n</template>\n\n<script>\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport axios from 'axios';\n\nexport default {\n  name: 'HeaderComponent',\n  data() {\n    return {\n      logo: require('@/assets/images/ico_logo.png'),\n      isLogin: false,\n      notifications: [],\n      menuVisible: false, // 기본적으로 메뉴를 닫힌 상태로 설정\n    };\n  },\n  mounted() {\n    const token = localStorage.getItem('token');\n    this.isLogin = !!token;\n\n    if (this.isLogin) {\n      // 서버에서 알림 목록을 불러옵니다.\n      this.fetchNotifications();\n\n      const eventSource = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/subscribe`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      eventSource.addEventListener('connect', (event) => {\n        console.log(event);\n      });\n\n      eventSource.addEventListener('notification', (event) => {\n        console.log(event);\n        const notification = JSON.parse(event.data);\n        this.notifications.push(notification);\n        console.log('새 알림:', notification.message);\n        console.log('알림 목록: ', this.notifications);\n      });\n\n      eventSource.onerror = (error) => {\n        console.error('SSE 연결 오류:', error);\n      };\n    }\n  },\n  methods: {\n    // 메뉴 열림 상태를 토글하는 메서드\n    toggleMenu() {\n      this.menuVisible = !this.menuVisible;\n    },\n    // 서버에서 알림 목록을 가져오는 메서드\n    fetchNotifications() {\n      axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/list`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      })\n      .then(response => {\n        this.notifications = response.data;\n      })\n      .catch(error => {\n        console.error('알림 목록을 가져오는 중 오류 발생:', error);\n      });\n    },\n    // 알림을 읽음으로 표시하는 메서드\n  // 알림을 읽음으로 표시하는 메서드\n  markAsRead(notification, index) {\n    if (notification.delYN === 'N') {\n      const id = notification.id;\n      axios.put(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/update/${id}`, null, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      })\n      .then(() => {\n        this.$set(this.notifications, index, {\n          ...notification,\n          delYN: 'Y',\n        });\n      })\n      .catch(error => {\n        console.error('알림을 읽음으로 표시하는 중 오류 발생:', error);\n      });\n    }\n  },\n    navigate(section) {\n      if (section === '강좌') {\n        this.$router.push({ name: 'SubjectList', params: { category: 'subject' } });\n      } else if (section === '이벤트') {\n        this.$router.push({ name: 'BoardList', params: { category: 'event' } });\n      } else if (section === '공지사항') {\n        this.$router.push({ name: 'BoardList', params: { category: 'notice' } });\n      } else if (section === '자유게시판') {\n        this.$router.push({ name: 'BoardList', params: { category: 'post' } });\n      } else if (section === 'QnA') {\n        this.$router.push({ name: 'QnaList', params: { category: 'qna' } });\n      } else {\n        console.log(section);\n      }\n    },\n    goToMember() {\n      if (this.isLogin) {\n        this.$router.push('/user/edit-info');\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    goToMenu() {\n      console.log('Go to menu');\n    },\n    doLogout() {\n      localStorage.removeItem('role');\n      localStorage.removeItem('token');\n      this.isLogin = false;\n      console.log('Logged out');\n      window.location.reload();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.logo {\n  font-weight: bold;\n  color: inherit;\n  text-decoration: none;\n}\n\n.logo-image {\n  height: 10%;\n}\n\n.read-notification {\n  background-color: #e0e0e0; /* 회색 배경 */\n}\n\n.v-list-item {\n  background-color: white; /* 기본 흰색 배경 */\n}\n</style>\n"],"mappings":";AAiEA,SAASA,mBAAkB,QAAS,uBAAuB;AAC3D,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAEC,OAAO,CAAC,8BAA8B,CAAC;MAC7CC,OAAO,EAAE,KAAK;MACdC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,KAAK,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACN,OAAM,GAAI,CAAC,CAACI,KAAK;IAEtB,IAAI,IAAI,CAACJ,OAAO,EAAE;MAChB;MACA,IAAI,CAACO,kBAAkB,CAAC,CAAC;MAEzB,MAAMC,WAAU,GAAI,IAAId,mBAAmB,CAAC,GAAGe,OAAO,CAACC,GAAG,CAACC,oBAAoB,YAAY,EAAE;QAC3FC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUT,KAAK;QAChC;MACF,CAAC,CAAC;MAEFI,WAAW,CAACM,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;QACjDC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;MAEFP,WAAW,CAACM,gBAAgB,CAAC,cAAc,EAAGC,KAAK,IAAK;QACtDC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB,MAAMG,YAAW,GAAIC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAClB,IAAI,CAAC;QAC3C,IAAI,CAACI,aAAa,CAACoB,IAAI,CAACH,YAAY,CAAC;QACrCF,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEC,YAAY,CAACI,OAAO,CAAC;QAC1CN,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAChB,aAAa,CAAC;MAC5C,CAAC,CAAC;MAEFO,WAAW,CAACe,OAAM,GAAKC,KAAK,IAAK;QAC/BR,OAAO,CAACQ,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACpC,CAAC;IACH;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACxB,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW;IACtC,CAAC;IACD;IACAK,kBAAkBA,CAAA,EAAG;MACnBZ,KAAK,CAACgC,GAAG,CAAC,GAAGlB,OAAO,CAACC,GAAG,CAACC,oBAAoB,yBAAyB,EAAE;QACtEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,EACAsB,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAAC5B,aAAY,GAAI4B,QAAQ,CAAChC,IAAI;MACpC,CAAC,EACAiC,KAAK,CAACN,KAAI,IAAK;QACdR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACJ,CAAC;IACD;IACF;IACAO,UAAUA,CAACb,YAAY,EAAEc,KAAK,EAAE;MAC9B,IAAId,YAAY,CAACe,KAAI,KAAM,GAAG,EAAE;QAC9B,MAAMC,EAAC,GAAIhB,YAAY,CAACgB,EAAE;QAC1BvC,KAAK,CAACwC,GAAG,CAAC,GAAG1B,OAAO,CAACC,GAAG,CAACC,oBAAoB,6BAA6BuB,EAAE,EAAE,EAAE,IAAI,EAAE;UACpFtB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CAAC,EACAsB,IAAI,CAAC,MAAM;UACV,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACnC,aAAa,EAAE+B,KAAK,EAAE;YACnC,GAAGd,YAAY;YACfe,KAAK,EAAE;UACT,CAAC,CAAC;QACJ,CAAC,EACAH,KAAK,CAACN,KAAI,IAAK;UACdR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD,CAAC,CAAC;MACJ;IACF,CAAC;IACCa,QAAQA,CAACC,OAAO,EAAE;MAChB,IAAIA,OAAM,KAAM,IAAI,EAAE;QACpB,IAAI,CAACC,OAAO,CAAClB,IAAI,CAAC;UAAEzB,IAAI,EAAE,aAAa;UAAE4C,MAAM,EAAE;YAAEC,QAAQ,EAAE;UAAU;QAAE,CAAC,CAAC;MAC7E,OAAO,IAAIH,OAAM,KAAM,KAAK,EAAE;QAC5B,IAAI,CAACC,OAAO,CAAClB,IAAI,CAAC;UAAEzB,IAAI,EAAE,WAAW;UAAE4C,MAAM,EAAE;YAAEC,QAAQ,EAAE;UAAQ;QAAE,CAAC,CAAC;MACzE,OAAO,IAAIH,OAAM,KAAM,MAAM,EAAE;QAC7B,IAAI,CAACC,OAAO,CAAClB,IAAI,CAAC;UAAEzB,IAAI,EAAE,WAAW;UAAE4C,MAAM,EAAE;YAAEC,QAAQ,EAAE;UAAS;QAAE,CAAC,CAAC;MAC1E,OAAO,IAAIH,OAAM,KAAM,OAAO,EAAE;QAC9B,IAAI,CAACC,OAAO,CAAClB,IAAI,CAAC;UAAEzB,IAAI,EAAE,WAAW;UAAE4C,MAAM,EAAE;YAAEC,QAAQ,EAAE;UAAO;QAAE,CAAC,CAAC;MACxE,OAAO,IAAIH,OAAM,KAAM,KAAK,EAAE;QAC5B,IAAI,CAACC,OAAO,CAAClB,IAAI,CAAC;UAAEzB,IAAI,EAAE,SAAS;UAAE4C,MAAM,EAAE;YAAEC,QAAQ,EAAE;UAAM;QAAE,CAAC,CAAC;MACrE,OAAO;QACLzB,OAAO,CAACC,GAAG,CAACqB,OAAO,CAAC;MACtB;IACF,CAAC;IACDI,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAAC1C,OAAO,EAAE;QAChB,IAAI,CAACuC,OAAO,CAAClB,IAAI,CAAC,iBAAiB,CAAC;MACtC,OAAO;QACL,IAAI,CAACkB,OAAO,CAAClB,IAAI,CAAC,QAAQ,CAAC;MAC7B;IACF,CAAC;IACDsB,QAAQA,CAAA,EAAG;MACT3B,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B,CAAC;IACD2B,QAAQA,CAAA,EAAG;MACTvC,YAAY,CAACwC,UAAU,CAAC,MAAM,CAAC;MAC/BxC,YAAY,CAACwC,UAAU,CAAC,OAAO,CAAC;MAChC,IAAI,CAAC7C,OAAM,GAAI,KAAK;MACpBgB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB6B,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}