{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-60738bad\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_data_table, {\n          headers: $data.headers,\n          items: $data.questions,\n          loading: $data.loading,\n          \"server-items-length\": $data.totalQuestions,\n          options: $data.options,\n          \"onUpdate:options\": _cache[0] || (_cache[0] = $event => $data.options = $event),\n          \"items-per-page\": $data.options.itemsPerPage,\n          class: \"elevation-1\"\n        }, {\n          top: _withCtx(() => [_createVNode(_component_v_toolbar, {\n            flat: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n              default: _withCtx(() => [_createTextVNode(\"질문 목록\")]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_divider, {\n              class: \"mx-4\",\n              inset: \"\",\n              vertical: \"\"\n            }), _createVNode(_component_v_spacer), $data.isAdmin ? (_openBlock(), _createBlock(_component_v_btn, {\n              key: 0,\n              onClick: $options.createNewQuestion,\n              class: \"create-button\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"질문 작성\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n              onClick: _ctx.fetchQuestions\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"새로고침\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          item: _withCtx(({\n            item\n          }) => [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(item.id), 1 /* TEXT */), _createElementVNode(\"td\", {\n            onClick: $event => $options.goToDetail(item.id),\n            class: \"clickable\"\n          }, _toDisplayString(item.title), 9 /* TEXT, PROPS */, _hoisted_1), _createElementVNode(\"td\", null, _toDisplayString(item.questionUserName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(item.createdTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, [item.answerText ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString(item.answerText), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"답변 없음\"))]), $data.isAdmin ? (_openBlock(), _createElementBlock(\"td\", _hoisted_4, [_createVNode(_component_v_btn, {\n            onClick: $event => $options.updateItem(item.id)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"수정\")]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n            onClick: $event => $options.deleteItem(item.id)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"삭제\")]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true)])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"headers\", \"items\", \"loading\", \"server-items-length\", \"options\", \"items-per-page\"]), _createVNode(_component_v_pagination, {\n          modelValue: $data.currentPage,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.currentPage = $event),\n          length: $data.totalPages,\n          onInput: _ctx.fetchQuestions\n        }, null, 8 /* PROPS */, [\"modelValue\", \"length\", \"onInput\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["key","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","_component_v_col","cols","_component_v_data_table","headers","$data","items","questions","loading","totalQuestions","options","_cache","$event","itemsPerPage","class","top","_component_v_toolbar","flat","_component_v_toolbar_title","_createTextVNode","_","_component_v_divider","inset","vertical","_component_v_spacer","isAdmin","_component_v_btn","onClick","$options","createNewQuestion","_createCommentVNode","_ctx","fetchQuestions","item","_createElementVNode","_toDisplayString","id","goToDetail","title","_hoisted_1","questionUserName","formatDate","createdTime","answerText","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","updateItem","deleteItem","_component_v_pagination","modelValue","currentPage","length","totalPages","onInput"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaList.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"questions\"\n            :loading=\"loading\"\n            :server-items-length=\"totalQuestions\"\n            v-model:options=\"options\"\n            :items-per-page=\"options.itemsPerPage\"\n            class=\"elevation-1\"\n          >\n            <template #top>\n              <v-toolbar flat>\n                <v-toolbar-title>질문 목록</v-toolbar-title>\n                <v-divider class=\"mx-4\" inset vertical></v-divider>\n                <v-spacer></v-spacer>\n                <v-btn v-if=\"isAdmin\" @click=\"createNewQuestion\" class=\"create-button\">질문 작성</v-btn>\n                <v-btn @click=\"fetchQuestions\">새로고침</v-btn>\n              </v-toolbar>\n            </template>\n  \n            <template #item=\"{ item }\">\n              <tr>\n                <td>{{ item.id }}</td>\n                <td @click=\"goToDetail(item.id)\" class=\"clickable\">{{ item.title }}</td>\n                <td>{{ item.questionUserName }}</td>\n                <td>{{ formatDate(item.createdTime) }}</td>\n                <td>\n                  <span v-if=\"item.answerText\">{{ item.answerText }}</span>\n                  <span v-else>답변 없음</span>\n                </td>\n                <td v-if=\"isAdmin\">\n                  <v-btn @click=\"updateItem(item.id)\">수정</v-btn>\n                  <v-btn @click=\"deleteItem(item.id)\">삭제</v-btn>\n                </td>\n              </tr>\n            </template>\n          </v-data-table>\n  \n          <v-pagination\n            v-model=\"currentPage\"\n            :length=\"totalPages\"\n            @input=\"fetchQuestions\"\n          ></v-pagination>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        questions: [],\n        totalQuestions: 0,\n        loading: false,\n        headers: [\n          { text: '번호', value: 'id' },\n          { text: '제목', value: 'title' },\n          { text: '작성자', value: 'questionUserName' },\n          { text: '작성 시간', value: 'createdTime' },\n          { text: '답변', value: 'answerText' },\n          { text: '관리', value: 'actions', sortable: false }\n        ],\n        options: {\n          page: 1,\n          itemsPerPage: 10,\n          sortBy: ['createdTime'],\n          sortDesc: [true]\n        },\n        currentPage: 1,\n        totalPages: 1,\n        isAdmin: false,\n      };\n    },\n    created() {\n      this.checkAdminRole();\n      this.fetchQuestions();\n    },\n    methods: {\n      checkAdminRole() {\n        const role = localStorage.getItem('role');\n        this.isAdmin = role === 'ADMIN';\n      },\n      methods: {\n  async fetchQuestions() {\n    try {\n      this.loading = true;\n      const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n        params: {\n          page: this.currentPage - 1,\n          size: this.options.itemsPerPage,\n          sort: `${this.options.sortBy[0]},${this.options.sortDesc[0] ? 'desc' : 'asc'}`\n        }\n      });\n      const data = response.data.qnaList; // 응답 데이터의 구조에 맞게 변경\n      if (data && data.content) { // 데이터가 null이 아닌지 확인\n        this.questions = data.content;\n        this.totalQuestions = data.totalElements;\n        this.totalPages = data.totalPages;\n      } else {\n        console.error('올바르지 않은 데이터 형식입니다:', response.data);\n      }\n    } catch (error) {\n      console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      alert('질문 목록을 불러오는 데 실패했습니다.');\n    } finally {\n      this.loading = false;\n    }\n  },\n},\n\n      formatDate(date) {\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      goToDetail(id) {\n        this.$router.push({ name: 'QnaDetail', params: { id } });\n      },\n      createNewQuestion() {\n        this.$router.push({ name: 'QnaCreate' });\n      },\n      updateItem(id) {\n        this.$router.push({ name: 'QnaUpdate', params: { id } });\n      },\n      async deleteItem(id) {\n        try {\n          const confirmed = confirm('이 질문을 삭제하시겠습니까?');\n          if (confirmed) {\n            await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${id}`);\n            alert('질문이 삭제되었습니다.');\n            this.fetchQuestions();\n          }\n        } catch (error) {\n          console.error('질문을 삭제하는 중 오류가 발생했습니다:', error);\n          alert('질문 삭제에 실패했습니다.');\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .clickable {\n    cursor: pointer;\n    color: blue;\n    text-decoration: underline;\n  }\n  \n  .create-button {\n    background-color: #007bff;\n    color: white;\n    margin-right: 10px;\n  }\n  .create-button:hover {\n    background-color: #0056b3;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}