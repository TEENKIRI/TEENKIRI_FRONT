{"ast":null,"code":"import VideoPlayer from '@/components/Lecture/videoPlayer.vue';\nimport axios from 'axios';\nexport default {\n  name: 'VideoExample',\n  components: {\n    VideoPlayer\n  },\n  data() {\n    return {\n      user: {\n        token: \"\",\n        id: \"\",\n        email: \"\"\n      },\n      lectureId: \"\",\n      lectureData: {},\n      videoOptions: {\n        autoplay: true,\n        controls: true,\n        sources: [{\n          src: \"\",\n          type: 'video/mp4'\n        }]\n      }\n    };\n  },\n  async created() {\n    try {\n      await this.$store.dispatch('setUserAllInfoActions');\n      this.user = this.$store.getters.getUserObj;\n      if (this.user.token === \"\") {\n        alert('로그인이 필요합니다.');\n        location.href = -1;\n      }\n      this.lectureId = this.$route.params.id;\n\n      // 강의 세부 정보를 가져옵니다.\n      await this.getLectureDetail();\n\n      // 강의 세부 정보에서 비디오 URL을 설정하고 VideoPlayer 컴포넌트를 렌더링합니다.\n      this.setLectureDetail();\n    } catch (error) {\n      console.error(\"An error occurred while fetching user info:\", error);\n    }\n  },\n  methods: {\n    async getLectureDetail() {\n      console.log(\"lecture detail 실행!\", this.lectureId);\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/lecture/detail/${this.lectureId}`);\n        const additionalData = response.data.result;\n        console.log(response);\n        this.lectureData = additionalData;\n\n        // lectureData에서 videoUrl을 가져와 videoOptions를 업데이트합니다.\n        console.log(this.videoOptions);\n        this.videoOptions.sources[0].src = this.lectureData.videoUrl;\n        console.log(this.videoOptions);\n      } catch (e) {\n        if (e.response.data.status_code === 404) {\n          alert(\"수강신청이 되지 않았습니다.\");\n          history.go(-1);\n        } else {\n          console.error(e);\n        }\n      }\n    },\n    setLectureDetail() {\n      // videoOptions가 업데이트된 후 loadVideo를 true로 설정하여 VideoPlayer를 렌더링합니다.\n      this.loadVideo = true;\n    }\n  }\n};","map":{"version":3,"names":["VideoPlayer","axios","name","components","data","user","token","id","email","lectureId","lectureData","videoOptions","autoplay","controls","sources","src","type","created","$store","dispatch","getters","getUserObj","alert","location","href","$route","params","getLectureDetail","setLectureDetail","error","console","methods","log","response","get","process","env","VUE_APP_API_BASE_URL","additionalData","result","videoUrl","e","status_code","history","go","loadVideo"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/lecture/LectureDetail.vue"],"sourcesContent":["<template>\n  <v-container>\n    <div class=\"mt-5\">\n      <h1>{{ lectureData.title }}</h1>\n      <div class=\"d-flex justify-center mt-5\">\n        <!-- videoOptions.sources가 설정되었을 때만 VideoPlayer를 렌더링 -->\n        <video-player v-if=\"videoOptions.sources[0].src\" :options=\"videoOptions\" />\n      </div>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport VideoPlayer from '@/components/Lecture/videoPlayer.vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'VideoExample',\n  components: {\n    VideoPlayer\n  },\n  data() {\n    return {\n      user: {\n        token: \"\",\n        id: \"\",\n        email: \"\"\n      },\n      lectureId: \"\",\n      lectureData: {},\n      videoOptions: {\n        autoplay: true,\n        controls: true,\n        sources: [\n          {\n            src: \"\",\n            type: 'video/mp4'\n          }\n        ]\n      }\n    };\n  },\n  async created() {\n    try {\n      await this.$store.dispatch('setUserAllInfoActions');\n      this.user = this.$store.getters.getUserObj;\n\n      if (this.user.token === \"\") {\n        alert('로그인이 필요합니다.');\n        location.href = -1;\n      }\n\n      this.lectureId = this.$route.params.id;\n\n      // 강의 세부 정보를 가져옵니다.\n      await this.getLectureDetail();\n\n      // 강의 세부 정보에서 비디오 URL을 설정하고 VideoPlayer 컴포넌트를 렌더링합니다.\n      this.setLectureDetail();\n    } catch (error) {\n      console.error(\"An error occurred while fetching user info:\", error);\n    }\n  },\n  methods: {\n    async getLectureDetail() {\n      console.log(\"lecture detail 실행!\", this.lectureId)\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/user/lecture/detail/${this.lectureId}`\n        );\n        const additionalData = response.data.result;\n        console.log(response);\n        this.lectureData = additionalData;\n\n        // lectureData에서 videoUrl을 가져와 videoOptions를 업데이트합니다.\n        console.log(this.videoOptions)\n        this.videoOptions.sources[0].src = this.lectureData.videoUrl;\n        console.log(this.videoOptions)\n      } catch (e) {\n        if(e.response.data.status_code === 404){\n          alert(\"수강신청이 되지 않았습니다.\");\n          history.go(-1);\n        }else{\n          console.error(e)\n        }\n      }\n    },\n    setLectureDetail() {\n      // videoOptions가 업데이트된 후 loadVideo를 true로 설정하여 VideoPlayer를 렌더링합니다.\n      this.loadVideo = true;\n    }\n  }\n};\n</script>"],"mappings":"AAaA,OAAOA,WAAU,MAAO,sCAAsC;AAC9D,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,EAAE,EAAE,EAAE;QACNC,KAAK,EAAE;MACT,CAAC;MACDC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,CAAC,CAAC;MACfC,YAAY,EAAE;QACZC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,CACP;UACEC,GAAG,EAAE,EAAE;UACPC,IAAI,EAAE;QACR;MAEJ;IACF,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,uBAAuB,CAAC;MACnD,IAAI,CAACd,IAAG,GAAI,IAAI,CAACa,MAAM,CAACE,OAAO,CAACC,UAAU;MAE1C,IAAI,IAAI,CAAChB,IAAI,CAACC,KAAI,KAAM,EAAE,EAAE;QAC1BgB,KAAK,CAAC,aAAa,CAAC;QACpBC,QAAQ,CAACC,IAAG,GAAI,CAAC,CAAC;MACpB;MAEA,IAAI,CAACf,SAAQ,GAAI,IAAI,CAACgB,MAAM,CAACC,MAAM,CAACnB,EAAE;;MAEtC;MACA,MAAM,IAAI,CAACoB,gBAAgB,CAAC,CAAC;;MAE7B;MACA,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACzB,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACrE;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMJ,gBAAgBA,CAAA,EAAG;MACvBG,OAAO,CAACE,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACvB,SAAS;MAChD,IAAI;QACF,MAAMwB,QAAO,GAAI,MAAMhC,KAAK,CAACiC,GAAG,CAC9B,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,wBAAwB,IAAI,CAAC5B,SAAS,EAC3E,CAAC;QACD,MAAM6B,cAAa,GAAIL,QAAQ,CAAC7B,IAAI,CAACmC,MAAM;QAC3CT,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC;QACrB,IAAI,CAACvB,WAAU,GAAI4B,cAAc;;QAEjC;QACAR,OAAO,CAACE,GAAG,CAAC,IAAI,CAACrB,YAAY;QAC7B,IAAI,CAACA,YAAY,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,GAAE,GAAI,IAAI,CAACL,WAAW,CAAC8B,QAAQ;QAC5DV,OAAO,CAACE,GAAG,CAAC,IAAI,CAACrB,YAAY;MAC/B,EAAE,OAAO8B,CAAC,EAAE;QACV,IAAGA,CAAC,CAACR,QAAQ,CAAC7B,IAAI,CAACsC,WAAU,KAAM,GAAG,EAAC;UACrCpB,KAAK,CAAC,iBAAiB,CAAC;UACxBqB,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,MAAI;UACHd,OAAO,CAACD,KAAK,CAACY,CAAC;QACjB;MACF;IACF,CAAC;IACDb,gBAAgBA,CAAA,EAAG;MACjB;MACA,IAAI,CAACiB,SAAQ,GAAI,IAAI;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}