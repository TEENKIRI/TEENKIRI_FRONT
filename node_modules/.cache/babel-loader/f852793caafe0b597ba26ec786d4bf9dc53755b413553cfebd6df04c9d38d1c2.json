{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: {},\n      searchType: \"all\",\n      searchOptions: [{\n        text: \"전체\",\n        value: \"all\"\n      }, {\n        text: \"강사명\",\n        value: \"userTeacher\"\n      }, {\n        text: \"강좌명\",\n        value: \"title\"\n      }],\n      selectedType: \"latest\",\n      selectedOptions: [{\n        text: \"최신순\",\n        value: \"latest\"\n      }, {\n        text: \"평점순\",\n        value: \"like\"\n      }],\n      searchValue: \"\",\n      course: {\n        courseList: [],\n        selectedMenu: \"all\",\n        page: {\n          pageSize: 5,\n          currentPage: 0\n        }\n      },\n      subject: {\n        subjectList: [],\n        subjectIsMainList: [],\n        page: {\n          pageSize: 5,\n          currentPage: 0\n        }\n      },\n      grade: {\n        gradeList: [{\n          value: \"GRADE_1\",\n          text: \"1학년\"\n        }, {\n          value: \"GRADE_2\",\n          text: \"2학년\"\n        }, {\n          value: \"GRADE_3\",\n          text: \"3학년\"\n        }, {\n          value: \"GRADE_4\",\n          text: \"4학년\"\n        }, {\n          value: \"GRADE_5\",\n          text: \"5학년\"\n        }, {\n          value: \"GRADE_6\",\n          text: \"6학년\"\n        }],\n        selectedGrades: []\n      },\n      page: 1,\n      totalPages: 1\n    };\n  },\n  methods: {\n    async performSearch() {\n      try {\n        const params = {\n          size: 3,\n          page: this.page - 1,\n          // MySQL에서의 페이지는 0부터 시작\n          search: this.searchValue,\n          searchType: this.searchType,\n          sortType: this.selectedType,\n          grades: this.grade.selectedGrades.join(\"&\"),\n          courseId: this.course.selectedMenu !== \"all\" ? this.course.selectedMenu : null\n        };\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/subject/list`, {\n          params\n        });\n        this.subject.subjectList = response.data.result.content;\n        this.totalPages = response.data.result.totalPages;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  },\n  watch: {\n    selectedType() {\n      this.performSearch();\n    },\n    selectedGrades() {\n      this.performSearch();\n    },\n    \"course.selectedMenu\": function () {\n      this.performSearch();\n    },\n    searchValue() {\n      this.performSearch();\n    },\n    searchType() {\n      this.performSearch();\n    }\n  },\n  created() {\n    this.performSearch();\n  }\n};","map":{"version":3,"names":["data","user","searchType","searchOptions","text","value","selectedType","selectedOptions","searchValue","course","courseList","selectedMenu","page","pageSize","currentPage","subject","subjectList","subjectIsMainList","grade","gradeList","selectedGrades","totalPages","methods","performSearch","params","size","search","sortType","grades","join","courseId","response","axios","get","process","env","VUE_APP_API_BASE_URL","result","content","e","console","error","watch","course.selectedMenu","created"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <!-- 기존 코드 생략 -->\n\n    <!-- 페이지네이션 -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @input=\"performSearch\"\n    ></v-pagination>\n\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      user: {},\n      searchType: \"all\",\n      searchOptions: [\n        { text: \"전체\", value: \"all\" },\n        { text: \"강사명\", value: \"userTeacher\" },\n        { text: \"강좌명\", value: \"title\" },\n      ],\n      selectedType: \"latest\",\n      selectedOptions: [\n        { text: \"최신순\", value: \"latest\" },\n        { text: \"평점순\", value: \"like\" },\n      ],\n      searchValue: \"\",\n      course: {\n        courseList: [],\n        selectedMenu: \"all\",\n        page: {\n          pageSize: 5,\n          currentPage: 0,\n        },\n      },\n      subject: {\n        subjectList: [],\n        subjectIsMainList: [],\n        page: {\n          pageSize: 5,\n          currentPage: 0,\n        },\n      },\n      grade: {\n        gradeList: [\n          { value: \"GRADE_1\", text: \"1학년\" },\n          { value: \"GRADE_2\", text: \"2학년\" },\n          { value: \"GRADE_3\", text: \"3학년\" },\n          { value: \"GRADE_4\", text: \"4학년\" },\n          { value: \"GRADE_5\", text: \"5학년\" },\n          { value: \"GRADE_6\", text: \"6학년\" },\n        ],\n        selectedGrades: [],\n      },\n      page: 1,\n      totalPages: 1,\n    };\n  },\n  methods: {\n    async performSearch() {\n      try {\n        const params = {\n          size: 3,\n          page: this.page - 1, // MySQL에서의 페이지는 0부터 시작\n          search: this.searchValue,\n          searchType: this.searchType,\n          sortType: this.selectedType,\n          grades: this.grade.selectedGrades.join(\"&\"),\n          courseId: this.course.selectedMenu !== \"all\" ? this.course.selectedMenu : null,\n        };\n\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/subject/list`, { params });\n        this.subject.subjectList = response.data.result.content;\n        this.totalPages = response.data.result.totalPages;\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  },\n  watch: {\n    selectedType() {\n      this.performSearch();\n    },\n    selectedGrades() {\n      this.performSearch();\n    },\n    \"course.selectedMenu\": function () {\n      this.performSearch();\n    },\n    searchValue() {\n      this.performSearch();\n    },\n    searchType() {\n      this.performSearch();\n    },\n  },\n  created() {\n    this.performSearch();\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}