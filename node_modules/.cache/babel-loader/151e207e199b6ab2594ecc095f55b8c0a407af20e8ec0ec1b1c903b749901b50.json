{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport SubjectDetailComponent from '@/components/subject/SubjectDetailComponent.vue';\nexport default {\n  components: {\n    SubjectDetailComponent\n  },\n  data() {\n    return {\n      subjectId: this.$route.params.id,\n      selectedMenu: 'SubjectQna',\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n      userRole: localStorage.getItem('role')\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/subject/${this.subjectId}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.itemsPerPage\n          }\n        });\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = String(d.getMonth() + 1).padStart(2, '0');\n      const day = String(d.getDate()).padStart(2, '0');\n      return `${year}년 ${month}월.${day}일`;\n    },\n    createNewQuestion() {\n      this.$router.push(`/qna/create?subjectId=${this.subjectId}`);\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","SubjectDetailComponent","components","data","subjectId","$route","params","id","selectedMenu","questions","currentPage","totalPages","itemsPerPage","userRole","localStorage","getItem","created","fetchQuestions","methods","response","get","process","env","VUE_APP_API_BASE_URL","page","size","result","content","console","error","formatDate","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","createNewQuestion","$router","push","viewDetail","goToPreviousPage","goToNextPage","goToPage"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectQna.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <SubjectDetailComponent v-model=\"selectedMenu\" />\n\n      <h2>QnA 목록</h2>\n      <v-card>\n        <v-card-title>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" @click=\"createNewQuestion\">질문 작성하기</v-btn>\n        </v-card-title>\n        <v-card-text>\n          <v-table>\n            <thead>\n              <tr>\n                <th>번호</th>\n                <th>작성자</th>\n                <th>제목</th>\n                <th>강좌명</th>\n                <th>작성일</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(question, index) in questions\" :key=\"question.id\">\n                <td>{{ index + 1 + (currentPage - 1) * itemsPerPage }}</td>\n                <td>{{ question.questionUserName }}</td>\n                <td @click=\"viewDetail(question.id)\" class=\"clickable\">{{ question.title }}</td>\n                <td>{{ question.subjectTitle }} </td>\n                <td>{{ formatDate(question.createdTime) }}</td>\n              </tr>\n            </tbody>\n          </v-table>\n        </v-card-text>\n        <v-card-actions class=\"pagination\">\n          <v-btn @click=\"goToPreviousPage\" :disabled=\"currentPage === 1\">Previous</v-btn>\n          <v-btn\n            v-for=\"page in totalPages\"\n            :key=\"page\"\n            @click=\"goToPage(page)\"\n            :class=\"{ active: currentPage === page }\"\n            class=\"pagination-page\"\n            text\n          >\n            {{ page }}\n          </v-btn>\n          <v-btn @click=\"goToNextPage\" :disabled=\"currentPage === totalPages\">Next</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\nimport SubjectDetailComponent from '@/components/subject/SubjectDetailComponent.vue';\n\nexport default {\n  components: {\n    SubjectDetailComponent,\n  },\n  data() {\n    return {\n      subjectId: this.$route.params.id,\n      selectedMenu: 'SubjectQna',\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n      userRole: localStorage.getItem('role'),\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/subject/${this.subjectId}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.itemsPerPage,\n          },\n        });\n\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = String(d.getMonth() + 1).padStart(2, '0');\n      const day = String(d.getDate()).padStart(2, '0');\n      return `${year}년 ${month}월.${day}일`;\n    },\n    createNewQuestion() {\n      this.$router.push(`/qna/create?subjectId=${this.subjectId}`);\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.clickable {\n  cursor: pointer;\n  color: blue;\n  text-decoration: underline;\n}\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n.pagination-page {\n  margin: 0 5px;\n  cursor: pointer;\n}\n.pagination-page.active {\n  font-weight: bold;\n  color: blue;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}