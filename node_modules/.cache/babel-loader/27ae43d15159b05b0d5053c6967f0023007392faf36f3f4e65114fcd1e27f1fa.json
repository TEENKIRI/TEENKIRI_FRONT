{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"작성자:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"작성 시간:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"질문 내용:\")], -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"답변자:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"답변 시간:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"답변 내용:\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_alert = _resolveComponent(\"v-alert\");\n  const _component_v_progress_circular = _resolveComponent(\"v-progress-circular\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [$data.questionDetail ? (_openBlock(), _createBlock(_component_v_card, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_createElementVNode(\"h3\", null, _toDisplayString($data.questionDetail.title), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, {\n            cols: \"12\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"p\", null, [_hoisted_1, _createTextVNode(\" \" + _toDisplayString($data.questionDetail.questionUserNickname), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_2, _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.questionDetail.createdTime)), 1 /* TEXT */)]), _createCommentVNode(\" 질문 이미지 표시 \"), $data.questionDetail.qImageUrl ? (_openBlock(), _createBlock(_component_v_img, {\n              key: 0,\n              src: $data.questionDetail.qImageUrl,\n              alt: \"질문 이미지\",\n              \"max-width\": \"400\",\n              class: \"my-3\"\n            }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _hoisted_3, _createElementVNode(\"p\", null, _toDisplayString($data.questionDetail.questionText), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), $data.questionDetail.answerText ? (_openBlock(), _createBlock(_component_v_col, {\n            key: 0,\n            cols: \"12\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_divider, {\n              class: \"my-3\"\n            }), _createElementVNode(\"p\", null, [_hoisted_4, _createTextVNode(\" \" + _toDisplayString($data.questionDetail.answeredByNickname), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_5, _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.questionDetail.answeredAt)), 1 /* TEXT */)]), _createCommentVNode(\" 답변 이미지 표시 \"), $data.questionDetail.aImageUrl ? (_openBlock(), _createBlock(_component_v_img, {\n              key: 0,\n              src: $data.questionDetail.aImageUrl,\n              alt: \"답변 이미지\",\n              \"max-width\": \"400\",\n              class: \"my-3\"\n            }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _hoisted_6, _createElementVNode(\"p\", null, _toDisplayString($data.questionDetail.answerText), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          color: \"primary\",\n          onClick: $options.goBack\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"목록으로 돌아가기\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : $data.error ? (_openBlock(), _createBlock(_component_v_alert, {\n      key: 1,\n      type: \"error\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.error), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_v_progress_circular, {\n      key: 2,\n      indeterminate: \"\",\n      color: \"primary\"\n    }))]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","class","default","_withCtx","$data","questionDetail","_component_v_card","key","_createVNode","_component_v_card_title","_toDisplayString","title","_","_component_v_card_text","_component_v_row","_component_v_col","cols","_hoisted_1","_createTextVNode","questionUserNickname","_hoisted_2","$options","formatDate","createdTime","_createCommentVNode","qImageUrl","_component_v_img","src","alt","_hoisted_3","questionText","answerText","_component_v_divider","_hoisted_4","answeredByNickname","_hoisted_5","answeredAt","aImageUrl","_hoisted_6","_component_v_card_actions","_component_v_btn","color","onClick","goBack","error","_component_v_alert","type","_component_v_progress_circular","indeterminate"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaDetail.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card v-if=\"questionDetail\">\n        <v-card-title>\n          <h3>{{ questionDetail.title }}</h3>\n        </v-card-title>\n  \n        <v-card-text>\n          <v-row>\n            <v-col cols=\"12\">\n              <p><strong>작성자:</strong> {{ questionDetail.questionUserNickname }}</p>\n              <p><strong>작성 시간:</strong> {{ formatDate(questionDetail.createdTime) }}</p>\n              <!-- 질문 이미지 표시 -->\n              <v-img\n                v-if=\"questionDetail.qImageUrl\"\n                :src=\"questionDetail.qImageUrl\"\n                alt=\"질문 이미지\"\n                max-width=\"400\"\n                class=\"my-3\"\n              />\n              <p><strong>질문 내용:</strong></p>\n              <p>{{ questionDetail.questionText }}</p>\n            </v-col>\n  \n            <v-col cols=\"12\" v-if=\"questionDetail.answerText\">\n              <v-divider class=\"my-3\"></v-divider>\n              <p><strong>답변자:</strong> {{ questionDetail.answeredByNickname }}</p>\n              <p><strong>답변 시간:</strong> {{ formatDate(questionDetail.answeredAt) }}</p>\n              <!-- 답변 이미지 표시 -->\n              <v-img\n                v-if=\"questionDetail.aImageUrl\"\n                :src=\"questionDetail.aImageUrl\"\n                alt=\"답변 이미지\"\n                max-width=\"400\"\n                class=\"my-3\"\n              />\n              <p><strong>답변 내용:</strong></p>\n              <p>{{ questionDetail.answerText }}</p>\n            </v-col>\n          </v-row>\n        </v-card-text>\n  \n        <v-card-actions>\n          <v-btn color=\"primary\" @click=\"goBack\">목록으로 돌아가기</v-btn>\n        </v-card-actions>\n      </v-card>\n  \n      <v-alert type=\"error\" v-else-if=\"error\">\n        {{ error }}\n      </v-alert>\n  \n      <v-progress-circular v-else indeterminate color=\"primary\"></v-progress-circular>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        questionDetail: null,\n        error: null,\n      };\n    },\n    created() {\n      this.fetchQuestionDetail();\n    },\n    methods: {\n      async fetchQuestionDetail() {\n        const questionId = this.$route.params.id;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n          this.questionDetail = response.data.result;\n          console.log(\"Question Image URL:\", this.questionDetail.qImageUrl); // 이미지 URL을 확인\n          console.log(\"Answer Image URL:\", this.questionDetail.aImageUrl);   // 이미지 URL을 확인\n        } catch (error) {\n          this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n        }\n      },\n      formatDate(date) {\n        if (!date) return '';\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      goBack() {\n        this.$router.push('/qna/list');\n      },\n    },\n  };\n  </script>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}