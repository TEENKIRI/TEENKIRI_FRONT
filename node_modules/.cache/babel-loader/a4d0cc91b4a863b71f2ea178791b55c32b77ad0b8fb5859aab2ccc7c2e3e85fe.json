{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport SubjectDetailComponent from '@/components/subject/SubjectDetailComponent.vue';\nexport default {\n  components: {\n    SubjectDetailComponent\n  },\n  data() {\n    return {\n      subjectId: this.$route.params.id,\n      selectedMenu: 'SubjectQna',\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n      userRole: localStorage.getItem('role'),\n      activeItem: null // 활성화된 수정/삭제 메뉴의 ID를 추적\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/subject/${this.subjectId}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.itemsPerPage\n          }\n        });\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = String(d.getMonth() + 1).padStart(2, '0');\n      const day = String(d.getDate()).padStart(2, '0');\n      return `${year}년 ${month}월 ${day}일`;\n    },\n    createNewQuestion() {\n      this.$router.push(`/qna/create?subjectId=${this.subjectId}`);\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    },\n    toggleConLayer(id) {\n      this.activeItem = this.activeItem === id ? null : id; // 이미 활성화된 아이템이면 비활성화\n    },\n    canEditOrDelete(item) {\n      // 사용자 권한에 따라 수정/삭제 가능 여부 판단 (예: 작성자 또는 관리자만 가능)\n      return this.userRole === 'admin' || item.questionUserName === localStorage.getItem('userName');\n    },\n    modifyPost(id) {\n      // 수정 로직을 여기에 추가 (예: 수정 페이지로 이동)\n      this.$router.push(`/qna/edit/${id}`);\n    },\n    async deletePost(id) {\n      if (confirm('정말로 삭제하시겠습니까?')) {\n        try {\n          await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/qna/${id}`);\n          this.fetchQuestions(); // 삭제 후 질문 목록 갱신\n        } catch (error) {\n          console.error('질문 삭제 중 오류가 발생했습니다:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","SubjectDetailComponent","components","data","subjectId","$route","params","id","selectedMenu","questions","currentPage","totalPages","itemsPerPage","userRole","localStorage","getItem","activeItem","created","fetchQuestions","methods","response","get","process","env","VUE_APP_API_BASE_URL","page","size","result","content","console","error","formatDate","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","createNewQuestion","$router","push","viewDetail","goToPreviousPage","goToNextPage","goToPage","toggleConLayer","canEditOrDelete","item","questionUserName","modifyPost","deletePost","confirm","delete"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectQna.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <SubjectDetailComponent v-model=\"selectedMenu\" />\n\n      <h1>QnA 목록</h1>\n\n      <div class=\"btnWrap\">\n        <a href=\"javascript:void(0)\" class=\"btn_write\" @click=\"createNewQuestion\">질문 작성하기</a>\n      </div>\n\n      <table class=\"tbl_list\">\n        <caption></caption>\n        <colgroup>\n          <col width=\"80\" />\n          <col width=\"\" />\n          <col width=\"\" />\n          <col width=\"140\" />\n          <col width=\"180\" /> <!-- 작성일 열의 너비를 180px로 설정 -->\n          <col width=\"140\" />\n          <col width=\"140\" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th>번호</th>\n            <th>강의명</th>\n            <th>제목</th>\n            <th>작성자</th>\n            <th>작성일</th>\n            <th>상태</th>\n            <th>관리</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(question, index) in questions\" :key=\"question.id\">\n            <td>{{ index + 1 + (currentPage - 1) * itemsPerPage }}</td>\n            <td class=\"text_left\">{{ question.subjectTitle }}</td>\n            <td class=\"text_left\">\n              <a href=\"javascript:void(0)\" class=\"subject\" @click=\"viewDetail(question.id)\">\n                {{ question.title }} <span class=\"cnt\">{{ question.answerCount }}</span>\n              </a>\n            </td>\n            <td>{{ question.questionUserName }}</td>\n            <td>{{ formatDate(question.createdTime) }}</td>\n            <td>\n              <v-chip\n                :color=\"question.answeredAt ? 'gsk' : 'red'\"\n                dark\n                small\n              >\n                {{ question.answeredAt ? '답변완료' : '미답변' }}\n              </v-chip>\n            </td>\n            <td>\n              <button\n                type=\"button\"\n                class=\"btn_adm_control\"\n                v-if=\"canEditOrDelete(question)\"\n                @click=\"toggleConLayer(question.id)\"\n              >•••</button>\n              <div class=\"conLayer\" v-if=\"activeItem === question.id\">\n                <a href=\"javascript:void(0)\" class=\"btn_board_modify\" @click=\"modifyPost(question.id)\">수정</a>\n                <a href=\"javascript:void(0)\" class=\"btn_board_del btn_del\" @click=\"deletePost(question.id)\">삭제</a>\n              </div>\n            </td>\n          </tr>\n\n          <!-- 답변 row -->\n          <template v-for=\"question in questions\" :key=\"question.id\">\n            <template v-if=\"question.isAnswered\">\n              <tr v-for=\"reply in question.replies\" :key=\"reply.id\" class=\"reply\">\n                <td></td>\n                <td class=\"text_left\">{{ reply.subjectTitle }}</td>\n                <td class=\"text_left\">\n                  <i class=\"ico_reply\"></i>\n                  <a href=\"javascript:void(0)\" class=\"subject\" @click=\"viewDetail(reply.id)\">\n                    [답변] {{ reply.title }}\n                  </a>\n                </td>\n                <td>{{ reply.userName }}</td>\n                <td>{{ formatDate(reply.createdTime) }}</td>\n                <td>\n                  <v-chip\n                    :color=\"reply.isAnswered ? 'green' : 'red'\"\n                    dark\n                    small\n                  >\n                    {{ reply.isAnswered ? '답변완료' : '미답변' }}\n                  </v-chip>\n                </td>\n                <td>\n                  <button type=\"button\" class=\"btn_adm_control\" @click=\"toggleConLayer(reply.id)\">•••</button>\n                  <div class=\"conLayer\" v-if=\"activeItem === reply.id\">\n                    <a href=\"javascript:void(0)\" class=\"btn_board_modify\" @click=\"modifyPost(reply.id)\">수정</a>\n                    <a href=\"javascript:void(0)\" class=\"btn_board_del btn_del\" @click=\"deletePost(reply.id)\">삭제</a>\n                  </div>\n                </td>\n              </tr>\n            </template>\n          </template>\n        </tbody>\n      </table>\n\n      <div class=\"pagingWrap\">\n        <ul>\n          <li><a href=\"javascript:void(0)\" class=\"btn_paging_start\" @click=\"goToPage(1)\"></a></li>\n          <li><a href=\"javascript:void(0)\" class=\"btn_paging_prev\" @click=\"goToPreviousPage\"></a></li>\n          <li v-for=\"page in totalPages\" :key=\"page\">\n            <a href=\"javascript:void(0)\" class=\"btn_paging\" :class=\"{ active: currentPage === page }\" @click=\"goToPage(page)\">\n              {{ page }}\n            </a>\n          </li>\n          <li><a href=\"javascript:void(0)\" class=\"btn_paging_next\" @click=\"goToNextPage\"></a></li>\n          <li><a href=\"javascript:void(0)\" class=\"btn_paging_end\" @click=\"goToPage(totalPages)\"></a></li>\n        </ul>\n      </div>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\nimport SubjectDetailComponent from '@/components/subject/SubjectDetailComponent.vue';\n\nexport default {\n  components: {\n    SubjectDetailComponent,\n  },\n  data() {\n    return {\n      subjectId: this.$route.params.id,\n      selectedMenu: 'SubjectQna',\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n      userRole: localStorage.getItem('role'),\n      activeItem: null, // 활성화된 수정/삭제 메뉴의 ID를 추적\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/subject/${this.subjectId}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.itemsPerPage,\n          },\n        });\n\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = String(d.getMonth() + 1).padStart(2, '0');\n      const day = String(d.getDate()).padStart(2, '0');\n      return `${year}년 ${month}월 ${day}일`;\n    },\n    createNewQuestion() {\n      this.$router.push(`/qna/create?subjectId=${this.subjectId}`);\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    },\n    toggleConLayer(id) {\n      this.activeItem = this.activeItem === id ? null : id; // 이미 활성화된 아이템이면 비활성화\n    },\n    canEditOrDelete(item) {\n      // 사용자 권한에 따라 수정/삭제 가능 여부 판단 (예: 작성자 또는 관리자만 가능)\n      return this.userRole === 'admin' || item.questionUserName === localStorage.getItem('userName');\n    },\n    modifyPost(id) {\n      // 수정 로직을 여기에 추가 (예: 수정 페이지로 이동)\n      this.$router.push(`/qna/edit/${id}`);\n    },\n    async deletePost(id) {\n      if (confirm('정말로 삭제하시겠습니까?')) {\n        try {\n          await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/qna/${id}`);\n          this.fetchQuestions(); // 삭제 후 질문 목록 갱신\n        } catch (error) {\n          console.error('질문 삭제 중 오류가 발생했습니다:', error);\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding-top: 20px;\n}\n\n.LectureDetails {\n  background-color: #f9f9f9;\n  padding: 20px;\n  border-radius: 8px;\n}\n\n.inner {\n  max-width: 1200px;\n  margin: auto;\n}\n\n.btnWrap {\n  text-align: right;\n  margin-bottom: 20px;\n}\n\n.btn_write {\n  background-color: black;\n  color: #fff;\n  padding: 10px 20px;\n  text-decoration: none;\n  border-radius: 5px;\n  font-size: 16px;\n  display: inline-block;\n  transition: background-color 0.3s ease;\n}\n\n.btn_write:hover {\n  background-color: #0056b3;\n}\n\n.tbl_list {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.tbl_list th,\n.tbl_list td {\n  border-top: 1px solid #ddd;\n  border-bottom: 1px solid #ddd;\n  padding: 10px;\n  text-align: left;\n  border-left: none; /* 세로 줄 제거 */\n  border-right: none; /* 세로 줄 제거 */\n}\n\n.tbl_list th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n\n.text_left {\n  text-align: left;\n}\n\n.subject {\n  color: #007bff;\n  cursor: pointer;\n  text-decoration: underline;\n}\n\n.subject:hover {\n  color: #0056b3;\n}\n\n.answer {\n  color: #dc3545;\n  font-weight: bold;\n}\n\n.answer.active {\n  color: #28a745;\n}\n\n.pagingWrap {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.pagingWrap ul {\n  list-style: none;\n  padding: 0;\n}\n\n.pagingWrap li {\n  display: inline;\n  margin: 0 5px;\n}\n\n.pagingWrap a {\n  color: #007bff;\n  text-decoration: none;\n}\n\n.pagingWrap a.active {\n  font-weight: bold;\n  color: #0056b3;\n}\n\n.conLayer {\n  display: none;\n  position: absolute;\n  background-color: white;\n  border: 1px solid #ddd;\n  z-index: 10;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.btn_adm_control {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n\n.btn_adm_control:hover + .conLayer,\n.conLayer:hover {\n  display: block;\n}\n\n.conLayer a {\n  display: block;\n  padding: 5px 10px;\n  color: #333;\n  text-decoration: none;\n}\n\n.conLayer a:hover {\n  background-color: #f4f4f4;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}