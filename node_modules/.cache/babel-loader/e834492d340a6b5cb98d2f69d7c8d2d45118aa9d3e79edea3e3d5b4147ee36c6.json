{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-485d4048\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"게시글 수정\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\",\n          onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 제목 \"), _createVNode(_component_v_text_field, {\n            label: \"제목\",\n            modelValue: $data.title,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n            required: \"\",\n            outlined: \"\",\n            dense: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 내용 \"), _createVNode(_component_v_textarea, {\n            label: \"내용\",\n            modelValue: $data.content,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.content = $event),\n            rows: \"5\",\n            required: \"\",\n            outlined: \"\",\n            dense: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 이미지 선택 \"), _createVNode(_component_v_file_input, {\n            onChange: $options.onFileChange,\n            label: \"이미지 선택\",\n            accept: \"image/*\",\n            outlined: \"\",\n            dense: \"\"\n          }, null, 8 /* PROPS */, [\"onChange\"]), _createCommentVNode(\" 미리보기 이미지 \"), $data.previewImageSrc ? (_openBlock(), _createBlock(_component_v_img, {\n            key: 0,\n            src: $data.previewImageSrc,\n            \"max-width\": \"200\",\n            class: \"my-3\"\n          }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n            type: \"submit\",\n            color: \"primary\",\n            class: \"mt-3\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"저장\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onSubmit\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","class","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_","_component_v_card_text","_component_v_form","ref","onSubmit","_withModifiers","$options","submitForm","_createCommentVNode","_component_v_text_field","label","modelValue","$data","title","_cache","$event","required","outlined","dense","_component_v_textarea","content","rows","_component_v_file_input","onChange","onFileChange","accept","previewImageSrc","_component_v_img","key","src","_component_v_btn","type","color","_createTextVNode"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/board/BoardUpdate.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card>\n      <v-card-title>\n        <h3>게시글 수정</h3>\n      </v-card-title>\n\n      <v-card-text>\n        <v-form ref=\"form\" @submit.prevent=\"submitForm\">\n          <!-- 제목 -->\n          <v-text-field\n            label=\"제목\"\n            v-model=\"title\"\n            required\n            outlined\n            dense\n          />\n\n          <!-- 내용 -->\n          <v-textarea\n            label=\"내용\"\n            v-model=\"content\"\n            rows=\"5\"\n            required\n            outlined\n            dense\n          />\n\n          <!-- 이미지 선택 -->\n          <v-file-input\n            @change=\"onFileChange\"\n            label=\"이미지 선택\"\n            accept=\"image/*\"\n            outlined\n            dense\n          />\n\n          <!-- 미리보기 이미지 -->\n          <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" class=\"my-3\"/>\n\n          <v-btn type=\"submit\" color=\"primary\" class=\"mt-3\">저장</v-btn>\n        </v-form>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      image: null,\n      previewImageSrc: null,\n      category: '', // 현재 게시판 종류\n    };\n  },\n  created() {\n    this.category = this.$route.params.category;\n    this.fetchPostDetail(); // 컴포넌트 생성 시 기존 게시글 정보를 로드\n  },\n  methods: {\n    async fetchPostDetail() {\n      try {\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/detail/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/detail/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/detail/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n\n        const response = await axios.get(apiUrl);\n        const post = response.data.result;\n        this.title = post.title;\n        this.content = post.content;\n\n        // 기존 이미지가 있는 경우 미리보기 이미지로 설정\n        if (post.imageUrl) {\n          this.previewImageSrc = post.imageUrl;\n        }\n      } catch (error) {\n        console.error('게시글을 불러오는 데 실패했습니다:', error);\n        alert('게시글을 불러오는 데 실패했습니다.');\n      }\n    },\n    onFileChange(event) {\n      const files = event?.target?.files || event?.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.image = files[0];\n        this.previewImage(files[0]);\n      } else {\n        this.image = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage(file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.previewImageSrc = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        if (this.image) {\n          formData.append('image', this.image);\n        }\n\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/update/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/update/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/update/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n\n        await axios.post(apiUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n\n        alert('게시글이 성공적으로 수정되었습니다.');\n        this.$router.push({ name: 'BoardDetail', params: { id: postId, category: this.category } }); // 수정 후 상세 페이지로 이동\n      } catch (error) {\n        console.error('게시글을 수정하는 데 실패했습니다:', error);\n        alert('게시글 수정에 실패했습니다.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 600px;\n  margin: auto;\n}\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n"],"mappings":";;gEAIQA,mBAAA,CAAe,YAAX,QAAM;;;;;;;;;;;;uBAHhBC,YAAA,CA2CcC,sBAAA;IA3CDC,KAAK,EAAC;EAAM;IAD3BC,OAAA,EAAAC,QAAA,CAEI,MAyCS,CAzCTC,YAAA,CAyCSC,iBAAA;MA3CbH,OAAA,EAAAC,QAAA,CAGM,MAEe,CAFfC,YAAA,CAEeE,uBAAA;QALrBJ,OAAA,EAAAC,QAAA,CAIQ,MAAe,CAAfI,UAAe,C;QAJvBC,CAAA;UAOMJ,YAAA,CAmCcK,sBAAA;QA1CpBP,OAAA,EAAAC,QAAA,CAQQ,MAiCS,CAjCTC,YAAA,CAiCSM,iBAAA;UAjCDC,GAAG,EAAC,MAAM;UAAEC,QAAM,EARlCC,cAAA,CAQ4CC,QAAA,CAAAC,UAAU;;UARtDb,OAAA,EAAAC,QAAA,CASU,MAAW,CAAXa,mBAAA,QAAW,EACXZ,YAAA,CAMEa,uBAAA;YALAC,KAAK,EAAC,IAAI;YAXtBC,UAAA,EAYqBC,KAAA,CAAAC,KAAK;YAZ1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYqBH,KAAA,CAAAC,KAAK,GAAAE,MAAA;YACdC,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR,EAAQ;YACRC,KAAK,EAAL;mDAGFV,mBAAA,QAAW,EACXZ,YAAA,CAOEuB,qBAAA;YANAT,KAAK,EAAC,IAAI;YApBtBC,UAAA,EAqBqBC,KAAA,CAAAQ,OAAO;YArB5B,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqBqBH,KAAA,CAAAQ,OAAO,GAAAL,MAAA;YAChBM,IAAI,EAAC,GAAG;YACRL,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR,EAAQ;YACRC,KAAK,EAAL;mDAGFV,mBAAA,YAAe,EACfZ,YAAA,CAME0B,uBAAA;YALCC,QAAM,EAAEjB,QAAA,CAAAkB,YAAY;YACrBd,KAAK,EAAC,QAAQ;YACde,MAAM,EAAC,SAAS;YAChBR,QAAQ,EAAR,EAAQ;YACRC,KAAK,EAAL;iDAGFV,mBAAA,cAAiB,EACJI,KAAA,CAAAc,eAAe,I,cAA5BnC,YAAA,CAAmFoC,gBAAA;YAtC7FC,GAAA;YAsCyCC,GAAG,EAAEjB,KAAA,CAAAc,eAAe;YAAE,WAAS,EAAC,KAAK;YAACjC,KAAK,EAAC;8CAtCrFe,mBAAA,gBAwCUZ,YAAA,CAA4DkC,gBAAA;YAArDC,IAAI,EAAC,QAAQ;YAACC,KAAK,EAAC,SAAS;YAACvC,KAAK,EAAC;;YAxCrDC,OAAA,EAAAC,QAAA,CAwC4D,MAAE,CAxC9DsC,gBAAA,CAwC4D,IAAE,E;YAxC9DjC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}