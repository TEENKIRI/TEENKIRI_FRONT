{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1351cae6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"내 질문 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성일\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"답변\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"답변일\")])], -1 /* HOISTED */));\nconst _hoisted_4 = [\"href\"];\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $data.questions.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, question => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: question.id\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"a\", {\n      href: `/qna/detail/${question.id}`\n    }, _toDisplayString(question.title), 9 /* TEXT, PROPS */, _hoisted_4)]), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(question.createdTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(question.answerText || '답변 없음'), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(question.answeredAt) || '답변 없음'), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"질문이 없습니다.\"))]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_hoisted_1","$data","questions","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","question","id","href","title","_hoisted_4","_toDisplayString","$options","formatDate","createdTime","answerText","answeredAt","_hoisted_5"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/UserQuestions.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>내 질문 목록</h1>\n    <table v-if=\"questions.length\">\n      <thead>\n        <tr>\n          <th>제목</th>\n          <th>작성일</th>\n          <th>답변</th>\n          <th>답변일</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"question in questions\" :key=\"question.id\">\n          <td>\n            <a :href=\"`/qna/detail/${question.id}`\">{{ question.title }}</a>\n          </td>\n          <td>{{ formatDate(question.createdTime) }}</td>\n          <td>{{ question.answerText || '답변 없음' }}</td>\n          <td>{{ formatDate(question.answeredAt) || '답변 없음' }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else>질문이 없습니다.</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      questions: [] // 빈 배열로 초기화\n    };\n  },\n  async created() {\n    await this.loadQuestions();\n  },\n  methods: {\n    async loadQuestions() {\n      try {\n        // API 베이스 URL 설정\n        const apiBaseUrl = process.env.VUE_APP_API_BASE_URL || 'http://localhost:8082';\n        // API 요청\n        const response = await axios.get(`${apiBaseUrl}/qna/my`);\n        // 응답 구조를 콘솔에 출력하여 확인\n        console.log('API Response:', response.data);\n\n        // 응답 데이터의 result 배열을 questions에 할당\n        this.questions = response.data.result || [];\n      } catch (error) {\n        // 오류 발생 시 콘솔에 출력\n        console.error('질문 목록을 가져오는 데 실패했습니다.', error.response ? error.response.data : error.message);\n        // 오류 발생 시 빈 배열로 설정\n        this.questions = [];\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString();\n    }\n  }\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 20px 0;\n}\n\nth, td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\n\nth {\n  background-color: #f4f4f4;\n}\n\ntr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\ntr:hover {\n  background-color: #f1f1f1;\n}\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAAgB,YAAZ,SAAO;;EAFfC,GAAA;AAAA;gEAIMD,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAY,YAAR,KAAG,E;mBATjB;;EAAAC,GAAA;AAAA;;uBACEC,mBAAA,CAuBM,cAtBJC,UAAgB,EACHC,KAAA,CAAAC,SAAS,CAACC,MAAM,I,cAA7BJ,mBAAA,CAmBQ,SAtBZK,UAAA,GAIMC,UAOQ,EACRR,mBAAA,CASQ,iB,kBARNE,mBAAA,CAOKO,SAAA,QApBbC,WAAA,CAa+BN,KAAA,CAAAC,SAAS,EAArBM,QAAQ;yBAAnBT,mBAAA,CAOK;MAP8BD,GAAG,EAAEU,QAAQ,CAACC;QAC/CZ,mBAAA,CAEK,aADHA,mBAAA,CAAgE;MAA5Da,IAAI,iBAAiBF,QAAQ,CAACC,EAAE;wBAAOD,QAAQ,CAACG,KAAK,wBAfrEC,UAAA,E,GAiBUf,mBAAA,CAA+C,YAAAgB,gBAAA,CAAxCC,QAAA,CAAAC,UAAU,CAACP,QAAQ,CAACQ,WAAW,mBACtCnB,mBAAA,CAA6C,YAAAgB,gBAAA,CAAtCL,QAAQ,CAACS,UAAU,6BAC1BpB,mBAAA,CAAyD,YAAAgB,gBAAA,CAAlDC,QAAA,CAAAC,UAAU,CAACP,QAAQ,CAACU,UAAU,6B;uDAI3CnB,mBAAA,CAAuB,KAvB3BoB,UAAA,EAuBc,WAAS,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}