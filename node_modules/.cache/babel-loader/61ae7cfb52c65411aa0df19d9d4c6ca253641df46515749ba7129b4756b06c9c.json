{"ast":null,"code":"// src/router/index.js\n\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport ResetPasswordPage from '@/views/ResetPasswordPage.vue';\nimport UserCreatePage from '@/views/UserCreatePage.vue'; // 회원가입 페이지 컴포넌트\nimport LoginPage from '@/views/LoginPage.vue'; // 로그인 페이지 컴포넌트\nimport FindIdPage from '@/views/FindIdPage.vue'; // 아이디 찾기 페이지 컴포넌트\nimport FindPasswordPage from '@/views/FindPasswordPage.vue'; // 비밀번호 찾기 페이지 컴포넌트\nimport HomePage from '@/views/HomePage.vue'; // 홈 페이지 컴포넌트\n\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'HomePage',\n  component: HomePage\n}, {\n  path: '/reset-password',\n  name: 'ResetPasswordPage',\n  component: ResetPasswordPage,\n  props: route => ({\n    token: route.query.token\n  }) // URL에서 token 쿼리 파라미터를 받아옴\n}, {\n  path: '/user/create',\n  name: 'UserCreatePage',\n  component: UserCreatePage\n}, {\n  path: '/login',\n  name: 'LoginPage',\n  component: LoginPage\n}, {\n  path: '/find-id',\n  name: 'FindIdPage',\n  component: FindIdPage\n}, {\n  path: '/find-password',\n  name: 'FindPasswordPage',\n  component: FindPasswordPage\n}\n// 추가적인 라우팅 경로 설정\n];\nconst router = new VueRouter({\n  mode: 'history',\n  routes\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","ResetPasswordPage","UserCreatePage","LoginPage","FindIdPage","FindPasswordPage","HomePage","use","routes","path","name","component","props","route","token","query","router","mode"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/router/memberRouter.js"],"sourcesContent":["// src/router/index.js\n\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport ResetPasswordPage from '@/views/ResetPasswordPage.vue';\nimport UserCreatePage from '@/views/UserCreatePage.vue'; // 회원가입 페이지 컴포넌트\nimport LoginPage from '@/views/LoginPage.vue'; // 로그인 페이지 컴포넌트\nimport FindIdPage from '@/views/FindIdPage.vue'; // 아이디 찾기 페이지 컴포넌트\nimport FindPasswordPage from '@/views/FindPasswordPage.vue'; // 비밀번호 찾기 페이지 컴포넌트\nimport HomePage from '@/views/HomePage.vue'; // 홈 페이지 컴포넌트\n\nVue.use(VueRouter);\n\nconst routes = [\n    {\n        path: '/',\n        name: 'HomePage',\n        component: HomePage\n    },\n    {\n        path: '/reset-password',\n        name: 'ResetPasswordPage',\n        component: ResetPasswordPage,\n        props: route => ({ token: route.query.token }) // URL에서 token 쿼리 파라미터를 받아옴\n    },\n    {\n        path: '/user/create',\n        name: 'UserCreatePage',\n        component: UserCreatePage\n    },\n    {\n        path: '/login',\n        name: 'LoginPage',\n        component: LoginPage\n    },\n    {\n        path: '/find-id',\n        name: 'FindIdPage',\n        component: FindIdPage\n    },\n    {\n        path: '/find-password',\n        name: 'FindPasswordPage',\n        component: FindPasswordPage\n    },\n    // 추가적인 라우팅 경로 설정\n];\n\nconst router = new VueRouter({\n    mode: 'history',\n    routes\n});\n\nexport default router;\n"],"mappings":"AAAA;;AAEA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,cAAc,MAAM,4BAA4B,CAAC,CAAC;AACzD,OAAOC,SAAS,MAAM,uBAAuB,CAAC,CAAC;AAC/C,OAAOC,UAAU,MAAM,wBAAwB,CAAC,CAAC;AACjD,OAAOC,gBAAgB,MAAM,8BAA8B,CAAC,CAAC;AAC7D,OAAOC,QAAQ,MAAM,sBAAsB,CAAC,CAAC;;AAE7CP,GAAG,CAACQ,GAAG,CAACP,SAAS,CAAC;AAElB,MAAMQ,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL;AACf,CAAC,EACD;EACIG,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,mBAAmB;EACzBC,SAAS,EAAEV,iBAAiB;EAC5BW,KAAK,EAAEC,KAAK,KAAK;IAAEC,KAAK,EAAED,KAAK,CAACE,KAAK,CAACD;EAAM,CAAC,CAAC,CAAC;AACnD,CAAC,EACD;EACIL,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAET;AACf,CAAC,EACD;EACIO,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAER;AACf,CAAC,EACD;EACIM,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEP;AACf,CAAC,EACD;EACIK,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,kBAAkB;EACxBC,SAAS,EAAEN;AACf;AACA;AAAA,CACH;AAED,MAAMW,MAAM,GAAG,IAAIhB,SAAS,CAAC;EACzBiB,IAAI,EAAE,SAAS;EACfT;AACJ,CAAC,CAAC;AAEF,eAAeQ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}