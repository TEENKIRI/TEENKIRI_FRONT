{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_badge = _resolveComponent(\"v-badge\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_menu = _resolveComponent(\"v-menu\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app_bar = _resolveComponent(\"v-app-bar\");\n  return _openBlock(), _createBlock(_component_v_app_bar, {\n    app: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_row, {\n        align: \"center\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" 헤더 코드 생략 \"), _createVNode(_component_v_col, {\n          cols: \"3\",\n          class: \"text-right\"\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 알림 버튼 \"), _createVNode(_component_v_btn, {\n            icon: \"\",\n            color: \"primary\"\n          }, {\n            default: _withCtx(() => [$options.unreadNotificationsCount > 0 ? (_openBlock(), _createBlock(_component_v_badge, {\n              key: 0,\n              color: \"red\",\n              content: $options.unreadNotificationsCount,\n              overlap: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                default: _withCtx(() => [_createTextVNode(\"mdi-bell\")]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"content\"])) : (_openBlock(), _createBlock(_component_v_icon, {\n              key: 1\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"mdi-bell\")]),\n              _: 1 /* STABLE */\n            })), _createVNode(_component_v_menu, {\n              activator: \"parent\",\n              \"offset-y\": \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_list, {\n                \"max-width\": \"300\",\n                \"max-height\": \"400\",\n                style: {\n                  \"overflow-y\": \"auto\"\n                }\n              }, {\n                default: _withCtx(() => [$options.unreadNotifications.length > 0 ? (_openBlock(true), _createElementBlock(_Fragment, {\n                  key: 0\n                }, _renderList($options.sortedNotifications, (notification, index) => {\n                  return _openBlock(), _createBlock(_component_v_list_item, {\n                    key: index,\n                    class: _normalizeClass({\n                      'unread-notification': notification.delYN === 'N'\n                    }),\n                    onClick: $event => $options.markAsReadAndNavigate(notification, index)\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n                      default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                        default: _withCtx(() => [_createTextVNode(_toDisplayString(notification.message), 1 /* TEXT */)]),\n                        _: 2 /* DYNAMIC */\n                      }, 1024 /* DYNAMIC_SLOTS */)]),\n                      _: 2 /* DYNAMIC */\n                    }, 1024 /* DYNAMIC_SLOTS */)]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"onClick\"]);\n                }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createBlock(_component_v_list_item, {\n                  key: 1\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n                    default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                      default: _withCtx(() => [_createTextVNode(\"알림이 없습니다\")]),\n                      _: 1 /* STABLE */\n                    })]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 1 /* STABLE */\n                }))]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_app_bar","app","default","_withCtx","_createVNode","_component_v_container","_component_v_row","align","_createCommentVNode","_component_v_col","cols","class","_component_v_btn","icon","color","$options","unreadNotificationsCount","_component_v_badge","key","content","overlap","_component_v_icon","_createTextVNode","_","_component_v_menu","activator","_component_v_list","style","unreadNotifications","length","_createElementBlock","_Fragment","_renderList","sortedNotifications","notification","index","_component_v_list_item","_normalizeClass","delYN","onClick","$event","markAsReadAndNavigate","_component_v_list_item_content","_component_v_list_item_title","_toDisplayString","message"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/components/HeaderComponent.vue"],"sourcesContent":["<template>\n  <v-app-bar app>\n    <v-container>\n      <v-row align=\"center\">\n        <!-- 헤더 코드 생략 -->\n        <v-col cols=\"3\" class=\"text-right\">\n          <!-- 알림 버튼 -->\n          <v-btn icon color=\"primary\">\n            <v-badge\n              color=\"red\"\n              :content=\"unreadNotificationsCount\"\n              overlap\n              v-if=\"unreadNotificationsCount > 0\"\n            >\n              <v-icon>mdi-bell</v-icon>\n            </v-badge>\n            <v-icon v-else>mdi-bell</v-icon>\n\n            <v-menu activator=\"parent\" offset-y>\n              <v-list max-width=\"300\" max-height=\"400\" style=\"overflow-y: auto;\">\n                <template v-if=\"unreadNotifications.length > 0\">\n                  <v-list-item\n                    v-for=\"(notification, index) in sortedNotifications\"\n                    :key=\"index\"\n                    :class=\"{'unread-notification': notification.delYN === 'N'}\"\n                    @click=\"markAsReadAndNavigate(notification, index)\"\n                  >\n                    <v-list-item-content>\n                      <v-list-item-title>{{ notification.message }}</v-list-item-title>\n                    </v-list-item-content>\n                  </v-list-item>\n                </template>\n                <template v-else>\n                  <v-list-item>\n                    <v-list-item-content>\n                      <v-list-item-title>알림이 없습니다</v-list-item-title>\n                    </v-list-item-content>\n                  </v-list-item>\n                </template>\n              </v-list>\n            </v-menu>\n          </v-btn>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-app-bar>\n</template>\n\n<script>\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport axios from 'axios';\n\nexport default {\n  name: 'HeaderComponent',\n  data() {\n    return {\n      logo: require('@/assets/images/ico_logo.png'),\n      isLogin: false,\n      isAdmin: false,\n      notifications: [],\n    };\n  },\n  computed: {\n    unreadNotificationsCount() {\n      return this.notifications.filter(notification => notification.delYN === 'N').length;\n    },\n    unreadNotifications() {\n      return this.notifications.filter(notification => notification.delYN === 'N');\n    },\n    // sortedNotifications 계산 속성은 삭제합니다.\n  },\n  methods: {\n    async fetchNotifications() {\n      if (this.isLogin) {\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/list`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n\n          // 정렬된 알림을 가져오기 위해 정렬 작업을 메소드로 이동합니다.\n          this.notifications = response.data;\n        } catch (error) {\n          console.error('알림 목록을 가져오는 중 오류 발생:', error);\n        }\n      }\n    },\n    sortedNotifications() {\n      // 이 메소드에서 정렬을 수행하고 결과를 반환합니다.\n      return this.unreadNotifications.sort((a, b) => new Date(b.createdTime) - new Date(a.createdTime));\n    },\n    async markAsReadAndNavigate(notification, index) {\n      if (notification.delYN === 'N') {\n        try {\n          const id = notification.id;\n          await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/update/${id}`, null, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n          this.notifications[index].delYN = 'Y';\n\n          if (notification.postId) {\n            window.location.href = `/board/detail/post/${notification.postId}`;\n          } else if (notification.qnaId) {\n            window.location.href = `/qna/detail/${notification.qnaId}`;\n          } else if (notification.reportId) {\n            window.location.href = `/report/list`;\n          } else {\n            console.log('error!!!!!!!!!!!');\n          }\n        } catch (error) {\n          console.error('알림을 읽음으로 표시하는 중 오류 발생:', error);\n        }\n      }\n    },\n    navigate(section) {\n      // 섹션 이동 메소드 (생략)\n    },\n    goToMember() {\n      // 사용자 정보로 이동 메소드 (생략)\n    },\n    handleAccountClick() {\n      // 계정 클릭 핸들러 (생략)\n    }\n  },\n  mounted() {\n    const token = localStorage.getItem('token');\n    this.isLogin = !!token;\n\n    if (this.isLogin) {\n      this.isAdmin = localStorage.getItem('role') === 'ADMIN';\n      this.fetchNotifications();\n\n      const eventSource = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/subscribe`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      eventSource.addEventListener('notification', (event) => {\n        const notification = JSON.parse(event.data);\n        this.notifications.push(notification);\n      });\n\n      eventSource.onerror = (error) => {\n        console.error('SSE 연결 오류:', error);\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n.logo {\n  font-weight: bold;\n  color: inherit;\n  text-decoration: none;\n}\n\n.logo-image {\n  height: 10%;\n}\n\n.unread-notification {\n  background-color: white;\n}\n\n.v-list-item {\n  background-color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}