{"ast":null,"code":"import axios from 'axios';\nimport SubjectQna from './SubjectQna.vue'; // QnA 컴포넌트 import\n\nexport default {\n  components: {\n    SubjectQna\n  },\n  props: {\n    modelValue: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      internalValue: this.modelValue,\n      subjectId: '',\n      subjectData: {},\n      isInWishlist: false,\n      isEnrolled: false,\n      // 사용자의 수강 여부 상태\n      showQna: false // QnA 목록 표시 여부\n    };\n  },\n  created() {\n    this.subjectId = this.$route.params.id;\n    this.getSubjectDetail();\n    this.checkWishlistStatus();\n    this.checkEnrollmentStatus(); // 수강 여부 확인\n  },\n  methods: {\n    async getSubjectDetail() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/subject/detail/${this.subjectId}`);\n        this.subjectData = response.data.result;\n      } catch (error) {\n        console.error('강좌 세부 정보 조회 실패:', error);\n      }\n    },\n    async checkWishlistStatus() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/wish/check/${this.subjectId}`);\n        this.isInWishlist = response.data.isInWishlist;\n      } catch (error) {\n        console.error('위시리스트 상태 확인 실패:', error);\n      }\n    },\n    async checkEnrollmentStatus() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/my/subject/check-enrollment/${this.subjectId}`);\n        this.isEnrolled = response.data.isEnrolled; // 사용자가 수강 중인지 확인\n      } catch (error) {\n        console.error('수강 상태 확인 실패:', error);\n      }\n    },\n    async handleWishlist() {\n      if (this.isInWishlist) {\n        await this.removeFromWishlist();\n      } else {\n        await this.addToWishlist();\n      }\n      this.isInWishlist = !this.isInWishlist;\n    },\n    async addToWishlist() {\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`);\n        alert('찜 추가 성공');\n      } catch (error) {\n        alert('찜 추가 실패');\n        console.error(error);\n      }\n    },\n    async removeFromWishlist() {\n      try {\n        await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`);\n        alert('찜 취소 성공');\n      } catch (error) {\n        alert('찜 취소 실패');\n        console.error(error);\n      }\n    },\n    async applyForSubject() {\n      if (this.isEnrolled) {\n        alert('이미 수강중인 강좌입니다.');\n        return;\n      }\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/my/subject/create`, {\n          subjectId: this.subjectId\n        });\n        alert('강좌 수강 신청이 완료되었습니다.');\n        this.isEnrolled = true; // 신청 후 수강 상태 업데이트\n      } catch (error) {\n        alert('강좌 수강 신청 실패');\n        console.error(error);\n      }\n    },\n    toggleContent(value) {\n      if (value === 'SubjectQna') {\n        this.showQna = true;\n      } else {\n        this.showQna = false;\n      }\n    }\n  },\n  computed: {\n    menuItems() {\n      return [{\n        title: '강의목록',\n        value: 'SubjectDetail'\n      }, {\n        title: 'Q&A 게시판',\n        value: 'SubjectQna'\n      }, {\n        title: '강의 후기',\n        value: 'SubjectReview'\n      }];\n    }\n  }\n};","map":{"version":3,"names":["axios","SubjectQna","components","props","modelValue","type","String","required","data","internalValue","subjectId","subjectData","isInWishlist","isEnrolled","showQna","created","$route","params","id","getSubjectDetail","checkWishlistStatus","checkEnrollmentStatus","methods","response","get","process","env","VUE_APP_API_BASE_URL","result","error","console","handleWishlist","removeFromWishlist","addToWishlist","post","alert","delete","applyForSubject","toggleContent","value","computed","menuItems","title"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/components/subject/SubjectDetailComponent.vue"],"sourcesContent":["<template>\n  <v-sheet>\n    <v-row>\n      <v-col>\n        <h1>{{ subjectData.title }}</h1>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <img :src=\"subjectData.subjectThumUrl\" />\n      </v-col>\n      <v-col>\n        <v-row>\n          <v-col>\n            <!-- 수강중인 경우 버튼 비활성화 -->\n            <v-btn :disabled=\"isEnrolled\" @click=\"applyForSubject\">\n              {{ isEnrolled ? '이미 수강중입니다' : '수강신청' }}\n            </v-btn>\n            <v-btn @click=\"handleWishlist\">\n              {{ isInWishlist ? '찜 취소하기' : '찜하기' }}\n            </v-btn>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n            <v-list lines=\"two\">\n              <v-list-item title=\"선생님\" :subtitle=\"subjectData.userTeacherName\"></v-list-item>\n              <v-list-item title=\"수강대상\" :subtitle=\"subjectData.grade\"></v-list-item>\n              <v-list-item title=\"강좌구성\" :subtitle=\"subjectData.userTeacherName\"></v-list-item>\n              <v-list-item title=\"평점\" :subtitle=\"subjectData.rating + ' 점'\"></v-list-item>\n              <v-list-item title=\"설명\" :subtitle=\"subjectData.description\"></v-list-item>\n            </v-list>\n          </v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-btn-toggle v-model=\"internalValue\" color=\"primary\" rounded=\"0\" group>\n          <v-btn\n            class=\"flex-grow-1\"\n            v-for=\"item in menuItems\"\n            :key=\"item.value\"\n            :value=\"item.value\"\n            @click=\"toggleContent(item.value)\"\n          >\n            {{ item.title }}\n          </v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <SubjectQna v-if=\"showQna\" :subjectId=\"subjectId\" />\n      </v-col>\n    </v-row>\n  </v-sheet>\n</template>\n\n<script>\nimport axios from 'axios';\nimport SubjectQna from './SubjectQna.vue'; // QnA 컴포넌트 import\n\nexport default {\n  components: {\n    SubjectQna,\n  },\n  props: {\n    modelValue: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      internalValue: this.modelValue,\n      subjectId: '',\n      subjectData: {},\n      isInWishlist: false,\n      isEnrolled: false, // 사용자의 수강 여부 상태\n      showQna: false, // QnA 목록 표시 여부\n    };\n  },\n  created() {\n    this.subjectId = this.$route.params.id;\n    this.getSubjectDetail();\n    this.checkWishlistStatus();\n    this.checkEnrollmentStatus(); // 수강 여부 확인\n  },\n  methods: {\n    async getSubjectDetail() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/subject/detail/${this.subjectId}`\n        );\n        this.subjectData = response.data.result;\n      } catch (error) {\n        console.error('강좌 세부 정보 조회 실패:', error);\n      }\n    },\n    async checkWishlistStatus() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/wish/check/${this.subjectId}`\n        );\n        this.isInWishlist = response.data.isInWishlist;\n      } catch (error) {\n        console.error('위시리스트 상태 확인 실패:', error);\n      }\n    },\n    async checkEnrollmentStatus() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/my/subject/check-enrollment/${this.subjectId}`\n        );\n        this.isEnrolled = response.data.isEnrolled; // 사용자가 수강 중인지 확인\n      } catch (error) {\n        console.error('수강 상태 확인 실패:', error);\n      }\n    },\n    async handleWishlist() {\n      if (this.isInWishlist) {\n        await this.removeFromWishlist();\n      } else {\n        await this.addToWishlist();\n      }\n      this.isInWishlist = !this.isInWishlist;\n    },\n    async addToWishlist() {\n      try {\n        await axios.post(\n          `${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`\n        );\n        alert('찜 추가 성공');\n      } catch (error) {\n        alert('찜 추가 실패');\n        console.error(error);\n      }\n    },\n    async removeFromWishlist() {\n      try {\n        await axios.delete(\n          `${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`\n        );\n        alert('찜 취소 성공');\n      } catch (error) {\n        alert('찜 취소 실패');\n        console.error(error);\n      }\n    },\n    async applyForSubject() {\n      if (this.isEnrolled) {\n        alert('이미 수강중인 강좌입니다.');\n        return;\n      }\n      try {\n        await axios.post(\n          `${process.env.VUE_APP_API_BASE_URL}/my/subject/create`,\n          {\n            subjectId: this.subjectId,\n          }\n        );\n        alert('강좌 수강 신청이 완료되었습니다.');\n        this.isEnrolled = true; // 신청 후 수강 상태 업데이트\n      } catch (error) {\n        alert('강좌 수강 신청 실패');\n        console.error(error);\n      }\n    },\n    toggleContent(value) {\n      if (value === 'SubjectQna') {\n        this.showQna = true;\n      } else {\n        this.showQna = false;\n      }\n    },\n  },\n  computed: {\n    menuItems() {\n      return [\n        { title: '강의목록', value: 'SubjectDetail' },\n        { title: 'Q&A 게시판', value: 'SubjectQna' },\n        { title: '강의 후기', value: 'SubjectReview' },\n      ];\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 필요한 경우 스타일 추가 */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}