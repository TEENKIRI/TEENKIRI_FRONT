{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      answer: {\n        answerText: '',\n        aImage: null\n      },\n      previewImageSrc: null\n    };\n  },\n  created() {\n    this.fetchAnswerDetail();\n  },\n  methods: {\n    async fetchAnswerDetail() {\n      // const answerId = this.$route.params.id;\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${answerId}`);\n        this.answer = response.data.result;\n        if (this.answer.aImage) {\n          this.previewImageSrc = `${process.env.VUE_APP_API_BASE_URL}/${this.answer.aImage}`;\n        }\n      } catch (error) {\n        this.$router.push('/qna/list');\n      }\n    },\n    onFileChange(event) {\n      const files = event?.target?.files || event?.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.answer.aImage = files[0];\n        this.previewImage();\n      } else {\n        this.answer.aImage = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.answer.aImage) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.answer.aImage);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async updateAnswer() {\n      const formData = new FormData();\n      formData.append('answerText', this.answer.answerText);\n      if (this.answer.aImage) {\n        formData.append('image', this.answer.aImage);\n      }\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/update/answer/${this.$route.params.id}`, formData);\n        this.$router.push(`/qna/detail/${this.$route.params.id}`);\n      } catch (error) {\n        alert('답변 수정에 실패했습니다.');\n      }\n    },\n    goBack() {\n      const questionId = this.$route.params.id;\n      this.$router.push(`/qna/detail/${questionId}`);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","answer","answerText","aImage","previewImageSrc","created","fetchAnswerDetail","methods","questionId","$route","params","id","response","get","process","env","VUE_APP_API_BASE_URL","answerId","result","error","$router","push","onFileChange","event","files","target","dataTransfer","length","previewImage","reader","FileReader","onload","e","readAsDataURL","updateAnswer","formData","FormData","append","post","alert","goBack"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/UpdateAnswer.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-form @submit.prevent=\"updateAnswer\">\n        <v-textarea\n          label=\"답변 내용\"\n          v-model=\"answer.answerText\"\n          required\n        ></v-textarea>\n  \n        <v-file-input\n          label=\"이미지 선택\"\n          @change=\"onFileChange\"\n          accept=\"image/*\"\n        ></v-file-input>\n  \n        <!-- 미리보기 이미지 -->\n        <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" class=\"my-3\"/>\n  \n        <v-btn type=\"submit\" color=\"primary\">수정 완료</v-btn>\n        <v-btn color=\"secondary\" @click=\"goBack\">취소</v-btn>\n      </v-form>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        answer: {\n          answerText: '',\n          aImage: null,\n        },\n        previewImageSrc: null,\n      };\n    },\n    created() {\n      this.fetchAnswerDetail();\n    },\n    methods: {\n      async fetchAnswerDetail() {\n        // const answerId = this.$route.params.id;\n        const questionId = this.$route.params.id;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${answerId}`);\n          this.answer = response.data.result;\n          if (this.answer.aImage) {\n            this.previewImageSrc = `${process.env.VUE_APP_API_BASE_URL}/${this.answer.aImage}`;\n          }\n        } catch (error) {\n          this.$router.push('/qna/list');\n        }\n      },\n      onFileChange(event) {\n        const files = event?.target?.files || event?.dataTransfer?.files;\n        if (files && files.length > 0) {\n          this.answer.aImage = files[0];\n          this.previewImage();\n        } else {\n          this.answer.aImage = null;\n          this.previewImageSrc = null;\n        }\n      },\n      previewImage() {\n        if (this.answer.aImage) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            this.previewImageSrc = e.target.result;\n          };\n          reader.readAsDataURL(this.answer.aImage);\n        } else {\n          this.previewImageSrc = null;\n        }\n      },\n      async updateAnswer() {\n        const formData = new FormData();\n        formData.append('answerText', this.answer.answerText);\n        if (this.answer.aImage) {\n          formData.append('image', this.answer.aImage);\n        }\n  \n        try {\n          await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/update/answer/${this.$route.params.id}`, formData);\n          this.$router.push(`/qna/detail/${this.$route.params.id}`);\n        } catch (error) {\n          alert('답변 수정에 실패했습니다.');\n        }\n      },\n      goBack() {\n        const questionId = this.$route.params.id;\n        this.$router.push(`/qna/detail/${questionId}`);\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  .my-3 {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}