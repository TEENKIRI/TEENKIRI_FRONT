{"ast":null,"code":"// main.js는 vue 애플리케이션의 시작점\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from '@/router/index.js';\nimport vuetify from './plugins/vuetify';\nimport '@mdi/font/css/materialdesignicons.css';\nimport axios from 'axios';\nimport '@/assets/css/font.css';\nimport store from './store/index.js';\nimport mitt from 'mitt';\nimport '@/assets/css/global.css';\n\n// Vue 애플리케이션 생성\nconst app = createApp(App);\n\n// mitt를 사용한 Event Bus 설정\nconst emitter = mitt();\napp.config.globalProperties.emitter = emitter;\n\n// axios 요청 인터셉터를 설정하여 모든 요청에 엑세스 토큰을 추가\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Axios 요청 인터셉터 오류:', error);\n  return Promise.reject(error);\n});\n\n// axios 응답 인터셉터를 설정하여 401 오류 처리 및 토큰 갱신\naxios.interceptors.response.use(response => response, async error => {\n  if (error.response && error.response.status === 401) {\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (refreshToken) {\n      try {\n        // 토큰 갱신 요청\n        localStorage.removeItem('token');\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/member/refresh-token`, {\n          refreshToken\n        });\n        localStorage.setItem('token', response.data.result.token);\n        window.location.reload();\n      } catch (e) {\n        console.error('토큰 갱신 실패:', e);\n        localStorage.clear();\n        window.location.href = '/login';\n      }\n    } else {\n      // 리프레시 토큰이 없는 경우 로그인 페이지로 리다이렉트\n      console.warn('리프레시 토큰이 없음, 로그인 페이지로 리다이렉트합니다.');\n      localStorage.clear();\n      window.location.href = '/login';\n    }\n  } else {\n    console.error('Axios 응답 오류:', error);\n  }\n  return Promise.reject(error);\n});\n\n// Vue 애플리케이션에 플러그인 및 라우터 설정\napp.use(store);\napp.use(router);\napp.use(vuetify);\n\n// Vue 애플리케이션 마운트\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","vuetify","axios","store","mitt","app","emitter","config","globalProperties","interceptors","request","use","token","localStorage","getItem","headers","error","console","Promise","reject","response","status","refreshToken","removeItem","post","process","env","VUE_APP_API_BASE_URL","setItem","data","result","window","location","reload","e","clear","href","warn","mount"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/main.js"],"sourcesContent":["// main.js는 vue 애플리케이션의 시작점\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from '@/router/index.js';\nimport vuetify from './plugins/vuetify';\nimport '@mdi/font/css/materialdesignicons.css';\nimport axios from 'axios';\nimport '@/assets/css/font.css';\nimport store from './store/index.js';\nimport mitt from 'mitt';\n\nimport '@/assets/css/global.css';\n\n// Vue 애플리케이션 생성\nconst app = createApp(App);\n\n// mitt를 사용한 Event Bus 설정\nconst emitter = mitt();\napp.config.globalProperties.emitter = emitter;\n\n// axios 요청 인터셉터를 설정하여 모든 요청에 엑세스 토큰을 추가\naxios.interceptors.request.use(\n    config => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => {\n        console.error('Axios 요청 인터셉터 오류:', error);\n        return Promise.reject(error);\n    }\n);\n\n// axios 응답 인터셉터를 설정하여 401 오류 처리 및 토큰 갱신\naxios.interceptors.response.use(\n    response => response,\n    async error => {\n        if (error.response && error.response.status === 401) {\n            const refreshToken = localStorage.getItem('refreshToken');\n\n            if (refreshToken) {\n                try {\n                    // 토큰 갱신 요청\n                    localStorage.removeItem('token');\n                    const response = await axios.post(\n                        `${process.env.VUE_APP_API_BASE_URL}/member/refresh-token`,\n                        { refreshToken }\n                    );\n                    localStorage.setItem('token', response.data.result.token);\n                    window.location.reload();\n                } catch (e) {\n                    console.error('토큰 갱신 실패:', e);\n                    localStorage.clear();\n                    window.location.href = '/login';\n                }\n            } else {\n                // 리프레시 토큰이 없는 경우 로그인 페이지로 리다이렉트\n                console.warn('리프레시 토큰이 없음, 로그인 페이지로 리다이렉트합니다.');\n                localStorage.clear();\n                window.location.href = '/login';\n            }\n        } else {\n            console.error('Axios 응답 오류:', error);\n        }\n        return Promise.reject(error);\n    }\n);\n\n\n// Vue 애플리케이션에 플러그인 및 라우터 설정\napp.use(store);\napp.use(router);\napp.use(vuetify);\n\n// Vue 애플리케이션 마운트\napp.mount('#app');\n\n\n"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,uCAAuC;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAO,yBAAyB;;AAEhC;AACA,MAAMC,GAAG,GAAGP,SAAS,CAACC,GAAG,CAAC;;AAE1B;AACA,MAAMO,OAAO,GAAGF,IAAI,CAAC,CAAC;AACtBC,GAAG,CAACE,MAAM,CAACC,gBAAgB,CAACF,OAAO,GAAGA,OAAO;;AAE7C;AACAJ,KAAK,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BJ,MAAM,IAAI;EACN,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPL,MAAM,CAACQ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACvD;EACA,OAAOL,MAAM;AACjB,CAAC,EACDS,KAAK,IAAI;EACLC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;EACzC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAd,KAAK,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC3BS,QAAQ,IAAIA,QAAQ,EACpB,MAAMJ,KAAK,IAAI;EACX,IAAIA,KAAK,CAACI,QAAQ,IAAIJ,KAAK,CAACI,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjD,MAAMC,YAAY,GAAGT,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAEzD,IAAIQ,YAAY,EAAE;MACd,IAAI;QACA;QACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;QAChC,MAAMH,QAAQ,GAAG,MAAMlB,KAAK,CAACsB,IAAI,CAC7B,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,uBAAuB,EAC1D;UAAEL;QAAa,CACnB,CAAC;QACDT,YAAY,CAACe,OAAO,CAAC,OAAO,EAAER,QAAQ,CAACS,IAAI,CAACC,MAAM,CAAClB,KAAK,CAAC;QACzDmB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRjB,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEkB,CAAC,CAAC;QAC7BrB,YAAY,CAACsB,KAAK,CAAC,CAAC;QACpBJ,MAAM,CAACC,QAAQ,CAACI,IAAI,GAAG,QAAQ;MACnC;IACJ,CAAC,MAAM;MACH;MACAnB,OAAO,CAACoB,IAAI,CAAC,iCAAiC,CAAC;MAC/CxB,YAAY,CAACsB,KAAK,CAAC,CAAC;MACpBJ,MAAM,CAACC,QAAQ,CAACI,IAAI,GAAG,QAAQ;IACnC;EACJ,CAAC,MAAM;IACHnB,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;EACxC;EACA,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;;AAGD;AACAX,GAAG,CAACM,GAAG,CAACR,KAAK,CAAC;AACdE,GAAG,CAACM,GAAG,CAACX,MAAM,CAAC;AACfK,GAAG,CAACM,GAAG,CAACV,OAAO,CAAC;;AAEhB;AACAI,GAAG,CAACiC,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}