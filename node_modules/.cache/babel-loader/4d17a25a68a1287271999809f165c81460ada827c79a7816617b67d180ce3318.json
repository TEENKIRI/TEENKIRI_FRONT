{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 기존 코드 생략 \"), _createCommentVNode(\" 페이지네이션 \"), _createVNode(_component_v_pagination, {\n      modelValue: $data.page,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.page = $event),\n      length: $data.totalPages,\n      onInput: $options.performSearch\n    }, null, 8 /* PROPS */, [\"modelValue\", \"length\", \"onInput\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createCommentVNode","_createVNode","_component_v_pagination","modelValue","$data","page","_cache","$event","length","totalPages","onInput","$options","performSearch","_"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <!-- 기존 코드 생략 -->\n\n    <!-- 페이지네이션 -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @input=\"performSearch\"\n    ></v-pagination>\n\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      user: {},\n      searchType: \"all\",\n      searchOptions: [\n        { text: \"전체\", value: \"all\" },\n        { text: \"강사명\", value: \"userTeacher\" },\n        { text: \"강좌명\", value: \"title\" },\n      ],\n      selectedType: \"latest\",\n      selectedOptions: [\n        { text: \"최신순\", value: \"latest\" },\n        { text: \"평점순\", value: \"like\" },\n      ],\n      searchValue: \"\",\n      course: {\n        courseList: [],\n        selectedMenu: \"all\",\n        page: {\n          pageSize: 5,\n          currentPage: 0,\n        },\n      },\n      subject: {\n        subjectList: [],\n        subjectIsMainList: [],\n        page: {\n          pageSize: 5,\n          currentPage: 0,\n        },\n      },\n      grade: {\n        gradeList: [\n          { value: \"GRADE_1\", text: \"1학년\" },\n          { value: \"GRADE_2\", text: \"2학년\" },\n          { value: \"GRADE_3\", text: \"3학년\" },\n          { value: \"GRADE_4\", text: \"4학년\" },\n          { value: \"GRADE_5\", text: \"5학년\" },\n          { value: \"GRADE_6\", text: \"6학년\" },\n        ],\n        selectedGrades: [],\n      },\n      page: 1,\n      totalPages: 1,\n    };\n  },\n  methods: {\n    async performSearch() {\n      try {\n        const params = {\n          size: 3,\n          page: this.page - 1, // MySQL에서의 페이지는 0부터 시작\n          search: this.searchValue,\n          searchType: this.searchType,\n          sortType: this.selectedType,\n          grades: this.grade.selectedGrades.join(\"&\"),\n          courseId: this.course.selectedMenu !== \"all\" ? this.course.selectedMenu : null,\n        };\n\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/subject/list`, { params });\n        this.subject.subjectList = response.data.result.content;\n        this.totalPages = response.data.result.totalPages;\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  },\n  watch: {\n    selectedType() {\n      this.performSearch();\n    },\n    selectedGrades() {\n      this.performSearch();\n    },\n    \"course.selectedMenu\": function () {\n      this.performSearch();\n    },\n    searchValue() {\n      this.performSearch();\n    },\n    searchType() {\n      this.performSearch();\n    },\n  },\n  created() {\n    this.performSearch();\n  },\n};\n</script>\n"],"mappings":";;;;uBACEA,YAAA,CAUcC,sBAAA;IAXhBC,OAAA,EAAAC,QAAA,CAEI,MAAiB,CAAjBC,mBAAA,cAAiB,EAEjBA,mBAAA,YAAe,EACfC,YAAA,CAIgBC,uBAAA;MATpBC,UAAA,EAMeC,KAAA,CAAAC,IAAI;MANnB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMeH,KAAA,CAAAC,IAAI,GAAAE,MAAA;MACZC,MAAM,EAAEJ,KAAA,CAAAK,UAAU;MAClBC,OAAK,EAAEC,QAAA,CAAAC;;IARdC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}