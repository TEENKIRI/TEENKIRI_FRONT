{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: {\n    subjectId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n      userRole: localStorage.getItem('role')\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n          params: {\n            subjectId: this.subjectId,\n            page: this.currentPage - 1,\n            size: this.itemsPerPage\n          }\n        });\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    createNewQuestion() {\n      this.$router.push(`/qna/create?subjectId=${this.subjectId}`);\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    answerQuestion(id) {\n      this.$router.push(`/qna/answer/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    }\n  },\n  computed: {\n    canAnswerQuestion() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    }\n  }\n};","map":{"version":3,"names":["axios","props","subjectId","type","String","required","data","questions","currentPage","totalPages","itemsPerPage","userRole","localStorage","getItem","created","fetchQuestions","methods","response","get","process","env","VUE_APP_API_BASE_URL","params","page","size","result","content","console","error","formatDate","date","options","year","month","day","hour","minute","Date","toLocaleDateString","createNewQuestion","$router","push","viewDetail","id","answerQuestion","goToPreviousPage","goToNextPage","goToPage","computed","canAnswerQuestion"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectQna.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-card>\n      <v-card-title>\n        <h3>QnA 목록</h3>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"createNewQuestion\">질문 작성하기</v-btn>\n      </v-card-title>\n      <v-card-text>\n        <v-simple-table>\n          <thead>\n            <tr>\n              <th>번호</th>\n              <th>작성자</th>\n              <th>제목</th>\n              <th>생성 시간</th>\n              <th>수정 시간</th>\n              <th v-if=\"canAnswerQuestion\">답변하기</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(question, index) in questions\" :key=\"question.id\">\n              <td>{{ index + 1 + (currentPage - 1) * itemsPerPage }}</td>\n              <td>{{ question.questionUserName }}</td>\n              <td @click=\"viewDetail(question.id)\" class=\"clickable\">{{ question.title }}</td>\n              <td>{{ formatDate(question.createdTime) }}</td>\n              <td>{{ formatDate(question.updatedTime) }}</td>\n              <td v-if=\"canAnswerQuestion && !question.answerText\">\n                <v-btn small @click=\"answerQuestion(question.id)\" color=\"primary\">답변하기</v-btn>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n      </v-card-text>\n      <v-card-actions class=\"pagination\">\n        <v-btn @click=\"goToPreviousPage\" :disabled=\"currentPage === 1\">이전</v-btn>\n        <v-btn\n          v-for=\"page in totalPages\"\n          :key=\"page\"\n          @click=\"goToPage(page)\"\n          :class=\"{ active: currentPage === page }\"\n          class=\"pagination-page\"\n          text\n        >\n          {{ page }}\n        </v-btn>\n        <v-btn @click=\"goToNextPage\" :disabled=\"currentPage === totalPages\">다음</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    subjectId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n      userRole: localStorage.getItem('role'),\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n          params: {\n            subjectId: this.subjectId,\n            page: this.currentPage - 1,\n            size: this.itemsPerPage,\n          },\n        });\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    createNewQuestion() {\n      this.$router.push(`/qna/create?subjectId=${this.subjectId}`);\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    answerQuestion(id) {\n      this.$router.push(`/qna/answer/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    },\n  },\n  computed: {\n    canAnswerQuestion() {\n      return this.userRole === 'ADMIN' || this.userRole === 'TEACHER';\n    },\n  },\n};\n</script>\n\n<style scoped>\n.clickable {\n  cursor: pointer;\n  color: blue;\n  text-decoration: underline;\n}\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n.pagination-page {\n  margin: 0 5px;\n  cursor: pointer;\n}\n.pagination-page.active {\n  font-weight: bold;\n  color: blue;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}