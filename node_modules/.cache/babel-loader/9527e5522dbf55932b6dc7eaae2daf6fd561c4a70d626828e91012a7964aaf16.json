{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'UserSubjects',\n  data() {\n    return {\n      subjects: [],\n      error: null\n    };\n  },\n  async mounted() {\n    await this.fetchUserSubjects();\n  },\n  methods: {\n    async fetchUserSubjects() {\n      try {\n        const userId = localStorage.getItem('userId'); // 로컬 스토리지에서 사용자 ID 가져오기\n        if (!userId) {\n          console.error('사용자 ID가 로컬 스토리지에 없습니다.');\n          return;\n        }\n        // API 호출\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/my/subject/${userId}`);\n        console.log(response.data);\n\n        // API 응답 데이터 구조에 맞게 수정\n        if (response.data && response.data.result) {\n          this.subjects = response.data.result.subjects || [];\n          if (this.subjects.length === 0) {\n            console.log('현재 수강 중인 강좌가 없습니다.');\n          }\n        } else {\n          console.error('API 응답의 형식이 잘못되었습니다.');\n        }\n      } catch (error) {\n        this.error = '수강 중인 강좌를 가져오는 도중 오류가 발생했습니다.';\n        console.error('수강 중인 강좌 가져오기 오류:', error);\n      }\n    },\n    goToSubjectDetail(subjectId) {\n      // 디버깅: subjectId 값 확인\n      console.log(`Navigating to /subject/detail/${subjectId}`);\n      if (subjectId) {\n        this.$router.push(`/subject/detail/${subjectId}`);\n      } else {\n        console.error('유효한 subjectId가 없습니다.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","subjects","error","mounted","fetchUserSubjects","methods","userId","localStorage","getItem","console","response","get","process","env","VUE_APP_API_BASE_URL","log","result","length","goToSubjectDetail","subjectId","$router","push"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/user/SubscribePage.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row class=\"subject-header\">\n      <v-col>\n        <h1>수강 중인 강좌</h1>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col\n        v-for=\"subject in subjects\"\n        :key=\"subject.id\"\n        cols=\"12\" sm=\"6\" md=\"4\"\n      >\n        <v-card \n          class=\"ma-4\" \n          :elevation=\"4\" \n          @click=\"goToSubjectDetail(subject.id)\" \n          style=\"cursor: pointer;\"\n        >\n          <v-img :src=\"subject.subjectThumUrl\" height=\"200px\"></v-img>\n          <v-card-title>{{ subject.title }}</v-card-title>\n          <v-card-subtitle>강사: {{ subject.teacherName }}</v-card-subtitle>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'UserSubjects',\n  data() {\n    return {\n      subjects: [],\n      error: null\n    };\n  },\n  async mounted() {\n    await this.fetchUserSubjects();\n  },\n  methods: {\n    async fetchUserSubjects() {\n      try {\n        const userId = localStorage.getItem('userId'); // 로컬 스토리지에서 사용자 ID 가져오기\n        if (!userId) {\n          console.error('사용자 ID가 로컬 스토리지에 없습니다.');\n          return;\n        }\n        // API 호출\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/my/subject/${userId}`);\n        console.log(response.data);\n        \n        // API 응답 데이터 구조에 맞게 수정\n        if (response.data && response.data.result) {\n          this.subjects = response.data.result.subjects || [];\n          if (this.subjects.length === 0) {\n            console.log('현재 수강 중인 강좌가 없습니다.');\n          }\n        } else {\n          console.error('API 응답의 형식이 잘못되었습니다.');\n        }\n      } catch (error) {\n        this.error = '수강 중인 강좌를 가져오는 도중 오류가 발생했습니다.';\n        console.error('수강 중인 강좌 가져오기 오류:', error);\n      }\n    },\n    goToSubjectDetail(subjectId) {\n      // 디버깅: subjectId 값 확인\n      console.log(`Navigating to /subject/detail/${subjectId}`);\n      if (subjectId) {\n        this.$router.push(`/subject/detail/${subjectId}`);\n      } else {\n        console.error('유효한 subjectId가 없습니다.');\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.subject-header {\n  margin-bottom: 20px;\n}\n\n.v-card {\n  max-width: 400px;\n  margin: auto;\n}\n\n.v-card-title {\n  font-weight: bold;\n}\n\n.v-card-subtitle {\n  color: #757575;\n}\n</style>\n"],"mappings":";AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAChC,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC/C,IAAI,CAACF,MAAM,EAAE;UACXG,OAAO,CAACP,KAAK,CAAC,wBAAwB,CAAC;UACvC;QACF;QACA;QACA,MAAMQ,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,eAAeR,MAAM,EAAE,CAAC;QAC5FG,OAAO,CAACM,GAAG,CAACL,QAAQ,CAACV,IAAI,CAAC;;QAE1B;QACA,IAAIU,QAAQ,CAACV,IAAG,IAAKU,QAAQ,CAACV,IAAI,CAACgB,MAAM,EAAE;UACzC,IAAI,CAACf,QAAO,GAAIS,QAAQ,CAACV,IAAI,CAACgB,MAAM,CAACf,QAAO,IAAK,EAAE;UACnD,IAAI,IAAI,CAACA,QAAQ,CAACgB,MAAK,KAAM,CAAC,EAAE;YAC9BR,OAAO,CAACM,GAAG,CAAC,oBAAoB,CAAC;UACnC;QACF,OAAO;UACLN,OAAO,CAACP,KAAK,CAAC,sBAAsB,CAAC;QACvC;MACF,EAAE,OAAOA,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,+BAA+B;QAC5CO,OAAO,CAACP,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF,CAAC;IACDgB,iBAAiBA,CAACC,SAAS,EAAE;MAC3B;MACAV,OAAO,CAACM,GAAG,CAAC,iCAAiCI,SAAS,EAAE,CAAC;MACzD,IAAIA,SAAS,EAAE;QACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,mBAAmBF,SAAS,EAAE,CAAC;MACnD,OAAO;QACLV,OAAO,CAACP,KAAK,CAAC,sBAAsB,CAAC;MACvC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}