{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-597a04bc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"page-header\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"QnA 작성\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"mb-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\",\n  class: \"form-label\"\n}, \"제목\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"mb-3\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"questionText\",\n  class: \"form-label\"\n}, \"질문 내용\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"mb-3\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"imageSsr\",\n  class: \"form-label\"\n}, \"이미지\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary mt-3\"\n}, \"제출\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_header_component = _resolveComponent(\"header-component\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_header_component), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.title = $event),\n    id: \"title\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.title]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.questionText = $event),\n    id: \"questionText\",\n    rows: \"5\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.questionText]])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"input\", {\n    type: \"file\",\n    class: \"form-control\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n    id: \"imageSsr\"\n  }, null, 32 /* NEED_HYDRATION */)]), _hoisted_9], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_createVNode","_component_header_component","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","_hoisted_3","_hoisted_4","$event","$data","formData","title","id","required","_hoisted_5","_hoisted_6","questionText","rows","_hoisted_7","_hoisted_8","onChange","handleFileUpload","_hoisted_9"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/CreateQuestion.vue"],"sourcesContent":["<template>\n    <div>\n      <header-component></header-component>\n      <div class=\"container\">\n        <div class=\"page-header\">\n          <h3>QnA 작성</h3>\n        </div>\n        <form @submit.prevent=\"handleSubmit\">\n          <div class=\"mb-3\">\n            <label for=\"title\" class=\"form-label\">제목</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              v-model=\"formData.title\"\n              id=\"title\"\n              required\n            />\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"questionText\" class=\"form-label\">질문 내용</label>\n            <textarea\n              class=\"form-control\"\n              v-model=\"formData.questionText\"\n              id=\"questionText\"\n              rows=\"5\"\n              required\n            ></textarea>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"imageSsr\" class=\"form-label\">이미지</label>\n            <input\n              type=\"file\"\n              class=\"form-control\"\n              @change=\"handleFileUpload\"\n              id=\"imageSsr\"\n            />\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary mt-3\">제출</button>\n        </form>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    components: {\n      HeaderComponent: {\n      }\n    },\n    data() {\n      return {\n        formData: {\n          title: '',\n          questionText: ''\n        },\n        imageSsr: null\n      };\n    },\n    methods: {\n      handleFileUpload(event) {\n        this.imageSsr = event.target.files[0];\n      },\n      async handleSubmit() {\n        const formData = new FormData();\n        formData.append('title', this.formData.title);\n        formData.append('questionText', this.formData.questionText);\n        if (this.imageSsr) {\n          formData.append('image', this.imageSsr);\n        }\n  \n        try {\n          const response = await axios.post('/qna/create', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log('Form Submitted', response.data);\n          // 성공 시 추가 처리\n        } catch (error) {\n          console.error('Error submitting form', error.response.data);\n          // 에러 처리\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    margin-top: 20px;\n  }\n  \n  .page-header {\n    margin-bottom: 20px;\n  }\n  </style>\n  "],"mappings":";;;EAGWA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAa,I,aACtBC,mBAAA,CAAe,YAAX,QAAM,E;;EAGLD,KAAK,EAAC;AAAM;gEACfC,mBAAA,CAAgD;EAAzCC,GAAG,EAAC,OAAO;EAACF,KAAK,EAAC;GAAa,IAAE;;EASrCA,KAAK,EAAC;AAAM;gEACfC,mBAAA,CAA0D;EAAnDC,GAAG,EAAC,cAAc;EAACF,KAAK,EAAC;GAAa,OAAK;;EAS/CA,KAAK,EAAC;AAAM;gEACfC,mBAAA,CAAoD;EAA7CC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;GAAa,KAAG;gEAQ9CC,mBAAA,CAA8D;EAAtDE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAuB,IAAE;;;uBApC3DI,mBAAA,CAuCM,cAtCJC,YAAA,CAAqCC,2BAAA,GACrCL,mBAAA,CAoCM,OApCNM,UAoCM,GAnCJC,UAEM,EACNP,mBAAA,CA+BO;IA/BAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAPrBC,cAAA,KAAAC,IAAA,KAO+BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACjCX,mBAAA,CASM,OATNc,UASM,GARJC,UAAgD,E,gBAChDf,mBAAA,CAME;IALAE,IAAI,EAAC,MAAM;IACXH,KAAK,EAAC,cAAc;IAZlC,uBAAAU,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAauBC,KAAA,CAAAC,QAAQ,CAACC,KAAK,GAAAH,MAAA;IACvBI,EAAE,EAAC,OAAO;IACVC,QAAQ,EAAR;iDAFSJ,KAAA,CAAAC,QAAQ,CAACC,KAAK,E,KAK3BnB,mBAAA,CASM,OATNsB,UASM,GARJC,UAA0D,E,gBAC1DvB,mBAAA,CAMY;IALVD,KAAK,EAAC,cAAc;IArBlC,uBAAAU,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAsBuBC,KAAA,CAAAC,QAAQ,CAACM,YAAY,GAAAR,MAAA;IAC9BI,EAAE,EAAC,cAAc;IACjBK,IAAI,EAAC,GAAG;IACRJ,QAAQ,EAAR;iDAHSJ,KAAA,CAAAC,QAAQ,CAACM,YAAY,E,KAMlCxB,mBAAA,CAQM,OARN0B,UAQM,GAPJC,UAAoD,EACpD3B,mBAAA,CAKE;IAJAE,IAAI,EAAC,MAAM;IACXH,KAAK,EAAC,cAAc;IACnB6B,QAAM,EAAAnB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAiB,gBAAA,IAAAjB,QAAA,CAAAiB,gBAAA,IAAAlB,IAAA,CAAgB;IACzBS,EAAE,EAAC;uCAGPU,UAA8D,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}