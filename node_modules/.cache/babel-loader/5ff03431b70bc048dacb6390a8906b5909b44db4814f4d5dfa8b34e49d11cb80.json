{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_btn_toggle = _resolveComponent(\"v-btn-toggle\");\n  const _component_v_sheet = _resolveComponent(\"v-sheet\");\n  return $data.subjectData ? (_openBlock(), _createBlock(_component_v_sheet, {\n    key: 0\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createElementVNode(\"h1\", null, _toDisplayString($data.subjectData.title), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createElementVNode(\"img\", {\n          src: $data.subjectData.subjectThumUrl\n        }, null, 8 /* PROPS */, _hoisted_1)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, null, {\n            default: _withCtx(() => [_createCommentVNode(\" 수강중인 경우 버튼 비활성화 \"), _createVNode(_component_v_btn, {\n              disabled: this.subjectData.isRegistered,\n              onClick: $options.applyForSubject\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(this.subjectData.isRegistered ? \"이미 수강중입니다\" : \"수강신청\"), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"disabled\", \"onClick\"]), _createVNode(_component_v_btn, {\n              onClick: $options.handleWishlist\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(this.subjectData.isSubscribe ? \"찜 취소하기\" : \"찜하기\"), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, null, {\n            default: _withCtx(() => [_createVNode(_component_v_list, {\n              lines: \"two\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_list_item, {\n                title: \"선생님\",\n                subtitle: $data.subjectData.userTeacherName\n              }, null, 8 /* PROPS */, [\"subtitle\"]), _createVNode(_component_v_list_item, {\n                title: \"수강대상\",\n                subtitle: $data.subjectData.grade\n              }, null, 8 /* PROPS */, [\"subtitle\"]), _createVNode(_component_v_list_item, {\n                title: \"강좌구성\",\n                subtitle: $data.subjectData.userTeacherName\n              }, null, 8 /* PROPS */, [\"subtitle\"]), _createVNode(_component_v_list_item, {\n                title: \"평점\",\n                subtitle: $data.subjectData.rating + ' 점'\n              }, null, 8 /* PROPS */, [\"subtitle\"]), _createVNode(_component_v_list_item, {\n                title: \"설명\",\n                subtitle: $data.subjectData.description\n              }, null, 8 /* PROPS */, [\"subtitle\"])]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_v_btn_toggle, {\n          modelValue: $data.internalValue,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.internalValue = $event),\n          color: \"primary\",\n          rounded: \"0\",\n          group: \"\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.menuItems, item => {\n            return _openBlock(), _createBlock(_component_v_btn, {\n              class: \"flex-grow-1\",\n              key: item.value,\n              value: item.value,\n              onClick: $event => $options.goToPage(item.value)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.title), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"onClick\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["$data","subjectData","_createBlock","_component_v_sheet","key","default","_withCtx","_createVNode","_component_v_row","_component_v_col","_createElementVNode","_toDisplayString","title","_","src","subjectThumUrl","_hoisted_1","_createCommentVNode","_component_v_btn","disabled","isRegistered","onClick","$options","applyForSubject","_createTextVNode","handleWishlist","isSubscribe","_component_v_list","lines","_component_v_list_item","subtitle","userTeacherName","grade","rating","description","_component_v_btn_toggle","modelValue","internalValue","_cache","$event","color","rounded","group","_createElementBlock","_Fragment","_renderList","menuItems","item","class","value","goToPage"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/components/subject/SubjectDetailComponent.vue"],"sourcesContent":["<template>\n  <v-sheet v-if=\"subjectData\">\n    <v-row>\n      <v-col>\n        <h1>{{ subjectData.title }}</h1>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <img v-bind:src=\"subjectData.subjectThumUrl\" />\n      </v-col>\n      <v-col>\n        <v-row>\n          <v-col>\n            <!-- 수강중인 경우 버튼 비활성화 -->\n            <v-btn :disabled=\"this.subjectData.isRegistered\" @click=\"applyForSubject\">\n              {{ this.subjectData.isRegistered ? \"이미 수강중입니다\" : \"수강신청\" }}\n            </v-btn>\n            <v-btn @click=\"handleWishlist\">\n              {{ this.subjectData.isSubscribe ? \"찜 취소하기\" : \"찜하기\" }}\n            </v-btn>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n            <v-list lines=\"two\">\n              <v-list-item\n                title=\"선생님\"\n                :subtitle=\"subjectData.userTeacherName\"\n              ></v-list-item>\n              <v-list-item title=\"수강대상\" :subtitle=\"subjectData.grade\"></v-list-item>\n              <v-list-item\n                title=\"강좌구성\"\n                :subtitle=\"subjectData.userTeacherName\"\n              ></v-list-item>\n              <v-list-item\n                title=\"평점\"\n                :subtitle=\"subjectData.rating + ' 점'\"\n              ></v-list-item>\n              <v-list-item title=\"설명\" :subtitle=\"subjectData.description\"></v-list-item>\n            </v-list>\n          </v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-btn-toggle v-model=\"internalValue\" color=\"primary\" rounded=\"0\" group>\n          <v-btn\n            class=\"flex-grow-1\"\n            v-for=\"item in menuItems\"\n            :key=\"item.value\"\n            :value=\"item.value\"\n            @click=\"goToPage(item.value)\"\n          >\n            {{ item.title }}\n          </v-btn>\n        </v-btn-toggle>\n      </v-col>\n    </v-row>\n  </v-sheet>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  props: {\n    modelValue: {\n      type: String,\n      required: true,\n    },\n  },\n  inject: ['getSubjectData'],\n  data() {\n    return {\n      internalValue: this.modelValue,\n      subjectId: \"\",\n      subjectData: null,\n    };\n  },\n  created() {\n    this.subjectId = this.$route.params.id;\n    this.getSubjectDetail();\n  },\n\n  methods: {\n    async getSubjectDetail() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/subject/detail/${this.subjectId}`\n        );\n        this.subjectData = response.data.result;\n        console.log(this.subjectData);\n\n        // 데이터가 로드된 후 상위 컴포넌트에 알림\n        this.$emit('subject-data-loaded', this.subjectData);\n\n      } catch (error) {\n        console.error(\"강좌 세부 정보 조회 실패:\", error);\n      }\n    },\n    async checkWishlistStatus() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/wish/check/${this.subjectId}`\n        );\n        this.subjectData.isSubscribe = response.data.isInWishlist;\n      } catch (error) {\n        console.error(\"위시리스트 상태 확인 실패:\", error);\n      }\n    },\n    async checkEnrollmentStatus() {\n      try {\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/my/subject/check-enrollment/${this.subjectId}`\n        );\n        this.subjectData.isRegistered = response.data.isEnrolled; // 사용자가 수강중인지 확인\n      } catch (error) {\n        console.error(\"수강 상태 확인 실패:\", error);\n      }\n    },\n    async handleWishlist() {\n      if (this.subjectData.isSubscribe) {\n        await this.removeFromWishlist();\n      } else {\n        await this.addToWishlist();\n      }\n      // this.isInWishlist = !this.isInWishlist;\n    },\n    async addToWishlist() {\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`);\n        alert(\"찜 추가 성공\");\n        this.subjectData.isSubscribe = true;\n      } catch (error) {\n        alert(\"찜 추가 실패\");\n        console.error(error);\n      }\n    },\n    async removeFromWishlist() {\n      try {\n        await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/wish/${this.subjectId}`);\n        alert(\"찜 취소 성공\");\n        this.subjectData.isSubscribe = false;\n      } catch (error) {\n        alert(\"찜 취소 실패\");\n        console.error(error);\n      }\n    },\n    async applyForSubject() {\n      if (this.subjectData.isRegistered) {\n        alert(\"이미 수강중인 강좌입니다.\");\n        return;\n      }\n      try {\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/my/subject/create`, {\n          subjectId: this.subjectId,\n        });\n        alert(\"강좌 수강 신청이 완료되었습니다.\");\n        this.subjectData.isRegistered = true; // 신청 후 수강 상태 업데이트\n      } catch (error) {\n        alert(\"강좌 수강 신청 실패\");\n        console.error(error);\n      }\n    },\n    goToPage(pathName) {\n      this.$router.push({ name: pathName, params: { id: this.subjectId } });\n    },\n  },\n  computed: {\n    menuItems() {\n      return [\n        { title: \"강의목록\", value: \"SubjectDetail\" },\n        { title: \"Q&A 게시판\", value: \"SubjectQna\" },\n        { title: \"강의 후기\", value: \"SubjectReview\" },\n      ];\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}