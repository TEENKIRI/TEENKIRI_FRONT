{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      question: {\n        title: '',\n        questionText: '',\n        qImage: null\n      }\n    };\n  },\n  created() {\n    this.fetchQuestionDetail();\n  },\n  methods: {\n    async fetchQuestionDetail() {\n      const questionId = this.$route.params.id;\n      console.log('id:', questionId);\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.question = response.data.result;\n      } catch (error) {\n        this.$router.push('/qna/list');\n      }\n    },\n    async updateQuestion() {\n      const formData = new FormData();\n      formData.append('title', this.question.title);\n      formData.append('questionText', this.question.questionText);\n      if (this.question.qImage) {\n        formData.append('image', this.question.qImage);\n      }\n      try {\n        //   await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/update/question/${this.$route.params.id}`, formData);\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/update/question/${this.questionId}`, formData);\n        this.$router.push('/qna/list');\n      } catch (error) {\n        alert('질문 수정에 실패했습니다.');\n      }\n    },\n    goBack() {\n      this.$router.push('/qna/list');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","question","title","questionText","qImage","created","fetchQuestionDetail","methods","questionId","$route","params","id","console","log","response","get","process","env","VUE_APP_API_BASE_URL","result","error","$router","push","updateQuestion","formData","FormData","append","post","alert","goBack"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/UpdateQuestion.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-form @submit.prevent=\"updateQuestion\">\n        <v-text-field\n          label=\"제목\"\n          v-model=\"question.title\"\n          required\n        ></v-text-field>\n  \n        <v-textarea\n          label=\"질문 내용\"\n          v-model=\"question.questionText\"\n          required\n        ></v-textarea>\n  \n        <v-file-input\n          label=\"이미지 선택\"\n          v-model=\"question.qImage\"\n          accept=\"image/*\"\n        ></v-file-input>\n  \n        <v-btn type=\"submit\" color=\"primary\">수정 완료</v-btn>\n        <v-btn color=\"secondary\" @click=\"goBack\">취소</v-btn>\n      </v-form>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        question: {\n          title: '',\n          questionText: '',\n          qImage: null,\n        },\n      };\n    },\n    created() {\n      this.fetchQuestionDetail();\n    },\n    methods: {\n      async fetchQuestionDetail() {\n        const questionId = this.$route.params.id;\n        console.log('id:',questionId);\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n          this.question = response.data.result;\n        } catch (error) {\n          this.$router.push('/qna/list');\n        }\n      },\n      async updateQuestion() {\n        const formData = new FormData();\n        formData.append('title', this.question.title);\n        formData.append('questionText', this.question.questionText);\n        if (this.question.qImage) {\n          formData.append('image', this.question.qImage);\n        }\n  \n        try {\n        //   await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/update/question/${this.$route.params.id}`, formData);\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/update/question/${this.questionId}`, formData);\n          this.$router.push('/qna/list');\n        } catch (error) {\n          alert('질문 수정에 실패했습니다.');\n        }\n      },\n      goBack() {\n        this.$router.push('/qna/list');\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  </style>\n  "],"mappings":";AA4BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE;MACV;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,mBAAmBA,CAAA,EAAG;MAC1B,MAAME,UAAS,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACxCC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACL,UAAU,CAAC;MAC7B,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,eAAeV,UAAU,EAAE,CAAC;QAChG,IAAI,CAACP,QAAO,GAAIa,QAAQ,CAACd,IAAI,CAACmB,MAAM;MACtC,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;MAChC;IACF,CAAC;IACD,MAAMC,cAAcA,CAAA,EAAG;MACrB,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACzB,QAAQ,CAACC,KAAK,CAAC;MAC7CsB,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,IAAI,CAACzB,QAAQ,CAACE,YAAY,CAAC;MAC3D,IAAI,IAAI,CAACF,QAAQ,CAACG,MAAM,EAAE;QACxBoB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACzB,QAAQ,CAACG,MAAM,CAAC;MAChD;MAEA,IAAI;QACJ;QACA,MAAML,KAAK,CAAC4B,IAAI,CAAC,GAAGX,OAAO,CAACC,GAAG,CAACC,oBAAoB,wBAAwB,IAAI,CAACV,UAAU,EAAE,EAAEgB,QAAQ,CAAC;QACtG,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;MAChC,EAAE,OAAOF,KAAK,EAAE;QACdQ,KAAK,CAAC,gBAAgB,CAAC;MACzB;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACR,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}