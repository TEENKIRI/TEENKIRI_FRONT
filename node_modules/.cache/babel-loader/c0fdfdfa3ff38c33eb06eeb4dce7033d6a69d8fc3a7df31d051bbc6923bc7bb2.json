{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      subjectTitle: '',\n      // 강좌 제목을 위한 데이터 필드\n      questionUserNickname: '',\n      questionDate: '',\n      questionTitle: '',\n      questionText: '',\n      questionImage: null,\n      answererEmail: '',\n      answerText: '',\n      answerImage: null,\n      previewImageSrc: null\n    };\n  },\n  created() {\n    this.fetchQuestionDetails();\n  },\n  methods: {\n    fetchQuestionDetails() {\n      const questionId = this.$route.params.id;\n      axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`).then(response => {\n        const question = response.data.result;\n        this.subjectTitle = question.subjectTitle; // 강좌 제목 설정\n        this.questionUserNickname = question.questionUserNickname;\n        this.questionDate = new Date(question.createdTime).toLocaleString();\n        this.questionTitle = question.title;\n        this.questionText = question.questionText;\n        this.questionImage = question.qimageUrl;\n      }).catch(error => {\n        console.error('질문 정보를 불러오는 중 오류가 발생했습니다:', error);\n      });\n    },\n    onFileChange(event) {\n      const files = event.target.files || event.dataTransfer.files;\n      if (files && files.length > 0) {\n        this.answerImage = files[0];\n        this.previewImage();\n      } else {\n        this.answerImage = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.answerImage) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.answerImage);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async submitAnswer() {\n      const formData = new FormData();\n      formData.append('answererEmail', this.answererEmail);\n      formData.append('answerText', this.answerText);\n      if (this.answerImage) {\n        formData.append('image', this.answerImage);\n      }\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/qna/answer/${this.$route.params.id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('답변이 성공적으로 제출되었습니다!');\n        this.$router.push(`/qna/detail/${this.$route.params.id}`);\n      } catch (error) {\n        const errorMessage = error.response && error.response.data ? error.response.data.message : '답변 제출에 실패했습니다.';\n        alert(errorMessage);\n        console.error('Error details:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","subjectTitle","questionUserNickname","questionDate","questionTitle","questionText","questionImage","answererEmail","answerText","answerImage","previewImageSrc","created","fetchQuestionDetails","methods","questionId","$route","params","id","get","process","env","VUE_APP_API_BASE_URL","then","response","question","result","Date","createdTime","toLocaleString","title","qimageUrl","catch","error","console","onFileChange","event","files","target","dataTransfer","length","previewImage","reader","FileReader","onload","e","readAsDataURL","submitAnswer","formData","FormData","append","post","headers","alert","$router","push","errorMessage","message"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/CreateAnswer.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card>\n        <v-card-title>\n          <h3>QnA 답변하기</h3>\n        </v-card-title>\n  \n        <v-card-text>\n          <!-- 강좌 정보 -->\n          <v-row>\n            <v-col cols=\"12\">\n              <v-text-field\n                label=\"강좌\"\n                v-model=\"subjectTitle\"\n                readonly\n              />\n            </v-col>\n          </v-row>\n  \n          <!-- 질문자 정보 -->\n          <v-row>\n            <v-col cols=\"6\">\n              <v-text-field\n                label=\"질문자\"\n                v-model=\"questionUserNickname\"\n                readonly\n              />\n            </v-col>\n            <v-col cols=\"6\">\n              <v-text-field\n                label=\"질문 날짜\"\n                v-model=\"questionDate\"\n                readonly\n              />\n            </v-col>\n          </v-row>\n  \n          <!-- 질문 내용 -->\n          <v-text-field label=\"제목\" v-model=\"questionTitle\" readonly />\n          <v-textarea label=\"질문 내용\" v-model=\"questionText\" rows=\"5\" readonly />\n  \n          <!-- 질문 이미지 -->\n          <v-img\n            v-if=\"questionImage\"\n            :src=\"questionImage\"\n            alt=\"질문 이미지\"\n            max-width=\"400\"\n            class=\"my-3\"\n          ></v-img>\n  \n          <!-- 답변 폼 -->\n          <v-form ref=\"form\" @submit.prevent=\"submitAnswer\">\n            <v-textarea\n              label=\"답변 내용\"\n              v-model=\"answerText\"\n              rows=\"5\"\n              required\n            />\n            <v-file-input\n              ref=\"fileInput\"\n              @change=\"onFileChange\"\n              label=\"답변 이미지 (선택사항)\"\n              accept=\"image/*\"\n            />\n            <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" />\n            <v-btn type=\"submit\" color=\"primary\" class=\"mt-3\">답변 제출</v-btn>\n          </v-form>\n        </v-card-text>\n      </v-card>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        subjectTitle: '', // 강좌 제목을 위한 데이터 필드\n        questionUserNickname: '',\n        questionDate: '',\n        questionTitle: '',\n        questionText: '',\n        questionImage: null,\n  \n        answererEmail: '',\n        answerText: '',\n        answerImage: null,\n        previewImageSrc: null,\n      };\n    },\n    created() {\n      this.fetchQuestionDetails();\n    },\n    methods: {\n      fetchQuestionDetails() {\n        const questionId = this.$route.params.id;\n        axios\n          .get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`)\n          .then((response) => {\n            const question = response.data.result;\n            this.subjectTitle = question.subjectTitle; // 강좌 제목 설정\n            this.questionUserNickname = question.questionUserNickname;\n            this.questionDate = new Date(question.createdTime).toLocaleString();\n            this.questionTitle = question.title;\n            this.questionText = question.questionText;\n            this.questionImage = question.qimageUrl;\n          })\n          .catch((error) => {\n            console.error('질문 정보를 불러오는 중 오류가 발생했습니다:', error);\n          });\n      },\n      onFileChange(event) {\n        const files = event.target.files || event.dataTransfer.files;\n        if (files && files.length > 0) {\n          this.answerImage = files[0];\n          this.previewImage();\n        } else {\n          this.answerImage = null;\n          this.previewImageSrc = null;\n        }\n      },\n      previewImage() {\n        if (this.answerImage) {\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            this.previewImageSrc = e.target.result;\n          };\n          reader.readAsDataURL(this.answerImage);\n        } else {\n          this.previewImageSrc = null;\n        }\n      },\n      async submitAnswer() {\n        const formData = new FormData();\n        formData.append('answererEmail', this.answererEmail);\n        formData.append('answerText', this.answerText);\n        if (this.answerImage) {\n          formData.append('image', this.answerImage);\n        }\n  \n        try {\n          const response = await axios.post(\n            `${process.env.VUE_APP_API_BASE_URL}/qna/answer/${this.$route.params.id}`,\n            formData,\n            {\n              headers: {\n                'Content-Type': 'multipart/form-data',\n              },\n            }\n          );\n          alert('답변이 성공적으로 제출되었습니다!');\n          this.$router.push(`/qna/detail/${this.$route.params.id}`);\n        } catch (error) {\n          const errorMessage =\n            error.response && error.response.data\n              ? error.response.data.message\n              : '답변 제출에 실패했습니다.';\n          alert(errorMessage);\n          console.error('Error details:', error);\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 600px;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}