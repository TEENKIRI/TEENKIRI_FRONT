{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"과목 관리\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\",\n          onSubmit: _withModifiers($options.submitCourse, [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 과목 제목 \"), _createVNode(_component_v_text_field, {\n            label: \"과목명\",\n            modelValue: this.courseData.title,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => this.courseData.title = $event),\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_btn, {\n            type: \"submit\",\n            color: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"저장\")]),\n            _: 1 /* STABLE */\n          }), this.routeName === 'CourseEdit' ? (_openBlock(), _createBlock(_component_v_btn, {\n            key: 0,\n            color: \"red\",\n            class: \"ml-3\",\n            onClick: $options.deleteCourse\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"삭제\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onSubmit\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_","_component_v_card_text","_component_v_form","ref","onSubmit","_withModifiers","$options","submitCourse","_createCommentVNode","_component_v_text_field","label","modelValue","courseData","title","_cache","$event","required","_hoisted_2","_component_v_btn","type","color","_createTextVNode","routeName","key","onClick","deleteCourse"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/course/CourseCreate.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card>\n      <v-card-title>\n        <h3>과목 관리</h3>\n      </v-card-title>\n\n      <v-card-text>\n        <v-form ref=\"form\" @submit.prevent=\"submitCourse\">\n          <!-- 과목 제목 -->\n          <v-text-field label=\"과목명\" v-model=\"this.courseData.title\" required />\n          <div class=\"mt-3\">\n            <v-btn type=\"submit\" color=\"primary\">저장</v-btn>\n            <v-btn color=\"red\" class=\"ml-3\" v-if=\"this.routeName === 'CourseEdit'\" @click=\"deleteCourse\"\n              >삭제</v-btn\n            >\n          </div>\n        </v-form>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      user: {},\n      courseId: this.$route.params.id,\n      routeName: this.$route.name,\n      courseData: {},\n    };\n  },\n  async created() {\n    try {\n      await this.$store.dispatch(\"setUserAllInfoActions\");\n      this.user = this.$store.getters.getUserObj;\n\n      if (this.user.token === \"\") {\n        alert(\"로그인이 필요합니다.\");\n        location.href = -1;\n      } else if (this.user.role !== \"ADMIN\") {\n        alert(\"관리자만 생성이 가능합니다!\");\n        location.href = -1;\n      } else {\n        this.courseId =\n          this.courseId == undefined || this.courseId == \"\" ? \"\" : this.courseId;\n        console.log(\"courseId 아이디 >> \", this.courseId);\n        console.log(\"routeName 라우터 이름 >> \", this.routeName);\n        if (this.routeName === \"CourseEdit\") {\n          // 수정용 라우터\n          this.getCourseDetail();\n        }\n      }\n    } catch (error) {\n      console.error(\"사용자 정보를 가져오는 중 오류가 발생했습니다:\", error);\n    }\n  },\n  methods: {\n    async getCourseDetail() {\n      console.log(\"detail 불러오기~~~\");\n      if (this.courseId != \"\") {\n        try {\n          const response = await axios.get(\n            `${process.env.VUE_APP_API_BASE_URL}/course/detail/${this.courseId}`\n          );\n          this.courseData = response.data.result;\n          console.log(this.courseData);\n        } catch (error) {\n          console.error(\"과목 세부 정보 조회 실패:\", error);\n        }\n      }\n    },\n    async submitCourse() {\n      console.log(\"이얍~~\");\n      this.courseData.title = this.courseData.title.trim();\n\n      if (this.courseData.title != \"\") {\n        try {\n          const postData = { title: this.courseData.title };\n          let apiUrl = `${process.env.VUE_APP_API_BASE_URL}/course/create`;\n          if (this.routeName === \"CourseEdit\") {\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/course/update/${this.courseId}`;\n            await axios.patch(apiUrl, postData);\n            alert(\"과목이 성공적으로 수정되었습니다!\");\n          } else {\n            await axios.post(apiUrl, postData);\n            alert(\"과목이 성공적으로 등록되었습니다!\");\n          }\n          history.go(-1);\n        } catch (error) {\n          console.error(\"Error details:\", error);\n        }\n      }\n    },\n    async deleteCourse() {\n      if (this.courseId != \"\") {\n        try {\n          const response = await axios.delete(\n            `${process.env.VUE_APP_API_BASE_URL}/course/delete/${this.courseId}`\n          );\n          console.log(response)\n          alert(\"과목 삭제가 완료되었습니다.\")\n          history.go(-1);\n        }catch (error) {\n          console.error(\"Error details:\", error);\n        }\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";gCAIQA,mBAAA,CAAc,YAAV,OAAK;;EAOFC,KAAK,EAAC;AAAM;;;;;;;;;uBAVzBC,YAAA,CAmBcC,sBAAA;IAnBDF,KAAK,EAAC;EAAM;IAD3BG,OAAA,EAAAC,QAAA,CAEI,MAiBS,CAjBTC,YAAA,CAiBSC,iBAAA;MAnBbH,OAAA,EAAAC,QAAA,CAGM,MAEe,CAFfC,YAAA,CAEeE,uBAAA;QALrBJ,OAAA,EAAAC,QAAA,CAIQ,MAAc,CAAdI,UAAc,C;QAJtBC,CAAA;UAOMJ,YAAA,CAWcK,sBAAA;QAlBpBP,OAAA,EAAAC,QAAA,CAQQ,MASS,CATTC,YAAA,CASSM,iBAAA;UATDC,GAAG,EAAC,MAAM;UAAEC,QAAM,EARlCC,cAAA,CAQ4CC,QAAA,CAAAC,YAAY;;UARxDb,OAAA,EAAAC,QAAA,CASU,MAAc,CAAda,mBAAA,WAAc,EACdZ,YAAA,CAAqEa,uBAAA;YAAvDC,KAAK,EAAC,KAAK;YAVnCC,UAAA,OAUkDC,UAAU,CAACC,KAAK;YAVlE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAUkDH,UAAU,CAACC,KAAK,GAAAE,MAAA;YAAEC,QAAQ,EAAR;mDAC1D1B,mBAAA,CAKM,OALN2B,UAKM,GAJJrB,YAAA,CAA+CsB,gBAAA;YAAxCC,IAAI,EAAC,QAAQ;YAACC,KAAK,EAAC;;YAZvC1B,OAAA,EAAAC,QAAA,CAYiD,MAAE,CAZnD0B,gBAAA,CAYiD,IAAE,E;YAZnDrB,CAAA;mBAauDsB,SAAS,qB,cAApD9B,YAAA,CAEC0B,gBAAA;YAfbK,GAAA;YAamBH,KAAK,EAAC,KAAK;YAAC7B,KAAK,EAAC,MAAM;YAAyCiC,OAAK,EAAElB,QAAA,CAAAmB;;YAb3F/B,OAAA,EAAAC,QAAA,CAce,MAAE,CAdjB0B,gBAAA,CAce,IAAE,E;YAdjBrB,CAAA;4CAAAQ,mBAAA,e;UAAAR,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}