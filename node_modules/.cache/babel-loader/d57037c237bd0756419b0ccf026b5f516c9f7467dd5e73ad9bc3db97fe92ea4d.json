{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: {\n    subjectId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/subject/${this.subjectId}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.itemsPerPage\n          }\n        });\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = String(d.getMonth() + 1).padStart(2, '0');\n      const day = String(d.getDate()).padStart(2, '0');\n      return `${year}년 ${month}월 ${day}일`;\n    },\n    createNewQuestion() {\n      this.$router.push(`/qna/create?subjectId=${this.subjectId}`);\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","subjectId","type","String","required","data","questions","currentPage","totalPages","itemsPerPage","created","fetchQuestions","methods","response","get","process","env","VUE_APP_API_BASE_URL","params","page","size","result","content","console","error","formatDate","date","d","Date","year","getFullYear","month","getMonth","padStart","day","getDate","createNewQuestion","$router","push","viewDetail","id","goToPreviousPage","goToNextPage","goToPage"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectQna.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"LectureDetails\">\n      <div class=\"inner\">\n        <h1>QnA 목록</h1>\n\n        <div class=\"btnWrap\">\n          <a href=\"javascript:void(0)\" class=\"btn_write\" @click=\"createNewQuestion\">질문작성</a>\n        </div>\n\n        <table class=\"tbl_list\">\n          <caption></caption>\n          <colgroup>\n            <col width=\"80\" />\n            <col width=\"\" />\n            <col width=\"\" />\n            <col width=\"140\" />\n            <col width=\"140\" />\n            <col width=\"140\" />\n            <col width=\"140\" />\n          </colgroup>\n          <thead>\n            <tr>\n              <th>번호</th>\n              <th>강의명</th>\n              <th>제목</th>\n              <th>작성자</th>\n              <th>작성일</th>\n              <th>상태</th>\n              <th>관리</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(question, index) in questions\" :key=\"question.id\">\n              <td>{{ index + 1 + (currentPage - 1) * itemsPerPage }}</td>\n              <td class=\"text_left\">{{ question.subjectTitle }}</td>\n              <td class=\"text_left\">\n                <a href=\"javascript:void(0)\" class=\"subject\" @click=\"viewDetail(question.id)\">\n                  {{ question.title }} <span class=\"cnt\">{{ question.answerCount }}</span>\n                </a>\n              </td>\n              <td>{{ question.questionUserName }}</td>\n              <td>{{ formatDate(question.createdTime) }}</td>\n              <td>{{ question.answeredAt ? '답변완료' : '미답변' }}</td>\n              <td>\n                <button type=\"button\" class=\"btn_adm_control\"></button>\n                <div class=\"conLayer\">\n                  <a href=\"javascript:void(0)\" class=\"btn_board_modify\">수정</a>\n                  <a href=\"javascript:void(0)\" class=\"btn_board_del btn_del\">삭제</a>\n                </div>\n              </td>\n            </tr>\n\n            <!-- 답변 row -->\n            <template v-for=\"question in questions\" :key=\"question.id\">\n              <template v-if=\"question.isAnswered\">\n                <tr v-for=\"reply in question.replies\" :key=\"reply.id\" class=\"reply\">\n                  <td></td>\n                  <td class=\"text_left\">{{ reply.subjectTitle }}</td>\n                  <td class=\"text_left\">\n                    <i class=\"ico_reply\"></i> \n                    <a href=\"javascript:void(0)\" class=\"subject\" @click=\"viewDetail(reply.id)\">\n                      [답변] {{ reply.title }}\n                    </a>\n                  </td>\n                  <td>{{ reply.userName }}</td>\n                  <td>{{ formatDate(reply.createdTime) }}</td>\n                  <td>\n                    <span class=\"answer\">{{ reply.isAnswered ? '답변완료' : '답변전' }}</span>\n                  </td>\n                  <td>\n                    <button type=\"button\" class=\"btn_adm_control\"></button>\n                    <div class=\"conLayer\">\n                      <a href=\"javascript:void(0)\" class=\"btn_board_modify\">수정</a>\n                      <a href=\"javascript:void(0)\" class=\"btn_board_del btn_del\">삭제</a>\n                    </div>\n                  </td>\n                </tr>\n              </template>\n            </template>\n          </tbody>\n        </table>\n\n        <div class=\"pagingWrap\">\n          <ul>\n            <li><a href=\"javascript:void(0)\" class=\"btn_paging_start\" @click=\"goToPage(1)\"></a></li>\n            <li><a href=\"javascript:void(0)\" class=\"btn_paging_prev\" @click=\"goToPreviousPage\"></a></li>\n            <li v-for=\"page in totalPages\" :key=\"page\">\n              <a href=\"javascript:void(0)\" class=\"btn_paging\" :class=\"{ active: currentPage === page }\" @click=\"goToPage(page)\">\n                {{ page }}\n              </a>\n            </li>\n            <li><a href=\"javascript:void(0)\" class=\"btn_paging_next\" @click=\"goToNextPage\"></a></li>\n            <li><a href=\"javascript:void(0)\" class=\"btn_paging_end\" @click=\"goToPage(totalPages)\"></a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    subjectId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      questions: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n    };\n  },\n  created() {\n    this.fetchQuestions();\n  },\n  methods: {\n    async fetchQuestions() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/subject/${this.subjectId}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.itemsPerPage,\n          },\n        });\n\n        const result = response.data.result;\n        if (result && result.content) {\n          this.questions = result.content;\n          this.totalPages = result.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = String(d.getMonth() + 1).padStart(2, '0');\n      const day = String(d.getDate()).padStart(2, '0');\n      return `${year}년 ${month}월 ${day}일`;\n    },\n    createNewQuestion() {\n      this.$router.push(`/qna/create?subjectId=${this.subjectId}`);\n    },\n    viewDetail(id) {\n      this.$router.push(`/qna/detail/${id}`);\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchQuestions();\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchQuestions();\n      }\n    },\n    goToPage(page) {\n      if (page !== this.currentPage) {\n        this.currentPage = page;\n        this.fetchQuestions();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 기존 스타일과의 통합을 위해 필요한 CSS 추가 */\n.container {\n  padding-top: 20px;\n}\n\n.LectureDetails {\n  background-color: #f9f9f9;\n  padding: 20px;\n  border-radius: 8px;\n}\n\n.inner {\n  max-width: 1200px;\n  margin: auto;\n}\n\n.btnWrap {\n  text-align: right;\n  margin-bottom: 20px;\n}\n\n.btn_write {\n  background-color: #007bff;\n  color: #fff;\n  padding: 10px 20px;\n  text-decoration: none;\n  border-radius: 5px;\n  font-size: 16px;\n  display: inline-block;\n  transition: background-color 0.3s ease;\n}\n\n.btn_write:hover {\n  background-color: #0056b3;\n}\n\n.tbl_list {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.tbl_list th,\n.tbl_list td {\n  border: 1px solid #ddd;\n  padding: 10px;\n  text-align: left;\n}\n\n.tbl_list th {\n  background-color: #f4f4f4;\n  font-weight: bold;\n}\n\n.text_left {\n  text-align: left;\n}\n\n.subject {\n  color: #007bff;\n  cursor: pointer;\n  text-decoration: underline;\n}\n\n.subject:hover {\n  color: #0056b3;\n}\n\n.answer {\n  color: #dc3545;\n  font-weight: bold;\n}\n\n.answer.active {\n  color: #28a745;\n}\n\n.pagingWrap {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.pagingWrap ul {\n  list-style: none;\n  padding: 0;\n}\n\n.pagingWrap li {\n  display: inline;\n  margin: 0 5px;\n}\n\n.pagingWrap a {\n  color: #007bff;\n  text-decoration: none;\n}\n\n.pagingWrap a.active {\n  font-weight: bold;\n  color: #0056b3;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}