{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      questions: [],\n      totalQuestions: 0,\n      loading: false,\n      headers: [{\n        text: '번호',\n        value: 'id'\n      }, {\n        text: '제목',\n        value: 'title'\n      }, {\n        text: '작성자',\n        value: 'questionUserName'\n      }, {\n        text: '작성 시간',\n        value: 'createdTime'\n      }, {\n        text: '답변',\n        value: 'answerText'\n      }, {\n        text: '관리',\n        value: 'actions',\n        sortable: false\n      }],\n      options: {\n        page: 1,\n        itemsPerPage: 10,\n        sortBy: ['createdTime'],\n        sortDesc: [true]\n      },\n      currentPage: 1,\n      totalPages: 1,\n      isAdmin: false\n    };\n  },\n  created() {\n    this.checkAdminRole();\n    this.fetchQuestions();\n  },\n  methods: {\n    checkAdminRole() {\n      const role = localStorage.getItem('role');\n      this.isAdmin = role === 'ADMIN';\n    },\n    async fetchQuestions() {\n      try {\n        this.loading = true;\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n          params: {\n            page: this.currentPage - 1,\n            size: this.options.itemsPerPage,\n            sort: `${this.options.sortBy[0]},${this.options.sortDesc[0] ? 'desc' : 'asc'}`\n          }\n        });\n        const data = response.data.data;\n        if (data && data.content) {\n          // 데이터가 null이 아닌지 확인\n          this.questions = data.content;\n          this.totalQuestions = data.totalElements;\n          this.totalPages = data.totalPages;\n        } else {\n          console.error('올바르지 않은 데이터 형식입니다:', response.data);\n        }\n      } catch (error) {\n        console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n        alert('질문 목록을 불러오는 데 실패했습니다.');\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    goToDetail(id) {\n      this.$router.push({\n        name: 'QnaDetail',\n        params: {\n          id\n        }\n      });\n    },\n    createNewQuestion() {\n      this.$router.push({\n        name: 'QnaCreate'\n      });\n    },\n    updateItem(id) {\n      this.$router.push({\n        name: 'QnaUpdate',\n        params: {\n          id\n        }\n      });\n    },\n    async deleteItem(id) {\n      try {\n        const confirmed = confirm('이 질문을 삭제하시겠습니까?');\n        if (confirmed) {\n          await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${id}`);\n          alert('질문이 삭제되었습니다.');\n          this.fetchQuestions();\n        }\n      } catch (error) {\n        console.error('질문을 삭제하는 중 오류가 발생했습니다:', error);\n        alert('질문 삭제에 실패했습니다.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","questions","totalQuestions","loading","headers","text","value","sortable","options","page","itemsPerPage","sortBy","sortDesc","currentPage","totalPages","isAdmin","created","checkAdminRole","fetchQuestions","methods","role","localStorage","getItem","response","get","process","env","VUE_APP_API_BASE_URL","params","size","sort","content","totalElements","console","error","alert","formatDate","date","year","month","day","hour","minute","Date","toLocaleDateString","goToDetail","id","$router","push","name","createNewQuestion","updateItem","deleteItem","confirmed","confirm","delete"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaList.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"questions\"\n            :loading=\"loading\"\n            :server-items-length=\"totalQuestions\"\n            v-model:options=\"options\"\n            :items-per-page=\"options.itemsPerPage\"\n            class=\"elevation-1\"\n          >\n            <template #top>\n              <v-toolbar flat>\n                <v-toolbar-title>질문 목록</v-toolbar-title>\n                <v-divider class=\"mx-4\" inset vertical></v-divider>\n                <v-spacer></v-spacer>\n                <v-btn v-if=\"isAdmin\" @click=\"createNewQuestion\" class=\"create-button\">질문 작성</v-btn>\n                <v-btn @click=\"fetchQuestions\">새로고침</v-btn>\n              </v-toolbar>\n            </template>\n  \n            <template #item=\"{ item }\">\n              <tr>\n                <td>{{ item.id }}</td>\n                <td @click=\"goToDetail(item.id)\" class=\"clickable\">{{ item.title }}</td>\n                <td>{{ item.questionUserName }}</td>\n                <td>{{ formatDate(item.createdTime) }}</td>\n                <td>\n                  <span v-if=\"item.answerText\">{{ item.answerText }}</span>\n                  <span v-else>답변 없음</span>\n                </td>\n                <td v-if=\"isAdmin\">\n                  <v-btn @click=\"updateItem(item.id)\">수정</v-btn>\n                  <v-btn @click=\"deleteItem(item.id)\">삭제</v-btn>\n                </td>\n              </tr>\n            </template>\n          </v-data-table>\n  \n          <v-pagination\n            v-model=\"currentPage\"\n            :length=\"totalPages\"\n            @input=\"fetchQuestions\"\n          ></v-pagination>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        questions: [],\n        totalQuestions: 0,\n        loading: false,\n        headers: [\n          { text: '번호', value: 'id' },\n          { text: '제목', value: 'title' },\n          { text: '작성자', value: 'questionUserName' },\n          { text: '작성 시간', value: 'createdTime' },\n          { text: '답변', value: 'answerText' },\n          { text: '관리', value: 'actions', sortable: false }\n        ],\n        options: {\n          page: 1,\n          itemsPerPage: 10,\n          sortBy: ['createdTime'],\n          sortDesc: [true]\n        },\n        currentPage: 1,\n        totalPages: 1,\n        isAdmin: false,\n      };\n    },\n    created() {\n      this.checkAdminRole();\n      this.fetchQuestions();\n    },\n    methods: {\n      checkAdminRole() {\n        const role = localStorage.getItem('role');\n        this.isAdmin = role === 'ADMIN';\n      },\n      async fetchQuestions() {\n  try {\n    this.loading = true;\n    const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/list`, {\n      params: {\n        page: this.currentPage - 1,\n        size: this.options.itemsPerPage,\n        sort: `${this.options.sortBy[0]},${this.options.sortDesc[0] ? 'desc' : 'asc'}`\n      }\n    });\n    const data = response.data.data;\n    if (data && data.content) { // 데이터가 null이 아닌지 확인\n      this.questions = data.content;\n      this.totalQuestions = data.totalElements;\n      this.totalPages = data.totalPages;\n    } else {\n      console.error('올바르지 않은 데이터 형식입니다:', response.data);\n    }\n  } catch (error) {\n    console.error('질문 목록을 불러오는 중 오류가 발생했습니다:', error);\n    alert('질문 목록을 불러오는 데 실패했습니다.');\n  } finally {\n    this.loading = false;\n  }\n},\n\n      formatDate(date) {\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      goToDetail(id) {\n        this.$router.push({ name: 'QnaDetail', params: { id } });\n      },\n      createNewQuestion() {\n        this.$router.push({ name: 'QnaCreate' });\n      },\n      updateItem(id) {\n        this.$router.push({ name: 'QnaUpdate', params: { id } });\n      },\n      async deleteItem(id) {\n        try {\n          const confirmed = confirm('이 질문을 삭제하시겠습니까?');\n          if (confirmed) {\n            await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/qna/delete/${id}`);\n            alert('질문이 삭제되었습니다.');\n            this.fetchQuestions();\n          }\n        } catch (error) {\n          console.error('질문을 삭제하는 중 오류가 발생했습니다:', error);\n          alert('질문 삭제에 실패했습니다.');\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .clickable {\n    cursor: pointer;\n    color: blue;\n    text-decoration: underline;\n  }\n  \n  .create-button {\n    background-color: #007bff;\n    color: white;\n    margin-right: 10px;\n  }\n  .create-button:hover {\n    background-color: #0056b3;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}