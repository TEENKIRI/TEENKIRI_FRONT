{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UserEditPage',\n  data() {\n    return {\n      userEditInfo: {\n        nickname: '',\n        name: '',\n        email: '',\n        phone: '',\n        address: {\n          city: '',\n          street: '',\n          zipcode: ''\n        }\n      },\n      userEditReq: {\n        password: '',\n        confirmPassword: ''\n      }\n    };\n  },\n  created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    async fetchUserInfo() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`);\n        if (response.status === 200 && response.data.result) {\n          this.userEditInfo = response.data.result;\n        } else {\n          alert('회원 정보 조회에 실패했습니다.');\n        }\n      } catch (e) {\n        alert(e.response?.data?.status_message || '회원 정보 조회 중 오류가 발생했습니다.');\n      }\n    },\n    async updateUserInfo() {\n      if (this.userEditReq.password && this.userEditReq.password !== this.userEditReq.confirmPassword) {\n        alert('비밀번호가 일치하지 않습니다.');\n        return;\n      }\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`, {\n          nickname: this.userEditInfo.nickname,\n          password: this.userEditReq.password,\n          confirmPassword: this.userEditReq.confirmPassword,\n          address: {\n            city: this.userEditInfo.city,\n            street: this.userEditInfo.street,\n            zipcode: this.userEditInfo.zipcode\n          }\n        });\n        if (response.status === 200) {\n          alert('회원 정보가 성공적으로 수정되었습니다.');\n        } else {\n          alert('회원 정보 수정에 실패했습니다.');\n        }\n      } catch (e) {\n        alert(e.response?.data?.status_message || '회원 정보 수정 중 오류가 발생했습니다.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userEditInfo","nickname","email","phone","address","city","street","zipcode","userEditReq","password","confirmPassword","created","fetchUserInfo","methods","response","get","process","env","VUE_APP_API_BASE_URL","status","result","alert","e","status_message","updateUserInfo","post"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/UpdateUserInfo.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row justify=\"center\">\n        <v-col cols=\"12\" sm=\"8\" md=\"6\">\n          <v-card>\n            <v-card-title class=\"text-h5 text-center\">회원 정보 수정</v-card-title>\n            <v-card-text>\n              <v-form @submit.prevent=\"updateUserInfo\">\n                <v-text-field\n                  label=\"닉네임\"\n                  v-model=\"userEditInfo.nickname\"\n                  prepend-icon=\"mdi-account\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  label=\"이름\"\n                  v-model=\"userEditInfo.name\"\n                  prepend-icon=\"mdi-account-box\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  label=\"이메일\"\n                  v-model=\"userEditInfo.email\"\n                  prepend-icon=\"mdi-email\"\n                  disabled\n                ></v-text-field>\n                <v-text-field\n                  label=\"핸드폰 번호\"\n                  v-model=\"userEditInfo.phone\"\n                  prepend-icon=\"mdi-phone\"\n                  required\n                ></v-text-field>\n  \n                <!-- 주소 필드 변경 -->\n                <v-text-field\n                  label=\"주소\"\n                  v-model=\"userEditInfo.address.city\"\n                  prepend-icon=\"mdi-home\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  label=\"상세주소\"\n                  v-model=\"userEditInfo.street\"\n                  prepend-icon=\"mdi-home-outline\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  label=\"우편번호\"\n                  v-model=\"userEditInfo.zipcode\"\n                  prepend-icon=\"mdi-home-outline\"\n                  required\n                ></v-text-field>\n  \n                <v-divider class=\"my-4\"></v-divider>\n                <v-text-field\n                  label=\"새 비밀번호\"\n                  v-model=\"userEditReq.password\"\n                  type=\"password\"\n                  prepend-icon=\"mdi-lock\"\n                ></v-text-field>\n                <v-text-field\n                  label=\"비밀번호 확인\"\n                  v-model=\"userEditReq.confirmPassword\"\n                  type=\"password\"\n                  prepend-icon=\"mdi-lock-check\"\n                ></v-text-field>\n                <v-btn block type=\"submit\" color=\"primary\">회원 정보 수정</v-btn>\n              </v-form>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'UserEditPage',\n    data() {\n      return {\n        userEditInfo: {\n          nickname: '',\n          name: '',\n          email: '',\n          phone: '',\n          address:{\n            city: '',       \n          street: '',     \n          zipcode: ''  \n          }\n        },\n        userEditReq: {\n          password: '',\n          confirmPassword: ''\n        }\n      };\n    },\n    created() {\n      this.fetchUserInfo();\n    },\n    methods: {\n      async fetchUserInfo() {\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`);\n          if (response.status === 200 && response.data.result) {\n            this.userEditInfo = response.data.result;\n          } else {\n            alert('회원 정보 조회에 실패했습니다.');\n          }\n        } catch (e) {\n          alert(e.response?.data?.status_message || '회원 정보 조회 중 오류가 발생했습니다.');\n        }\n      },\n      async updateUserInfo() {\n        if (this.userEditReq.password && this.userEditReq.password !== this.userEditReq.confirmPassword) {\n          alert('비밀번호가 일치하지 않습니다.');\n          return;\n        }\n        try {\n          const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/edit-info`, {\n            nickname: this.userEditInfo.nickname,\n            password: this.userEditReq.password,\n            confirmPassword: this.userEditReq.confirmPassword,\n            address: {\n              city: this.userEditInfo.city,\n              street: this.userEditInfo.street,\n              zipcode: this.userEditInfo.zipcode\n            }\n          });\n          if (response.status === 200) {\n            alert('회원 정보가 성공적으로 수정되었습니다.');\n          } else {\n            alert('회원 정보 수정에 실패했습니다.');\n          }\n        } catch (e) {\n          alert(e.response?.data?.status_message || '회원 정보 수정 중 오류가 발생했습니다.');\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  /* 필요에 따라 스타일 조정 */\n  </style>\n  "],"mappings":"AA4EE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZH,IAAI,EAAE,EAAE;QACRI,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAC;UACNC,IAAI,EAAE,EAAE;UACVC,MAAM,EAAE,EAAE;UACVC,OAAO,EAAE;QACT;MACF,CAAC;MACDC,WAAW,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE;MACnB;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,iBAAiB,CAAC;QACtF,IAAIJ,QAAQ,CAACK,MAAK,KAAM,GAAE,IAAKL,QAAQ,CAACf,IAAI,CAACqB,MAAM,EAAE;UACnD,IAAI,CAACpB,YAAW,GAAIc,QAAQ,CAACf,IAAI,CAACqB,MAAM;QAC1C,OAAO;UACLC,KAAK,CAAC,mBAAmB,CAAC;QAC5B;MACF,EAAE,OAAOC,CAAC,EAAE;QACVD,KAAK,CAACC,CAAC,CAACR,QAAQ,EAAEf,IAAI,EAAEwB,cAAa,IAAK,wBAAwB,CAAC;MACrE;IACF,CAAC;IACD,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,IAAI,CAAChB,WAAW,CAACC,QAAO,IAAK,IAAI,CAACD,WAAW,CAACC,QAAO,KAAM,IAAI,CAACD,WAAW,CAACE,eAAe,EAAE;QAC/FW,KAAK,CAAC,kBAAkB,CAAC;QACzB;MACF;MACA,IAAI;QACF,MAAMP,QAAO,GAAI,MAAMjB,KAAK,CAAC4B,IAAI,CAAC,GAAGT,OAAO,CAACC,GAAG,CAACC,oBAAoB,iBAAiB,EAAE;UACtFjB,QAAQ,EAAE,IAAI,CAACD,YAAY,CAACC,QAAQ;UACpCQ,QAAQ,EAAE,IAAI,CAACD,WAAW,CAACC,QAAQ;UACnCC,eAAe,EAAE,IAAI,CAACF,WAAW,CAACE,eAAe;UACjDN,OAAO,EAAE;YACPC,IAAI,EAAE,IAAI,CAACL,YAAY,CAACK,IAAI;YAC5BC,MAAM,EAAE,IAAI,CAACN,YAAY,CAACM,MAAM;YAChCC,OAAO,EAAE,IAAI,CAACP,YAAY,CAACO;UAC7B;QACF,CAAC,CAAC;QACF,IAAIO,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC3BE,KAAK,CAAC,uBAAuB,CAAC;QAChC,OAAO;UACLA,KAAK,CAAC,mBAAmB,CAAC;QAC5B;MACF,EAAE,OAAOC,CAAC,EAAE;QACVD,KAAK,CAACC,CAAC,CAACR,QAAQ,EAAEf,IAAI,EAAEwB,cAAa,IAAK,wBAAwB,CAAC;MACrE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}