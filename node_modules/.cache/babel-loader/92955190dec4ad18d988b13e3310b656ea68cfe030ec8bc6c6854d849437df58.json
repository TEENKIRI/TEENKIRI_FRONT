{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"ResetPasswordPage\",\n  props: ['token'],\n  // 라우터를 통해 전달받은 token을 props로 받아옴\n  data() {\n    return {\n      newPassword: \"\",\n      confirmPassword: \"\",\n      errorMessage: \"\",\n      successMessage: \"\"\n    };\n  },\n  methods: {\n    async sendResetLink() {\n      if (!this.name || !this.email || !this.phone) {\n        alert('모든 필드를 입력해주세요.');\n        return;\n      }\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/find-password`, {\n          name: this.name,\n          phone: this.phone,\n          email: this.email\n        });\n        this.successMessage = '비밀번호 재설정 링크가 이메일로 발송되었습니다.';\n        alert(this.successMessage); // 창으로 성공 메시지 표시\n        this.errorMessage = \"\";\n        console.log(response);\n      } catch (e) {\n        console.log(e.response);\n        this.errorMessage = e.response?.data?.status_message || '알 수 없는 오류가 발생했습니다.';\n        console.log(this.errorMessage);\n        alert(this.errorMessage); // 창으로 오류 메시지 표시\n        this.successMessage = \"\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","data","newPassword","confirmPassword","errorMessage","successMessage","methods","sendResetLink","email","phone","alert","response","post","process","env","VUE_APP_API_BASE_URL","console","log","e","status_message"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/ResetPasswordPage.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" sm=\"6\" md=\"8\">\n        <v-card>\n          <v-card-title class=\"text-h5 text-center\">비밀번호 찾기</v-card-title>\n          <v-card-text>\n            <v-form @submit.prevent=\"sendResetLink\">\n              <v-text-field\n                label=\"이름\"\n                v-model=\"name\"\n                type=\"text\"\n                prepend-icon=\"mdi-account\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"이메일\"\n                v-model=\"email\"\n                type=\"email\"\n                prepend-icon=\"mdi-email\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"핸드폰 번호\"\n                v-model=\"phone\"\n                type=\"text\"\n                prepend-icon=\"mdi-phone\"\n                required\n              ></v-text-field>\n              <v-btn block type=\"submit\" color=\"primary\">비밀번호 재설정 링크 보내기</v-btn>\n              <v-divider class=\"my-4\"></v-divider>\n              <v-btn block @click=\"$router.push('/login')\" color=\"secondary\">로그인 페이지로 돌아가기</v-btn>\n            </v-form>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n    <v-alert v-if=\"errorMessage\" type=\"error\">{{ errorMessage }}</v-alert>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"ResetPasswordPage\",\n  props: ['token'], // 라우터를 통해 전달받은 token을 props로 받아옴\n  data() {\n    return {\n      newPassword: \"\",\n      confirmPassword: \"\",\n      errorMessage: \"\",\n      successMessage: \"\"\n    };\n  },\n  methods: {\n    async sendResetLink() {\n      if (!this.name || !this.email || !this.phone) {\n        alert('모든 필드를 입력해주세요.');\n        return;\n      }\n\n      try {\n        const response = await axios.post(\n          `${process.env.VUE_APP_API_BASE_URL}/user/find-password`,\n          {\n            name: this.name,\n            phone: this.phone,\n            email: this.email\n          }\n        );\n\n        this.successMessage = '비밀번호 재설정 링크가 이메일로 발송되었습니다.';\n        alert(this.successMessage); // 창으로 성공 메시지 표시\n        this.errorMessage = \"\";\n        console.log(response);\n      } catch (e) {\n        console.log(e.response);\n        this.errorMessage = e.response?.data?.status_message || '알 수 없는 오류가 발생했습니다.';\n        console.log(this.errorMessage);\n        alert(this.errorMessage); // 창으로 오류 메시지 표시\n        this.successMessage = \"\";\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 스타일은 필요에 따라 조정하세요 */\n</style>\n"],"mappings":"AA0CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE,CAAC,OAAO,CAAC;EAAE;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAACR,IAAG,IAAK,CAAC,IAAI,CAACS,KAAI,IAAK,CAAC,IAAI,CAACC,KAAK,EAAE;QAC5CC,KAAK,CAAC,gBAAgB,CAAC;QACvB;MACF;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAC/B,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,qBAAqB,EACxD;UACEhB,IAAI,EAAE,IAAI,CAACA,IAAI;UACfU,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBD,KAAK,EAAE,IAAI,CAACA;QACd,CACF,CAAC;QAED,IAAI,CAACH,cAAa,GAAI,4BAA4B;QAClDK,KAAK,CAAC,IAAI,CAACL,cAAc,CAAC,EAAE;QAC5B,IAAI,CAACD,YAAW,GAAI,EAAE;QACtBY,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACvB,EAAE,OAAOO,CAAC,EAAE;QACVF,OAAO,CAACC,GAAG,CAACC,CAAC,CAACP,QAAQ,CAAC;QACvB,IAAI,CAACP,YAAW,GAAIc,CAAC,CAACP,QAAQ,EAAEV,IAAI,EAAEkB,cAAa,IAAK,oBAAoB;QAC5EH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,YAAY,CAAC;QAC9BM,KAAK,CAAC,IAAI,CAACN,YAAY,CAAC,EAAE;QAC1B,IAAI,CAACC,cAAa,GAAI,EAAE;MAC1B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}