{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UserSubjects',\n  data() {\n    return {\n      subjects: []\n    };\n  },\n  async mounted() {\n    await this.fetchUserSubjects();\n  },\n  methods: {\n    async fetchUserSubjects() {\n      try {\n        const userId = localStorage.getItem('userId'); // 로컬 스토리지에서 사용자 ID 가져오기\n        if (!userId) {\n          console.error('사용자 ID가 로컬 스토리지에 없습니다.');\n          return;\n        }\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/my/subject/${userId}`);\n        console.log(response.data);\n        this.subjects = response.data.subjects;\n      } catch (error) {\n        console.error('수강 중인 강좌 가져오기 오류:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","subjects","mounted","fetchUserSubjects","methods","userId","localStorage","getItem","console","error","response","get","process","env","VUE_APP_API_BASE_URL","log"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/user/SubscribePage.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row class=\"subject-header\">\n        <v-col>\n          <h1>수강 중인 강좌</h1>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col\n          v-for=\"subject in subjects\"\n          :key=\"subject.title\"\n          cols=\"12\" sm=\"6\" md=\"4\"\n        >\n          <v-card class=\"ma-4\" :elevation=\"4\">\n            <v-img :src=\"subject.subjectThumUrl\" height=\"200px\"></v-img>\n            <v-card-title>{{ subject.title }}</v-card-title>\n            <v-card-subtitle>강사: {{ subject.teacherName }}</v-card-subtitle>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'UserSubjects',\n    data() {\n      return {\n        subjects: []\n      };\n    },\n    async mounted() {\n      await this.fetchUserSubjects();\n    },\n    methods: {\n      async fetchUserSubjects() {\n        try {\n          const userId = localStorage.getItem('userId'); // 로컬 스토리지에서 사용자 ID 가져오기\n          if (!userId) {\n            console.error('사용자 ID가 로컬 스토리지에 없습니다.');\n            return;\n          }\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/my/subject/${userId}`);\n          console.log(response.data);\n          this.subjects = response.data.subjects;\n        } catch (error) {\n          console.error('수강 중인 강좌 가져오기 오류:', error);\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .subject-header {\n    margin-bottom: 20px;\n  }\n  \n  .v-card {\n    max-width: 400px;\n    margin: auto;\n  }\n  \n  .v-card-title {\n    font-weight: bold;\n  }\n  \n  .v-card-subtitle {\n    color: #757575;\n  }\n  </style>\n  "],"mappings":"AAwBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAChC,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC/C,IAAI,CAACF,MAAM,EAAE;UACXG,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;UACvC;QACF;QACA,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,eAAeT,MAAM,EAAE,CAAC;QAC5FG,OAAO,CAACO,GAAG,CAACL,QAAQ,CAACV,IAAI,CAAC;QAC1B,IAAI,CAACC,QAAO,GAAIS,QAAQ,CAACV,IAAI,CAACC,QAAQ;MACxC,EAAE,OAAOQ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}