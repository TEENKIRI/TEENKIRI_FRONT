{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      rememberEmail: false,\n      autoLogin: false\n    };\n  },\n  methods: {\n    async doLogin() {\n      try {\n        const loginData = {\n          email: this.email,\n          password: this.password,\n          rememberEmail: this.rememberEmail,\n          autoLogin: this.autoLogin\n        };\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/login`, loginData);\n        console.log('로그인 성공');\n        console.log(response);\n        const token = response.data.result;\n        console.log(\"$$$$Q#E@Q#E\", token);\n        //   const refreshToken = response.data.result.refreshToken;\n        console.log(jwtDecode(token));\n        const role = jwtDecode(token).role;\n        localStorage.setItem('token', token);\n        //   localStorage.setItem('refreshToken', refreshToken);\n        localStorage.setItem('role', role);\n        window.location.href = \"/\";\n      } catch (e) {\n        alert('로그인 실패');\n        console.log(e);\n        const error_message = e.response.data.status_message;\n        console.log(error_message);\n        alert(error_message);\n      }\n    },\n    kakaoLogin() {\n      console.log(\"카카오 로그인\");\n    },\n    findId() {\n      this.$router.push(\"/find-id\");\n    },\n    findPassword() {\n      this.$router.push(\"/find-password\");\n    },\n    signUp() {\n      this.$router.push(\"/register\");\n    }\n  }\n};","map":{"version":3,"names":["axios","jwtDecode","name","data","email","password","rememberEmail","autoLogin","methods","doLogin","loginData","response","post","process","env","VUE_APP_API_BASE_URL","console","log","token","result","role","localStorage","setItem","window","location","href","e","alert","error_message","status_message","kakaoLogin","findId","$router","push","findPassword","signUp"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/LoginPage.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-row justify=\"center\">\n        <v-col cols=\"12\" sm=\"6\" md=\"8\">\n          <v-card>\n            <v-card-title class=\"text-h5 text-center\">로그인</v-card-title>\n            <v-card-text>\n              <v-form @submit.prevent=\"doLogin\">\n                <v-text-field\n                  label=\"아이디(이메일)\"\n                  v-model=\"email\"\n                  type=\"email\"\n                  prepend-icon=\"mdi-email\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                  label=\"비밀번호\"\n                  v-model=\"password\"\n                  type=\"password\"\n                  prepend-icon=\"mdi-lock\"\n                  required\n                ></v-text-field>\n                <v-checkbox\n                  v-model=\"rememberEmail\"\n                  label=\"ID 저장\"\n                ></v-checkbox>\n                <v-checkbox\n                  v-model=\"autoLogin\"\n                  label=\"자동로그인\"\n                ></v-checkbox>\n                <v-btn block type=\"submit\" color=\"primary\">로그인</v-btn>\n                <v-divider class=\"my-4\"></v-divider>\n                <v-btn block color=\"warning\" @click=\"kakaoLogin\">카카오 로그인</v-btn>\n                <v-divider class=\"my-4\"></v-divider>\n                <v-list>\n                  <v-list-item @click=\"findId\">\n                    <v-list-item-title>아이디 찾기</v-list-item-title>\n                  </v-list-item>\n                  <v-list-item @click=\"findPassword\">\n                    <v-list-item-title>비밀번호 찾기</v-list-item-title>\n                  </v-list-item>\n                  <v-list-item @click=\"signUp\">\n                    <v-list-item-title>회원가입</v-list-item-title>\n                  </v-list-item>\n                </v-list>\n              </v-form>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import { jwtDecode } from 'jwt-decode';\n  export default {\n    name: \"LoginPage\",\n    data() {\n      return {\n        email: \"\",\n        password: \"\",\n        rememberEmail: false,\n        autoLogin: false,\n      };\n    },\n    methods: {\n      async doLogin() {\n        try {\n          const loginData = {\n            email: this.email,\n            password: this.password,\n            rememberEmail: this.rememberEmail,\n            autoLogin: this.autoLogin,\n          };\n          const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/login`, loginData);\n          console.log('로그인 성공');\n          console.log(response);\n          const token = response.data.result;\n          console.log(\"$$$$Q#E@Q#E\",token);\n        //   const refreshToken = response.data.result.refreshToken;\n          console.log(jwtDecode(token));\n          const role = jwtDecode(token).role;\n          localStorage.setItem('token', token);\n        //   localStorage.setItem('refreshToken', refreshToken);\n          localStorage.setItem('role',role);\n          window.location.href = \"/\";\n        } catch (e) {\n          alert('로그인 실패');\n          console.log(e);\n          const error_message = e.response.data.status_message;\n          console.log(error_message);\n          alert(error_message);\n        }\n      },\n      kakaoLogin() {\n        console.log(\"카카오 로그인\");\n      },\n      findId() {\n        this.$router.push(\"/find-id\");\n      },\n      findPassword() {\n        this.$router.push(\"/find-password\");\n      },\n      signUp() {\n        this.$router.push(\"/register\");\n      },\n    },\n  };\n  </script>\n  \n"],"mappings":";AAsDE,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,YAAY;AACtC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAMC,SAAQ,GAAI;UAChBN,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,aAAa,EAAE,IAAI,CAACA,aAAa;UACjCC,SAAS,EAAE,IAAI,CAACA;QAClB,CAAC;QACD,MAAMI,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,aAAa,EAAEL,SAAS,CAAC;QAC9FM,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QACrBD,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;QACrB,MAAMO,KAAI,GAAIP,QAAQ,CAACR,IAAI,CAACgB,MAAM;QAClCH,OAAO,CAACC,GAAG,CAAC,aAAa,EAACC,KAAK,CAAC;QAClC;QACEF,OAAO,CAACC,GAAG,CAAChB,SAAS,CAACiB,KAAK,CAAC,CAAC;QAC7B,MAAME,IAAG,GAAInB,SAAS,CAACiB,KAAK,CAAC,CAACE,IAAI;QAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;QACtC;QACEG,YAAY,CAACC,OAAO,CAAC,MAAM,EAACF,IAAI,CAAC;QACjCG,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,GAAG;MAC5B,EAAE,OAAOC,CAAC,EAAE;QACVC,KAAK,CAAC,QAAQ,CAAC;QACfX,OAAO,CAACC,GAAG,CAACS,CAAC,CAAC;QACd,MAAME,aAAY,GAAIF,CAAC,CAACf,QAAQ,CAACR,IAAI,CAAC0B,cAAc;QACpDb,OAAO,CAACC,GAAG,CAACW,aAAa,CAAC;QAC1BD,KAAK,CAACC,aAAa,CAAC;MACtB;IACF,CAAC;IACDE,UAAUA,CAAA,EAAG;MACXd,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC;IACDc,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IAC/B,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,gBAAgB,CAAC;IACrC,CAAC;IACDE,MAAMA,CAAA,EAAG;MACP,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}