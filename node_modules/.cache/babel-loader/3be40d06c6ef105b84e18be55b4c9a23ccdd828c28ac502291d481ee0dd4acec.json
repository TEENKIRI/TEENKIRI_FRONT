{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-439adaa3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"신고 목록\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"ID\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"신고자 이메일\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"피신고자 이메일\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"사유\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  key: 2\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"생성 시간\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_simple_table = _resolveComponent(\"v-simple-table\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_spacer), _createVNode(_component_v_select, {\n          modelValue: $data.selectedType,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedType = $event),\n          items: $data.types,\n          \"item-text\": \"text\",\n          \"item-value\": \"value\",\n          label: \"신고 유형 필터\",\n          onChange: $options.filterReports\n        }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_simple_table, null, {\n          default: _withCtx(() => [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, $options.showQnaCol ? (_openBlock(), _createElementBlock(\"th\", _hoisted_6, \"QnA ID\")) : _createCommentVNode(\"v-if\", true), $options.showPostCol ? (_openBlock(), _createElementBlock(\"th\", _hoisted_7, \"Post ID\")) : _createCommentVNode(\"v-if\", true), $options.showCommentCol ? (_openBlock(), _createElementBlock(\"th\", _hoisted_8, \"Comment ID\")) : _createCommentVNode(\"v-if\", true), _hoisted_9])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredReports, report => {\n            return _openBlock(), _createElementBlock(\"tr\", {\n              key: report.id\n            }, [_createElementVNode(\"td\", null, _toDisplayString(report.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(report.reportEmail), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(report.suspectEmail), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatReason(report.reason)), 1 /* TEXT */), $options.showQnaCol ? (_openBlock(), _createElementBlock(\"td\", _hoisted_10, _toDisplayString(report.qnaId), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $options.showPostCol ? (_openBlock(), _createElementBlock(\"td\", _hoisted_11, _toDisplayString(report.postId), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $options.showCommentCol ? (_openBlock(), _createElementBlock(\"td\", _hoisted_12, _toDisplayString(report.commentId), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(report.createdTime)), 1 /* TEXT */)]);\n          }), 128 /* KEYED_FRAGMENT */))])]),\n          _: 1 /* STABLE */\n        }), $data.totalPages > 1 ? (_openBlock(), _createBlock(_component_v_pagination, {\n          key: 0,\n          modelValue: $data.page,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.page = $event),\n          length: $data.totalPages,\n          onInput: $options.fetchReports,\n          class: \"mt-3\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"length\", \"onInput\"])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","key","_createBlock","_component_v_container","class","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_component_v_spacer","_component_v_select","modelValue","$data","selectedType","_cache","$event","items","types","label","onChange","$options","filterReports","_","_component_v_card_text","_component_v_simple_table","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","showQnaCol","_createElementBlock","_hoisted_6","_createCommentVNode","showPostCol","_hoisted_7","showCommentCol","_hoisted_8","_hoisted_9","_Fragment","_renderList","filteredReports","report","id","_toDisplayString","reportEmail","suspectEmail","formatReason","reason","_hoisted_10","qnaId","_hoisted_11","postId","_hoisted_12","commentId","formatDate","createdTime","totalPages","_component_v_pagination","page","length","onInput","fetchReports"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/report/ReportList.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card>\n        <v-card-title>\n          <h3>신고 목록</h3>\n          <v-spacer></v-spacer>\n          <v-select\n            v-model=\"selectedType\"\n            :items=\"types\"\n            item-text=\"text\"\n            item-value=\"value\"\n            label=\"신고 유형 필터\"\n            @change=\"filterReports\"\n          ></v-select>\n        </v-card-title>\n  \n        <v-card-text>\n          <v-simple-table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>신고자 이메일</th>\n                <th>피신고자 이메일</th>\n                <th>사유</th>\n                <th v-if=\"showQnaCol\">QnA ID</th>\n                <th v-if=\"showPostCol\">Post ID</th>\n                <th v-if=\"showCommentCol\">Comment ID</th>\n                <th>생성 시간</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"report in filteredReports\" :key=\"report.id\">\n                <td>{{ report.id }}</td>\n                <td>{{ report.reportEmail }}</td>\n                <td>{{ report.suspectEmail }}</td>\n                <td>{{ formatReason(report.reason) }}</td>\n                <td v-if=\"showQnaCol\">{{ report.qnaId }}</td>\n                <td v-if=\"showPostCol\">{{ report.postId }}</td>\n                <td v-if=\"showCommentCol\">{{ report.commentId }}</td>\n                <td>{{ formatDate(report.createdTime) }}</td>\n              </tr>\n            </tbody>\n          </v-simple-table>\n  \n          <v-pagination\n            v-if=\"totalPages > 1\"\n            v-model=\"page\"\n            :length=\"totalPages\"\n            @input=\"fetchReports\"\n            class=\"mt-3\"\n          ></v-pagination>\n        </v-card-text>\n      </v-card>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        reports: [],\n        selectedType: '',\n        types: [\n          { text: '전체', value: '' },\n          { text: 'QnA 신고', value: 'qna' },\n          { text: '게시글 신고', value: 'post' },\n          { text: '댓글 신고', value: 'comment' }\n        ],\n        page: 1,\n        totalPages: 1,\n        loading: false,\n      };\n    },\n    computed: {\n      showQnaCol() {\n        return this.selectedType === '' || this.selectedType === 'qna';\n      },\n      showPostCol() {\n        return this.selectedType === '' || this.selectedType === 'post';\n      },\n      showCommentCol() {\n        return this.selectedType === '' || this.selectedType === 'comment';\n      },\n      filteredReports() {\n        return this.reports.filter(report => {\n          if (this.selectedType === 'qna' && !report.qnaId) return false;\n          if (this.selectedType === 'post' && !report.postId) return false;\n          if (this.selectedType === 'comment' && !report.commentId) return false;\n          return true;\n        });\n      }\n    },\n    methods: {\n      async fetchReports() {\n        this.loading = true;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/report/list`, {\n            params: {\n              type: this.selectedType || '',\n              page: this.page - 1\n            }\n          });\n          this.reports = response.data.result.content;\n          this.totalPages = response.data.result.totalPages;\n        } catch (error) {\n          console.error('신고 목록을 불러오는 중 오류가 발생했습니다:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n      formatReason(reason) {\n        const reasonMap = {\n          SPAM: '스팸홍보/도배글',\n          PORNOGRAPHY: '음란물',\n          ILLEGAL_INFORMATION: '불법정보 포함',\n          HARMFUL_TO_MINORS: '청소년에게 유해한 내용',\n          ABUSIVE_LANGUAGE: '욕설/생명경시/혐오/차별적 표현',\n          PRIVACY_VIOLATION: '개인정보 노출',\n          OFFENSIVE_CONTENT: '불쾌한 표현'\n        };\n        return reasonMap[reason] || '알 수 없는 이유';\n      },\n      formatDate(date) {\n        if (!date) return '';\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      filterReports() {\n        this.page = 1; // 페이지를 첫 페이지로 초기화\n        this.fetchReports(); // 필터를 적용하여 데이터를 다시 불러옴\n      }\n    },\n    created() {\n      this.fetchReports();\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}