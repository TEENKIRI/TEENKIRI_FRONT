{"ast":null,"code":"import axios from 'axios';\nexport default {\n  components: {\n    HeaderComponent: {}\n  },\n  data() {\n    return {\n      formData: {\n        title: '',\n        questionText: ''\n      },\n      imageSsr: null\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.imageSsr = event.target.files[0];\n    },\n    async handleSubmit() {\n      const formData = new FormData();\n      formData.append('title', this.formData.title);\n      formData.append('questionText', this.formData.questionText);\n      if (this.imageSsr) {\n        formData.append('image', this.imageSsr);\n      }\n      try {\n        const response = await axios.post('/qna/create', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Form Submitted', response.data);\n        // 성공 시 추가 처리\n      } catch (error) {\n        console.error('Error submitting form', error.response.data);\n        // 에러 처리\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","components","HeaderComponent","data","formData","title","questionText","imageSsr","methods","handleFileUpload","event","target","files","handleSubmit","FormData","append","response","post","headers","console","log","error"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/CreateQuestion.vue"],"sourcesContent":["<template>\n    <div>\n      <header-component></header-component>\n      <div class=\"container\">\n        <div class=\"page-header\">\n          <h3>QnA 작성</h3>\n        </div>\n        <form @submit.prevent=\"handleSubmit\">\n          <div class=\"mb-3\">\n            <label for=\"title\" class=\"form-label\">제목</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              v-model=\"formData.title\"\n              id=\"title\"\n              required\n            />\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"questionText\" class=\"form-label\">질문 내용</label>\n            <textarea\n              class=\"form-control\"\n              v-model=\"formData.questionText\"\n              id=\"questionText\"\n              rows=\"5\"\n              required\n            ></textarea>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"imageSsr\" class=\"form-label\">이미지</label>\n            <input\n              type=\"file\"\n              class=\"form-control\"\n              @change=\"handleFileUpload\"\n              id=\"imageSsr\"\n            />\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary mt-3\">제출</button>\n        </form>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    components: {\n      HeaderComponent: {\n      }\n    },\n    data() {\n      return {\n        formData: {\n          title: '',\n          questionText: ''\n        },\n        imageSsr: null\n      };\n    },\n    methods: {\n      handleFileUpload(event) {\n        this.imageSsr = event.target.files[0];\n      },\n      async handleSubmit() {\n        const formData = new FormData();\n        formData.append('title', this.formData.title);\n        formData.append('questionText', this.formData.questionText);\n        if (this.imageSsr) {\n          formData.append('image', this.imageSsr);\n        }\n  \n        try {\n          const response = await axios.post('/qna/create', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log('Form Submitted', response.data);\n          // 성공 시 추가 처리\n        } catch (error) {\n          console.error('Error submitting form', error.response.data);\n          // 에러 처리\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    margin-top: 20px;\n  }\n  \n  .page-header {\n    margin-bottom: 20px;\n  }\n  </style>\n  "],"mappings":"AA4CE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVC,eAAe,EAAE,CACjB;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE;MAChB,CAAC;MACDC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACH,QAAO,GAAIG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,MAAMC,YAAYA,CAAA,EAAG;MACnB,MAAMT,QAAO,GAAI,IAAIU,QAAQ,CAAC,CAAC;MAC/BV,QAAQ,CAACW,MAAM,CAAC,OAAO,EAAE,IAAI,CAACX,QAAQ,CAACC,KAAK,CAAC;MAC7CD,QAAQ,CAACW,MAAM,CAAC,cAAc,EAAE,IAAI,CAACX,QAAQ,CAACE,YAAY,CAAC;MAC3D,IAAI,IAAI,CAACC,QAAQ,EAAE;QACjBH,QAAQ,CAACW,MAAM,CAAC,OAAO,EAAE,IAAI,CAACR,QAAQ,CAAC;MACzC;MAEA,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAAC,aAAa,EAAEb,QAAQ,EAAE;UACzDc,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,QAAQ,CAACb,IAAI,CAAC;QAC5C;MACF,EAAE,OAAOkB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACL,QAAQ,CAACb,IAAI,CAAC;QAC3D;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}