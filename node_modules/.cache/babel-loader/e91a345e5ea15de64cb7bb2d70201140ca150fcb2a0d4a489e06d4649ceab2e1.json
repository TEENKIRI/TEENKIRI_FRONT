{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_checkbox = _resolveComponent(\"v-checkbox\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      justify: \"center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\",\n        sm: \"6\",\n        md: \"8\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, {\n            class: \"text-h5 text-center\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"로그인\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_form, {\n              onSubmit: _withModifiers($options.doLogin, [\"prevent\"])\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                label: \"아이디(이메일)\",\n                modelValue: $data.email,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n                type: \"email\",\n                \"prepend-icon\": \"mdi-email\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                label: \"비밀번호\",\n                modelValue: $data.password,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n                type: \"password\",\n                \"prepend-icon\": \"mdi-lock\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_checkbox, {\n                modelValue: $data.rememberEmail,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.rememberEmail = $event),\n                label: \"ID 저장\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_checkbox, {\n                modelValue: $data.autoLogin,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.autoLogin = $event),\n                label: \"자동로그인\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_btn, {\n                block: \"\",\n                type: \"submit\",\n                color: \"primary\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"로그인\")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_divider, {\n                class: \"my-4\"\n              }), _createVNode(_component_v_btn, {\n                block: \"\",\n                color: \"warning\",\n                onClick: $options.googleLogin\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"구글 로그인\")]),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_divider, {\n                class: \"my-4\"\n              }), _createVNode(_component_v_list, null, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item, {\n                  onClick: $options.findId\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                    default: _withCtx(() => [_createTextVNode(\"아이디 찾기\")]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_list_item, {\n                  onClick: $options.findPassword\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                    default: _withCtx(() => [_createTextVNode(\"비밀번호 찾기\")]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_list_item, {\n                  onClick: $options.signUp\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                    default: _withCtx(() => [_createTextVNode(\"회원가입\")]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"])]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onSubmit\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","justify","_component_v_col","cols","sm","md","_component_v_card","_component_v_card_title","class","_createTextVNode","_","_component_v_card_text","_component_v_form","onSubmit","_withModifiers","$options","doLogin","_component_v_text_field","label","modelValue","$data","email","_cache","$event","type","required","password","_component_v_checkbox","rememberEmail","autoLogin","_component_v_btn","block","color","_component_v_divider","onClick","googleLogin","_component_v_list","_component_v_list_item","findId","_component_v_list_item_title","findPassword","signUp"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/user/LoginPage.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" sm=\"6\" md=\"8\">\n        <v-card>\n          <v-card-title class=\"text-h5 text-center\">로그인</v-card-title>\n          <v-card-text>\n            <v-form @submit.prevent=\"doLogin\">\n              <v-text-field\n                label=\"아이디(이메일)\"\n                v-model=\"email\"\n                type=\"email\"\n                prepend-icon=\"mdi-email\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"비밀번호\"\n                v-model=\"password\"\n                type=\"password\"\n                prepend-icon=\"mdi-lock\"\n                required\n              ></v-text-field>\n              <v-checkbox\n                v-model=\"rememberEmail\"\n                label=\"ID 저장\"\n              ></v-checkbox>\n              <v-checkbox\n                v-model=\"autoLogin\"\n                label=\"자동로그인\"\n              ></v-checkbox>\n              <v-btn block type=\"submit\" color=\"primary\">로그인</v-btn>\n              <v-divider class=\"my-4\"></v-divider>\n              <v-btn block color=\"warning\" @click=\"googleLogin\">구글 로그인</v-btn>\n              <v-divider class=\"my-4\"></v-divider>\n              <v-list>\n                <v-list-item @click=\"findId\">\n                  <v-list-item-title>아이디 찾기</v-list-item-title>\n                </v-list-item>\n                <v-list-item @click=\"findPassword\">\n                  <v-list-item-title>비밀번호 찾기</v-list-item-title>\n                </v-list-item>\n                <v-list-item @click=\"signUp\">\n                  <v-list-item-title>회원가입</v-list-item-title>\n                </v-list-item>\n              </v-list>\n            </v-form>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      rememberEmail: false,\n      autoLogin: false,\n    };\n  },\n  mounted() {\n    const savedEmail = localStorage.getItem('savedEmail');\n    if (savedEmail) {\n      this.email = savedEmail;\n      this.rememberEmail = true;\n    }\n  },\n  methods: {\n    async doLogin() {\n      try {\n        const loginData = {\n          email: this.email,\n          password: this.password,\n          rememberEmail: this.rememberEmail,\n          autoLogin: this.autoLogin,\n        };\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/user/login`, loginData);\n        console.log('로그인 성공');\n        const token = response.data.result;\n        const decodedToken = jwtDecode(token);\n        const role = decodedToken.role;\n        const userId = decodedToken.userId;\n\n        localStorage.setItem('token', token);\n        localStorage.setItem('role', role);\n        localStorage.setItem('userId', userId);  // user.id 저장\n        localStorage.setItem('email', this.email);  // email 저장\n\n        if (this.rememberEmail) {\n          localStorage.setItem('savedEmail', this.email);  // 이메일 저장\n        } else {\n          localStorage.removeItem('savedEmail');  // 이메일 삭제\n        }\n\n        window.location.href = \"/\";\n      } catch (e) {\n        alert('로그인 실패');\n        console.error(e);\n        const error_message = e.response?.data?.status_message || \"로그인에 실패했습니다.\";\n        alert(error_message);\n      }\n    },\n    googleLogin() {\n      window.location.href = \"/oauth2/authorization/google\";  // 구글 OAuth2 인증 페이지로 리디렉션\n    },\n    findId() {\n      this.$router.push(\"/user/find-id\");\n    },\n    findPassword() {\n      this.$router.push(\"/user/find-password\");\n    },\n    signUp() {\n      this.$router.push(\"/user/create\");\n    },\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}