{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"teen_red_font\"\n}, \"추천\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"thumb\"\n};\nconst _hoisted_4 = {\n  href: \"javascript:void(0)\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"txt\"\n};\nconst _hoisted_7 = {\n  class: \"subject\"\n};\nconst _hoisted_8 = {\n  class: \"name\"\n};\nconst _hoisted_9 = {\n  class: \"text-right\"\n};\nconst _hoisted_10 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      class: \"align-end\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        class: \"font_notrahope\",\n        style: {\n          \"font-size\": \"2.5rem\"\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" 티니키리 서비스가 \"), _hoisted_1, _createTextVNode(\"해요! 👍 \")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        class: \"text-right\"\n      }, {\n        default: _withCtx(() => [this.user.role === `ADMIN` ? (_openBlock(), _createBlock(_component_v_btn, {\n          key: 0\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"강좌 업로드\")]),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 강좌 목록 섹션 \"), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card, {\n        class: \"w-100 py-5 px-5 mb-5\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card_text, {\n          class: \"lectureList\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subject.subjectList, s => {\n            return _openBlock(), _createElementBlock(\"div\", {\n              class: \"item\",\n              key: s.id,\n              onClick: $event => $options.goToDetail(s.id)\n            }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"a\", _hoisted_4, [_createElementVNode(\"img\", {\n              src: s.subjectThumUrl,\n              alt: \"강좌 썸네일\"\n            }, null, 8 /* PROPS */, _hoisted_5)])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", _hoisted_7, _toDisplayString(s.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(s.teacherName), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n              type: \"button\",\n              class: _normalizeClass([\"btn_like\", {\n                'mdi mdi-heart': s.isSubscribe,\n                'mdi mdi-heart-outline': !s.isSubscribe\n              }]),\n              onClick: $event => $options.toggleWish(s.id, $event)\n            }, null, 10 /* CLASS, PROPS */, _hoisted_10)])], 8 /* PROPS */, _hoisted_2);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 페이지네이션 \"), _createVNode(_component_v_pagination, {\n      modelValue: $data.page,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.page = $event),\n      length: $data.totalPages,\n      onInput: $options.performSearch,\n      class: \"my-4\"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"length\", \"onInput\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","href","_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","_component_v_col","style","_createTextVNode","_hoisted_1","_","user","role","_component_v_btn","key","_createCommentVNode","_component_v_card","_component_v_card_text","_createElementBlock","_Fragment","_renderList","$data","subject","subjectList","s","id","onClick","$event","$options","goToDetail","_hoisted_3","_hoisted_4","src","subjectThumUrl","alt","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","title","_hoisted_8","teacherName","_hoisted_9","type","_normalizeClass","isSubscribe","toggleWish","_hoisted_10","_hoisted_2","_component_v_pagination","modelValue","page","_cache","length","totalPages","onInput","performSearch"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/subject/SubjectRecommendList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row class=\"align-end\">\n      <v-col class=\"font_notrahope\" style=\"font-size:2.5rem;\">\n        티니키리 서비스가 <span class=\"teen_red_font\">추천</span>해요! 👍\n      </v-col>\n      <v-col class=\"text-right\">\n        <v-btn v-if=\"this.user.role===`ADMIN`\">강좌 업로드</v-btn>\n      </v-col>\n    </v-row>\n\n    <!-- 강좌 목록 섹션 -->\n    <v-row>\n      <v-card class=\"w-100 py-5 px-5 mb-5\">\n        <v-card-text class=\"lectureList\">\n          <div\n            class=\"item\"\n            v-for=\"s in subject.subjectList\"\n            :key=\"s.id\"\n            @click=\"goToDetail(s.id)\"\n          >\n            <div class=\"thumb\">\n              <a href=\"javascript:void(0)\"\n                ><img v-bind:src=\"s.subjectThumUrl\" alt=\"강좌 썸네일\"\n              /></a>\n            </div>\n            <div class=\"txt\">\n              <p class=\"subject\">{{ s.title }}</p>\n              <p class=\"name\">{{ s.teacherName }}</p>\n            </div>\n            <div class=\"text-right\">\n              <button type=\"button\" \n                class=\"btn_like\" \n                @click=\"toggleWish(s.id, $event)\" \n                :class=\"{ 'mdi mdi-heart': s.isSubscribe, 'mdi mdi-heart-outline': !s.isSubscribe }\">\n              </button>\n            </div>\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-row>\n\n    <!-- 페이지네이션 -->\n    <v-pagination\n      v-model=\"page\"\n      :length=\"totalPages\"\n      @input=\"performSearch\"\n      class=\"my-4\"\n    ></v-pagination>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      user: {},\n      searchType: \"all\",\n      searchOptions: [\n        { text: \"전체\", value: \"all\" },\n        { text: \"강사명\", value: \"userTeacher\" },\n        { text: \"강좌명\", value: \"title\" },\n      ],\n      selectedType: \"latest\", // 최신순 또는 평점순\n      selectedOptions: [\n        { text: \"최신순\", value: \"latest\" },\n        { text: \"평점순\", value: \"like\" },\n      ],\n      searchValue: \"\",\n      subject: {\n        subjectList: [],\n        page: {\n          pageSize: 9,\n          currentPage: 1,\n        },\n      },\n      page: 1,\n      totalPages: 1,\n    };\n  },\n  methods: {\n    onPageChange(page) {\n      this.page = page;\n      this.performSearch();\n    },\n    async performSearch() {\n      try {\n        const params = {\n          size: this.subject.page.pageSize,\n          page: this.page - 1, // MySQL에서의 페이지는 0부터 시작\n        };\n\n        const response = await axios.get(\n          `${process.env.VUE_APP_API_BASE_URL}/subject/main/list`,\n          { params }\n        );\n        this.subject.subjectList = response.data.result.content;\n        this.totalPages = response.data.result.totalPages;\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    goToDetail(id) {\n      this.$router.push({ name: \"SubjectDetail\", params: { id } });\n    },\n    async toggleWish(id) {\n      if (Object.keys(this.user).length > 0) { // 로그인한 유저만 가능\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/wish/toggle/${id}`);\n          const subject = this.subject.subjectList.find((sm) => sm.id === id);\n          if (subject) {\n            subject.isSubscribe = response.data.result.status;\n          }\n        } catch (error) {\n          alert(\"찜 추가 실패\");\n          console.error(error);\n        }\n      } else {\n        alert(\"로그인 후 사용 가능합니다.\");\n      }\n    },\n  },\n  watch: {\n    page() {\n      this.performSearch();\n    },\n    selectedType() {\n      this.performSearch();\n    },\n    searchValue() {\n      this.performSearch();\n    },\n    searchType() {\n      this.performSearch();\n    },\n  },\n  async created() {\n    try {\n      await this.$store.dispatch(\"setUserAllInfoActions\");\n      this.user = this.$store.getters.getUserObj;\n    } catch (error) {\n      console.error(\"사용자 정보를 가져오는 중 오류가 발생했습니다:\", error);\n    }\n    this.performSearch();\n  },\n};\n</script>\n\n<style>\n.select-small .v-select {\n  min-height: 32px;\n  max-height: 32px;\n  font-size: 14px;\n  line-height: 32px;\n}\n\n.v-btn + .v-btn {\n  margin-left: 16px;\n}\n</style>\n"],"mappings":";gCAIkBA,mBAAA,CAAqC;EAA/BC,KAAK,EAAC;AAAe,GAAC,IAAE;mBAJhD;;EAqBiBA,KAAK,EAAC;AAAO;;EACbC,IAAI,EAAC;AAAoB;mBAtB1C;;EA0BiBD,KAAK,EAAC;AAAK;;EACXA,KAAK,EAAC;AAAS;;EACfA,KAAK,EAAC;AAAM;;EAEZA,KAAK,EAAC;AAAY;oBA9BnC;;;;;;;;;uBACEE,YAAA,CAgDcC,sBAAA;IAjDhBC,OAAA,EAAAC,QAAA,CAEI,MAOQ,CAPRC,YAAA,CAOQC,gBAAA;MAPDP,KAAK,EAAC;IAAW;MAF5BI,OAAA,EAAAC,QAAA,CAGM,MAEQ,CAFRC,YAAA,CAEQE,gBAAA;QAFDR,KAAK,EAAC,gBAAgB;QAACS,KAAyB,EAAzB;UAAA;QAAA;;QAHpCL,OAAA,EAAAC,QAAA,CAG8D,MAC5C,CAJlBK,gBAAA,CAG8D,aAC5C,GAAAC,UAAqC,EAJvDD,gBAAA,CAIuD,SACjD,E;QALNE,CAAA;UAMMN,YAAA,CAEQE,gBAAA;QAFDR,KAAK,EAAC;MAAY;QAN/BI,OAAA,EAAAC,QAAA,CAOQ,MAAqD,C,KAAnCQ,IAAI,CAACC,IAAI,gB,cAA3BZ,YAAA,CAAqDa,gBAAA;UAP7DC,GAAA;QAAA;UAAAZ,OAAA,EAAAC,QAAA,CAO+C,MAAM,CAPrDK,gBAAA,CAO+C,QAAM,E;UAPrDE,CAAA;cAAAK,mBAAA,e;QAAAL,CAAA;;MAAAA,CAAA;QAWIK,mBAAA,cAAiB,EACjBX,YAAA,CA4BQC,gBAAA;MAxCZH,OAAA,EAAAC,QAAA,CAaM,MA0BS,CA1BTC,YAAA,CA0BSY,iBAAA;QA1BDlB,KAAK,EAAC;MAAsB;QAb1CI,OAAA,EAAAC,QAAA,CAcQ,MAwBc,CAxBdC,YAAA,CAwBca,sBAAA;UAxBDnB,KAAK,EAAC;QAAa;UAdxCI,OAAA,EAAAC,QAAA,CAiBY,MAAgC,E,kBAFlCe,mBAAA,CAsBMC,SAAA,QArChBC,WAAA,CAiBwBC,KAAA,CAAAC,OAAO,CAACC,WAAW,EAAxBC,CAAC;iCAFVN,mBAAA,CAsBM;cArBJpB,KAAK,EAAC,MAAM;cAEXgB,GAAG,EAAEU,CAAC,CAACC,EAAE;cACTC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACL,CAAC,CAACC,EAAE;gBAEvB5B,mBAAA,CAIM,OAJNiC,UAIM,GAHJjC,mBAAA,CAEM,KAFNkC,UAEM,GADHlC,mBAAA,CACD;cADamC,GAAG,EAAER,CAAC,CAACS,cAAc;cAAEC,GAAG,EAAC;oCAvBxDC,UAAA,E,KA0BYtC,mBAAA,CAGM,OAHNuC,UAGM,GAFJvC,mBAAA,CAAoC,KAApCwC,UAAoC,EAAAC,gBAAA,CAAdd,CAAC,CAACe,KAAK,kBAC7B1C,mBAAA,CAAuC,KAAvC2C,UAAuC,EAAAF,gBAAA,CAApBd,CAAC,CAACiB,WAAW,iB,GAElC5C,mBAAA,CAMM,OANN6C,UAMM,GALJ7C,mBAAA,CAIS;cAJD8C,IAAI,EAAC,QAAQ;cACnB7C,KAAK,EAhCrB8C,eAAA,EAgCsB,UAAU;gBAAA,iBAEWpB,CAAC,CAACqB,WAAW;gBAAA,0BAA4BrB,CAAC,CAACqB;cAAW;cADhFnB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAkB,UAAU,CAACtB,CAAC,CAACC,EAAE,EAAEE,MAAM;4CAjC/CoB,WAAA,E,mBAAAC,UAAA;;UAAAtC,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QA0CIK,mBAAA,YAAe,EACfX,YAAA,CAKgB6C,uBAAA;MAhDpBC,UAAA,EA4Ce7B,KAAA,CAAA8B,IAAI;MA5CnB,uBAAAC,MAAA,QAAAA,MAAA,MAAAzB,MAAA,IA4CeN,KAAA,CAAA8B,IAAI,GAAAxB,MAAA;MACZ0B,MAAM,EAAEhC,KAAA,CAAAiC,UAAU;MAClBC,OAAK,EAAE3B,QAAA,CAAA4B,aAAa;MACrB1D,KAAK,EAAC;;IA/CZY,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}