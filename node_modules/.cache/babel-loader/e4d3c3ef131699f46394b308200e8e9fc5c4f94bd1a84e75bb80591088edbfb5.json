{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      questions: [] // 빈 배열로 초기화\n    };\n  },\n  async created() {\n    await this.loadQuestions();\n  },\n  methods: {\n    async loadQuestions() {\n      try {\n        // API 베이스 URL 설정\n        const apiBaseUrl = process.env.VUE_APP_API_BASE_URL || 'http://localhost:8082';\n        // API 요청\n        const response = await axios.get(`${apiBaseUrl}/qna/my`);\n        // 응답 구조를 콘솔에 출력하여 확인\n        console.log('API Response:', response.data);\n\n        // 응답 데이터의 result 배열을 questions에 할당\n        this.questions = response.data.result || [];\n      } catch (error) {\n        // 오류 발생 시 콘솔에 출력\n        console.error('질문 목록을 가져오는 데 실패했습니다.', error.response ? error.response.data : error.message);\n        // 오류 발생 시 빈 배열로 설정\n        this.questions = [];\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","questions","created","loadQuestions","methods","apiBaseUrl","process","env","VUE_APP_API_BASE_URL","response","get","console","log","result","error","message","formatDate","dateString","date","Date","toLocaleDateString"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/UserQuestions.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>내 질문 목록</h1>\n    <table v-if=\"questions.length\">\n      <thead>\n        <tr>\n          <th>제목</th>\n          <th>작성일</th>\n          <th>답변</th>\n          <th>답변일</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"question in questions\" :key=\"question.id\">\n          <td>\n            <a :href=\"`/qna/detail/${question.id}`\">{{ question.title }}</a>\n          </td>\n          <td>{{ formatDate(question.createdTime) }}</td>\n          <td>{{ question.answerText || '답변 없음' }}</td>\n          <td>{{ formatDate(question.answeredAt) || '답변 없음' }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else>질문이 없습니다.</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      questions: [] // 빈 배열로 초기화\n    };\n  },\n  async created() {\n    await this.loadQuestions();\n  },\n  methods: {\n    async loadQuestions() {\n      try {\n        // API 베이스 URL 설정\n        const apiBaseUrl = process.env.VUE_APP_API_BASE_URL || 'http://localhost:8082';\n        // API 요청\n        const response = await axios.get(`${apiBaseUrl}/qna/my`);\n        // 응답 구조를 콘솔에 출력하여 확인\n        console.log('API Response:', response.data);\n\n        // 응답 데이터의 result 배열을 questions에 할당\n        this.questions = response.data.result || [];\n      } catch (error) {\n        // 오류 발생 시 콘솔에 출력\n        console.error('질문 목록을 가져오는 데 실패했습니다.', error.response ? error.response.data : error.message);\n        // 오류 발생 시 빈 배열로 설정\n        this.questions = [];\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString();\n    }\n  }\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 20px 0;\n}\n\nth, td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\n\nth {\n  background-color: #f4f4f4;\n}\n\ntr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\ntr:hover {\n  background-color: #f1f1f1;\n}\n</style>\n"],"mappings":"AA4BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAC,CAAE;IAChB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,aAAa,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF;QACA,MAAME,UAAS,GAAIC,OAAO,CAACC,GAAG,CAACC,oBAAmB,IAAK,uBAAuB;QAC9E;QACA,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGL,UAAU,SAAS,CAAC;QACxD;QACAM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACT,IAAI,CAAC;;QAE3C;QACA,IAAI,CAACC,SAAQ,GAAIQ,QAAQ,CAACT,IAAI,CAACa,MAAK,IAAK,EAAE;MAC7C,EAAE,OAAOC,KAAK,EAAE;QACd;QACAH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACL,QAAO,GAAIK,KAAK,CAACL,QAAQ,CAACT,IAAG,GAAIc,KAAK,CAACC,OAAO,CAAC;QAC5F;QACA,IAAI,CAACd,SAAQ,GAAI,EAAE;MACrB;IACF,CAAC;IACDe,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;MAC1B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,CAAC;IAClC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}