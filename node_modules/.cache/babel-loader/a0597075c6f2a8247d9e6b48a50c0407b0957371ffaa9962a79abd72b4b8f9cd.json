{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      image: null,\n      category: '' // 현재 게시판 종류\n    };\n  },\n  created() {\n    this.category = this.$route.params.category;\n    console.log('Category:', this.category); // 확인용 로그\n    this.fetchPostDetail(); // 컴포넌트 생성 시 기존 게시글 정보를 로드\n  },\n  methods: {\n    async fetchPostDetail() {\n      try {\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/detail/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/detail/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/detail/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n        const response = await axios.get(apiUrl);\n        const post = response.data.result;\n        this.title = post.title;\n        this.content = post.content;\n      } catch (error) {\n        console.error('게시글을 불러오는 데 실패했습니다:', error);\n        alert('게시글을 불러오는 데 실패했습니다.');\n      }\n    },\n    onFileChange(e) {\n      this.image = e.target.files[0];\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        if (this.image) {\n          formData.append('image', this.image);\n        }\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/update/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/update/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/update/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n        await axios.post(apiUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('게시글이 성공적으로 수정되었습니다.');\n        this.$router.push({\n          name: 'BoardDetail',\n          params: {\n            id: postId,\n            category: this.category\n          }\n        }); // 수정 후 상세 페이지로 이동\n      } catch (error) {\n        console.error('게시글을 수정하는 데 실패했습니다:', error);\n        alert('게시글 수정에 실패했습니다.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","title","content","image","category","created","$route","params","console","log","fetchPostDetail","methods","postId","id","apiUrl","process","env","VUE_APP_API_BASE_URL","Error","response","get","post","result","error","alert","onFileChange","e","target","files","submitForm","formData","FormData","append","headers","$router","push","name"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/board/BoardUpdate.vue"],"sourcesContent":["<template>\n  <div class=\"update-container\">\n    <h1>게시글 수정</h1>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"title\">제목:</label>\n        <input type=\"text\" v-model=\"title\" id=\"title\" required>\n      </div>\n      <div>\n        <label for=\"content\">내용:</label>\n        <textarea v-model=\"content\" id=\"content\" required></textarea>\n      </div>\n      <div>\n        <label for=\"image\">이미지:</label>\n        <input type=\"file\" @change=\"onFileChange\">\n      </div>\n      <button type=\"submit\">저장</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      image: null,\n      category: '', // 현재 게시판 종류\n    };\n  },\n  created() {\n    this.category = this.$route.params.category;\n    console.log('Category:', this.category); // 확인용 로그\n    this.fetchPostDetail(); // 컴포넌트 생성 시 기존 게시글 정보를 로드\n  },\n  methods: {\n    async fetchPostDetail() {\n      try {\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/detail/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/detail/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/detail/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n\n        const response = await axios.get(apiUrl);\n        const post = response.data.result;\n        this.title = post.title;\n        this.content = post.content;\n      } catch (error) {\n        console.error('게시글을 불러오는 데 실패했습니다:', error);\n        alert('게시글을 불러오는 데 실패했습니다.');\n      }\n    },\n    onFileChange(e) {\n      this.image = e.target.files[0];\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        if (this.image) {\n          formData.append('image', this.image);\n        }\n\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/update/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/update/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/update/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n\n        await axios.post(apiUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n\n        alert('게시글이 성공적으로 수정되었습니다.');\n        this.$router.push({ name: 'BoardDetail', params: { id: postId, category: this.category } }); // 수정 후 상세 페이지로 이동\n      } catch (error) {\n        console.error('게시글을 수정하는 데 실패했습니다:', error);\n        alert('게시글 수정에 실패했습니다.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.update-container {\n  width: 80%;\n  margin: 0 auto;\n}\n\nh1 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\nform > div {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n\ninput[type=\"text\"],\ntextarea {\n  width: 100%;\n  padding: 8px;\n  box-sizing: border-box;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}