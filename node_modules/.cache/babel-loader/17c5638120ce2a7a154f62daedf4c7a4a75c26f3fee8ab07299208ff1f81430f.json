{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8e1f8472\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"boardWrap\"\n};\nconst _hoisted_3 = {\n  class: \"inner\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"QnA 질문 등록하기\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"tbl_form\"\n};\nconst _hoisted_6 = {\n  class: \"col\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"subject\",\n  class: \"label\"\n}, \"강좌 선택\", -1 /* HOISTED */));\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = {\n  class: \"col\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\",\n  class: \"label\"\n}, \"제목\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"col\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\",\n  class: \"label\"\n}, \"질문 내용\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"col\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"file\",\n  class: \"label\"\n}, \"질문 이미지 (선택사항)\", -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"filebox\"\n};\nconst _hoisted_16 = [\"value\"];\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"file\"\n}, \"파일찾기\", -1 /* HOISTED */));\nconst _hoisted_18 = [\"src\"];\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"btnWrap\"\n}, [/*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"javascript:void(0)\",\n  class: \"btn_solid\"\n}, \"취소\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn_write\"\n}, \"저장\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.submitQuestion && $options.submitQuestion(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedSubject = $event),\n    class: \"select\",\n    required: \"\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subjects, subject => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: subject.id,\n      value: subject.id\n    }, _toDisplayString(subject.title), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedSubject]])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.questionTitle = $event),\n    class: \"frm_input\",\n    placeholder: \"제목을 입력하세요.\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.questionTitle]])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"content\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.questionText = $event),\n    class: \"frm_textarea\",\n    placeholder: \"내용을 입력하세요.\",\n    style: {\n      \"height\": \"350px\"\n    },\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.questionText]])]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"input\", {\n    class: \"upload-name\",\n    placeholder: \"첨부파일\",\n    readonly: \"\",\n    value: $data.questionImage ? $data.questionImage.name : '첨부파일'\n  }, null, 8 /* PROPS */, _hoisted_16), _hoisted_17, _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), $data.previewImageSrc ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.previewImageSrc,\n    class: \"preview-image\"\n  }, null, 8 /* PROPS */, _hoisted_18)) : _createCommentVNode(\"v-if\", true)]), _hoisted_19], 32 /* NEED_HYDRATION */)])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","href","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","args","$options","submitQuestion","_hoisted_6","_hoisted_7","$event","$data","selectedSubject","required","_Fragment","_renderList","subjects","subject","key","id","value","title","_hoisted_8","_hoisted_9","_hoisted_10","questionTitle","placeholder","_hoisted_11","_hoisted_12","questionText","style","_hoisted_13","_hoisted_14","_hoisted_15","readonly","questionImage","name","_hoisted_16","_hoisted_17","onChange","onFileChange","accept","previewImageSrc","src","_hoisted_18","_createCommentVNode","_hoisted_19"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/CreateQuestion.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"boardWrap\">\n      <div class=\"inner\">\n        <h1>QnA 질문 등록하기</h1>\n        <div class=\"tbl_form\">\n          <form @submit.prevent=\"submitQuestion\">\n            <div class=\"col\">\n              <label for=\"subject\" class=\"label\">강좌 선택</label>\n              <select\n                v-model=\"selectedSubject\"\n                class=\"select\"\n                required\n              >\n                <option v-for=\"subject in subjects\" :key=\"subject.id\" :value=\"subject.id\">\n                  {{ subject.title }}\n                </option>\n              </select>\n            </div>\n\n            <div class=\"col\">\n              <label for=\"title\" class=\"label\">제목</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                v-model=\"questionTitle\"\n                class=\"frm_input\"\n                placeholder=\"제목을 입력하세요.\"\n                required\n              />\n            </div>\n\n            <div class=\"col\">\n              <label for=\"content\" class=\"label\">질문 내용</label>\n              <textarea\n                id=\"content\"\n                v-model=\"questionText\"\n                class=\"frm_textarea\"\n                placeholder=\"내용을 입력하세요.\"\n                style=\"height:350px\"\n                required\n              ></textarea>\n            </div>\n\n            <div class=\"col\">\n              <label for=\"file\" class=\"label\">질문 이미지 (선택사항)</label>\n              <div class=\"filebox\">\n                <input\n                  class=\"upload-name\"\n                  placeholder=\"첨부파일\"\n                  readonly\n                  :value=\"questionImage ? questionImage.name : '첨부파일'\"\n                />\n                <label for=\"file\">파일찾기</label>\n                <input\n                  type=\"file\"\n                  id=\"file\"\n                  @change=\"onFileChange\"\n                  accept=\"image/*\"\n                />\n              </div>\n              <img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" class=\"preview-image\" />\n            </div>\n\n            <div class=\"btnWrap\">\n              <a href=\"javascript:void(0)\" class=\"btn_solid\">취소</a>\n              <button type=\"submit\" class=\"btn_write\">저장</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedSubject: null,\n      subjects: [], // 강좌 목록을 저장할 배열\n      questionTitle: '',\n      questionText: '',\n      questionImage: null,\n      previewImageSrc: null,\n    };\n  },\n  mounted() {\n    this.fetchSubjects(); // 컴포넌트가 마운트될 때 강좌 목록을 불러옵니다.\n  },\n  methods: {\n    async fetchSubjects() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/subject/list`);\n        this.subjects = response.data.result.content; // 강좌 목록을 subjects 배열에 저장\n      } catch (error) {\n        console.error('강좌 목록을 불러오는 중 오류가 발생했습니다:', error);\n        this.subjects = []; // 오류 발생 시 빈 배열로 초기화\n      }\n    },\n    onFileChange(event) {\n      const files = event?.target?.files || event?.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.questionImage = files[0];\n        this.previewImage();\n      } else {\n        this.questionImage = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.questionImage) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.questionImage);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async submitQuestion() {\n      if (!this.selectedSubject) {\n        alert('강좌를 선택해주세요.');\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('title', this.questionTitle);\n      formData.append('questionText', this.questionText);\n      formData.append('subjectId', this.selectedSubject); // 선택한 강좌 ID를 추가\n      if (this.questionImage) {\n        formData.append('image', this.questionImage);\n      }\n\n      try {\n        const response = await axios.post(\n          `${process.env.VUE_APP_API_BASE_URL}/qna/create`,\n          formData,\n          {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n          }\n        );\n        console.log(response);\n        alert('질문이 성공적으로 등록되었습니다!');\n        this.$router.push({ name: 'QnaList' });\n      } catch (error) {\n        const errorMessage =\n          error.response && error.response.data\n            ? error.response.data.message\n            : '질문 등록에 실패했습니다.';\n        alert(errorMessage);\n        console.error('Error details:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  width: 90%;\n  margin: 0 auto;\n  padding-top: 50px;\n}\n\n.inner {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n\n.boardWrap h1 {\n  font-size: 26px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.tbl_form {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.tbl_form .col {\n  margin-bottom: 20px;\n}\n\n.label {\n  display: block;\n  margin-bottom: 10px;\n  font-weight: bold;\n}\n\n.frm_input,\n.frm_textarea,\n.select {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.filebox {\n  display: flex;\n  align-items: center;\n}\n\n.upload-name {\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  margin-right: 10px;\n}\n\n.filebox label {\n  padding: 10px 20px;\n  background-color: #333;\n  color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.filebox label:hover {\n  background-color: #555;\n}\n\n.preview-image {\n  margin-top: 10px;\n  max-width: 100%;\n}\n\n.btnWrap {\n  text-align: right;\n  margin-top: 20px;\n}\n\n.btn_solid,\n.btn_write {\n  padding: 12px 25px;\n  background-color: #333;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 4px;\n  cursor: pointer;\n  display: inline-block;\n}\n\n.btn_write {\n  background-color: #007bff;\n}\n\n.btn_solid:hover,\n.btn_write:hover {\n  background-color: #0056b3;\n}\n\n.btn_solid:hover {\n  background-color: #555;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}