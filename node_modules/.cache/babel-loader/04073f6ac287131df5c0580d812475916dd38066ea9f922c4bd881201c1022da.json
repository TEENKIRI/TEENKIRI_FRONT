{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-410c93df\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"QnA 답변하기\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createCommentVNode(\" 질문자 정보 \"), _createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, {\n            cols: \"6\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_text_field, {\n              label: \"질문자\",\n              modelValue: $data.questionUserNickname,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.questionUserNickname = $event),\n              readonly: \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_col, {\n            cols: \"6\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_text_field, {\n              label: \"질문 날짜\",\n              modelValue: $data.questionDate,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.questionDate = $event),\n              readonly: \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" 질문 내용 \"), _createVNode(_component_v_text_field, {\n          label: \"제목\",\n          modelValue: $data.questionTitle,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.questionTitle = $event),\n          readonly: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_textarea, {\n          label: \"질문 내용\",\n          modelValue: $data.questionText,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.questionText = $event),\n          rows: \"5\",\n          readonly: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 질문 이미지 \"), $data.questionImage ? (_openBlock(), _createBlock(_component_v_img, {\n          key: 0,\n          src: $data.questionImage,\n          alt: \"질문 이미지\",\n          \"max-width\": \"400\",\n          class: \"my-3\"\n        }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 답변 폼 \"), _createVNode(_component_v_form, {\n          onSubmit: _withModifiers($options.submitAnswer, [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_text_field, {\n            label: \"답변자 이메일\",\n            modelValue: $data.answererEmail,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.answererEmail = $event),\n            type: \"email\",\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_textarea, {\n            label: \"답변 내용\",\n            modelValue: $data.answerText,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.answerText = $event),\n            rows: \"5\",\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_file_input, {\n            label: \"답변 이미지 (선택사항)\",\n            modelValue: $data.answerImage,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.answerImage = $event),\n            accept: \"image/*\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_btn, {\n            type: \"submit\",\n            color: \"primary\",\n            class: \"mt-3\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"답변 제출\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onSubmit\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","class","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_","_component_v_card_text","_createCommentVNode","_component_v_row","_component_v_col","cols","_component_v_text_field","label","modelValue","$data","questionUserNickname","_cache","$event","readonly","questionDate","questionTitle","_component_v_textarea","questionText","rows","questionImage","_component_v_img","key","src","alt","_component_v_form","onSubmit","_withModifiers","$options","submitAnswer","answererEmail","type","required","answerText","_component_v_file_input","answerImage","accept","_component_v_btn","color","_createTextVNode"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/CreateAnswer.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card>\n        <v-card-title>\n          <h3>QnA 답변하기</h3>\n        </v-card-title>\n  \n        <v-card-text>\n          <!-- 질문자 정보 -->\n          <v-row>\n            <v-col cols=\"6\">\n              <v-text-field\n                label=\"질문자\"\n                v-model=\"questionUserNickname\"\n                readonly\n              />\n            </v-col>\n            <v-col cols=\"6\">\n              <v-text-field\n                label=\"질문 날짜\"\n                v-model=\"questionDate\"\n                readonly\n              />\n            </v-col>\n          </v-row>\n  \n          <!-- 질문 내용 -->\n          <v-text-field\n            label=\"제목\"\n            v-model=\"questionTitle\"\n            readonly\n          />\n          <v-textarea\n            label=\"질문 내용\"\n            v-model=\"questionText\"\n            rows=\"5\"\n            readonly\n          />\n  \n          <!-- 질문 이미지 -->\n          <v-img\n            v-if=\"questionImage\"\n            :src=\"questionImage\"\n            alt=\"질문 이미지\"\n            max-width=\"400\"\n            class=\"my-3\"\n          ></v-img>\n  \n          <!-- 답변 폼 -->\n          <v-form @submit.prevent=\"submitAnswer\">\n            <v-text-field\n              label=\"답변자 이메일\"\n              v-model=\"answererEmail\"\n              type=\"email\"\n              required\n            />\n            <v-textarea\n              label=\"답변 내용\"\n              v-model=\"answerText\"\n              rows=\"5\"\n              required\n            />\n            <v-file-input\n              label=\"답변 이미지 (선택사항)\"\n              v-model=\"answerImage\"\n              accept=\"image/*\"\n            />\n            <v-btn type=\"submit\" color=\"primary\" class=\"mt-3\">답변 제출</v-btn>\n          </v-form>\n        </v-card-text>\n      </v-card>\n    </v-container>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        // 질문 정보 (상단에 표시)\n        questionUserNickname: \"질문자 닉네임\",\n        questionDate: \"2023-08-12\",\n        questionTitle: \"질문 제목\",\n        questionText: \"질문 내용이 여기에 표시됩니다.\",\n        questionImage: null, // 이미지 URL을 여기에 바인딩\n  \n        // 답변 폼 데이터\n        answererEmail: \"\",\n        answerText: \"\",\n        answerImage: null,\n      };\n    },\n    methods: {\n      submitAnswer() {\n        const formData = new FormData();\n        formData.append(\"answererEmail\", this.answererEmail);\n        formData.append(\"answerText\", this.answerText);\n        if (this.answerImage) {\n          formData.append(\"answerImage\", this.answerImage);\n        }\n  \n        // 백엔드 API에 폼 데이터 전송\n        fetch(`/api/qna/answer/${this.$route.params.id}`, {\n          method: \"POST\",\n          body: formData,\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.status === \"OK\") {\n              alert(\"답변이 성공적으로 제출되었습니다.\");\n            } else {\n              alert(\"답변 제출에 실패했습니다.\");\n            }\n          })\n          .catch((error) => {\n            console.error(\"Error:\", error);\n          });\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 600px;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":";;gEAIUA,mBAAA,CAAiB,YAAb,UAAQ;;;;;;;;;;;;;;uBAHlBC,YAAA,CAsEcC,sBAAA;IAtEDC,KAAK,EAAC;EAAM;IAD7BC,OAAA,EAAAC,QAAA,CAEM,MAoES,CApETC,YAAA,CAoESC,iBAAA;MAtEfH,OAAA,EAAAC,QAAA,CAGQ,MAEe,CAFfC,YAAA,CAEeE,uBAAA;QALvBJ,OAAA,EAAAC,QAAA,CAIU,MAAiB,CAAjBI,UAAiB,C;QAJ3BC,CAAA;UAOQJ,YAAA,CA8DcK,sBAAA;QArEtBP,OAAA,EAAAC,QAAA,CAQU,MAAe,CAAfO,mBAAA,YAAe,EACfN,YAAA,CAeQO,gBAAA;UAxBlBT,OAAA,EAAAC,QAAA,CAUY,MAMQ,CANRC,YAAA,CAMQQ,gBAAA;YANDC,IAAI,EAAC;UAAG;YAV3BX,OAAA,EAAAC,QAAA,CAWc,MAIE,CAJFC,YAAA,CAIEU,uBAAA;cAHAC,KAAK,EAAC,KAAK;cAZ3BC,UAAA,EAayBC,KAAA,CAAAC,oBAAoB;cAb7C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAayBH,KAAA,CAAAC,oBAAoB,GAAAE,MAAA;cAC7BC,QAAQ,EAAR;;YAdhBb,CAAA;cAiBYJ,YAAA,CAMQQ,gBAAA;YANDC,IAAI,EAAC;UAAG;YAjB3BX,OAAA,EAAAC,QAAA,CAkBc,MAIE,CAJFC,YAAA,CAIEU,uBAAA;cAHAC,KAAK,EAAC,OAAO;cAnB7BC,UAAA,EAoByBC,KAAA,CAAAK,YAAY;cApBrC,uBAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoByBH,KAAA,CAAAK,YAAY,GAAAF,MAAA;cACrBC,QAAQ,EAAR;;YArBhBb,CAAA;;UAAAA,CAAA;YA0BUE,mBAAA,WAAc,EACdN,YAAA,CAIEU,uBAAA;UAHAC,KAAK,EAAC,IAAI;UA5BtBC,UAAA,EA6BqBC,KAAA,CAAAM,aAAa;UA7BlC,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA6BqBH,KAAA,CAAAM,aAAa,GAAAH,MAAA;UACtBC,QAAQ,EAAR;iDAEFjB,YAAA,CAKEoB,qBAAA;UAJAT,KAAK,EAAC,OAAO;UAjCzBC,UAAA,EAkCqBC,KAAA,CAAAQ,YAAY;UAlCjC,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAkCqBH,KAAA,CAAAQ,YAAY,GAAAL,MAAA;UACrBM,IAAI,EAAC,GAAG;UACRL,QAAQ,EAAR;iDAGFX,mBAAA,YAAe,EAEPO,KAAA,CAAAU,aAAa,I,cADrB5B,YAAA,CAMS6B,gBAAA;UA9CnBC,GAAA;UA0CaC,GAAG,EAAEb,KAAA,CAAAU,aAAa;UACnBI,GAAG,EAAC,QAAQ;UACZ,WAAS,EAAC,KAAK;UACf9B,KAAK,EAAC;4CA7ClBS,mBAAA,gBAgDUA,mBAAA,UAAa,EACbN,YAAA,CAmBS4B,iBAAA;UAnBAC,QAAM,EAjDzBC,cAAA,CAiDmCC,QAAA,CAAAC,YAAY;;UAjD/ClC,OAAA,EAAAC,QAAA,CAkDY,MAKE,CALFC,YAAA,CAKEU,uBAAA;YAJAC,KAAK,EAAC,SAAS;YAnD7BC,UAAA,EAoDuBC,KAAA,CAAAoB,aAAa;YApDpC,uBAAAlB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoDuBH,KAAA,CAAAoB,aAAa,GAAAjB,MAAA;YACtBkB,IAAI,EAAC,OAAO;YACZC,QAAQ,EAAR;mDAEFnC,YAAA,CAKEoB,qBAAA;YAJAT,KAAK,EAAC,OAAO;YAzD3BC,UAAA,EA0DuBC,KAAA,CAAAuB,UAAU;YA1DjC,uBAAArB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0DuBH,KAAA,CAAAuB,UAAU,GAAApB,MAAA;YACnBM,IAAI,EAAC,GAAG;YACRa,QAAQ,EAAR;mDAEFnC,YAAA,CAIEqC,uBAAA;YAHA1B,KAAK,EAAC,eAAe;YA/DnCC,UAAA,EAgEuBC,KAAA,CAAAyB,WAAW;YAhElC,uBAAAvB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgEuBH,KAAA,CAAAyB,WAAW,GAAAtB,MAAA;YACpBuB,MAAM,EAAC;mDAETvC,YAAA,CAA+DwC,gBAAA;YAAxDN,IAAI,EAAC,QAAQ;YAACO,KAAK,EAAC,SAAS;YAAC5C,KAAK,EAAC;;YAnEvDC,OAAA,EAAAC,QAAA,CAmE8D,MAAK,CAnEnE2C,gBAAA,CAmE8D,OAAK,E;YAnEnEtC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}