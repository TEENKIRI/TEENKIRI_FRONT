{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      questionDetail: null,\n      comments: [],\n      newComment: '',\n      error: null\n    };\n  },\n  created() {\n    this.fetchQuestionDetail();\n    this.fetchComments();\n  },\n  methods: {\n    async fetchQuestionDetail() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n        this.questionDetail = response.data.result;\n        console.log(\"Question Image URL:\", this.questionDetail.qimageUrl); // 이미지 URL을 확인\n        console.log(\"Answer Image URL:\", this.questionDetail.aimageUrl); // 이미지 URL을 확인\n        console.log(response.data); // API 응답을 콘솔에 출력\n      } catch (error) {\n        this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n      }\n    },\n    async fetchComments() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/qna/${questionId}`);\n        this.comments = response.data.result;\n      } catch (error) {\n        this.error = '댓글을 불러오는 중 오류가 발생했습니다.';\n      }\n    },\n    async submitComment() {\n      const questionId = this.$route.params.id;\n      try {\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, {\n          qnaId: questionId,\n          content: this.newComment,\n          userId: localStorage.getItem('userId') // 로그인한 사용자 ID\n        });\n        console.log(response);\n        this.newComment = '';\n        this.fetchComments(); // 댓글 목록 갱신\n      } catch (error) {\n        this.error = '댓글 등록에 실패했습니다.';\n      }\n    },\n    formatDate(date) {\n      if (!date) return '';\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(date).toLocaleDateString('ko-KR', options);\n    },\n    goBack() {\n      this.$router.push('/qna/list');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","questionDetail","comments","newComment","error","created","fetchQuestionDetail","fetchComments","methods","questionId","$route","params","id","response","get","process","env","VUE_APP_API_BASE_URL","result","console","log","qimageUrl","aimageUrl","message","submitComment","post","qnaId","content","userId","localStorage","getItem","formatDate","date","options","year","month","day","hour","minute","Date","toLocaleDateString","goBack","$router","push"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/qna/QnaDetail.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card v-if=\"questionDetail\">\n        <v-card-title>\n          <h3>{{ questionDetail.title }}</h3>\n        </v-card-title>\n  \n        <v-card-text>\n          <v-row>\n            <v-col cols=\"12\">\n              <p><strong>작성자:</strong> {{ questionDetail.questionUserNickname }}</p>\n              <p><strong>작성 시간:</strong> {{ formatDate(questionDetail.createdTime) }}</p>\n              <!-- 질문 이미지 표시 -->\n              <v-img\n                v-if=\"questionDetail.qimageUrl\"\n                :src=\"questionDetail.qimageUrl\"\n                alt=\"질문 이미지\"\n                max-width=\"400\"\n                class=\"my-3\"\n              />\n              <p><strong>질문 내용:</strong></p>\n              <p>{{ questionDetail.questionText }}</p>\n            </v-col>\n  \n            <v-col cols=\"12\" v-if=\"questionDetail.answerText\">\n              <v-divider class=\"my-3\"></v-divider>\n              <p><strong>답변자:</strong> {{ questionDetail.answeredByNickname }}</p>\n              <p><strong>답변 시간:</strong> {{ formatDate(questionDetail.answeredAt) }}</p>\n              <!-- 답변 이미지 표시 -->\n              <v-img\n                v-if=\"questionDetail.aimageUrl\"\n                :src=\"questionDetail.aimageUrl\"\n                alt=\"답변 이미지\"\n                max-width=\"400\"\n                class=\"my-3\"\n              />\n              <p><strong>답변 내용:</strong></p>\n              <p>{{ questionDetail.answerText }}</p>\n            </v-col>\n          </v-row>\n  \n          <!-- 댓글 목록 -->\n          <v-row>\n            <v-col cols=\"12\">\n              <v-divider class=\"my-3\"></v-divider>\n              <h4>댓글</h4>\n              <v-list>\n                <v-list-item v-for=\"comment in comments\" :key=\"comment.id\">\n                  <v-list-item-content>\n                    <v-list-item-title>{{ comment.nickname }} ({{ formatDate(comment.createdTime) }})</v-list-item-title>\n                    <v-list-item-subtitle>{{ comment.content }}</v-list-item-subtitle>\n                  </v-list-item-content>\n                </v-list-item>\n              </v-list>\n  \n              <!-- 댓글 작성 -->\n              <v-form @submit.prevent=\"submitComment\">\n                <v-textarea\n                  label=\"댓글 작성\"\n                  v-model=\"newComment\"\n                  required\n                />\n                <v-btn type=\"submit\" color=\"primary\">댓글 등록</v-btn>\n              </v-form>\n            </v-col>\n          </v-row>\n        </v-card-text>\n  \n        <v-card-actions>\n          <v-btn color=\"primary\" @click=\"goBack\">목록으로 돌아가기</v-btn>\n        </v-card-actions>\n      </v-card>\n  \n      <v-alert type=\"error\" v-else-if=\"error\">\n        {{ error }}\n      </v-alert>\n  \n      <v-progress-circular v-else indeterminate color=\"primary\"></v-progress-circular>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        questionDetail: null,\n        comments: [],\n        newComment: '',\n        error: null,\n      };\n    },\n    created() {\n      this.fetchQuestionDetail();\n      this.fetchComments();\n    },\n    methods: {\n      async fetchQuestionDetail() {\n        const questionId = this.$route.params.id;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/qna/detail/${questionId}`);\n          this.questionDetail = response.data.result;\n          console.log(\"Question Image URL:\", this.questionDetail.qimageUrl); // 이미지 URL을 확인\n          console.log(\"Answer Image URL:\", this.questionDetail.aimageUrl);   // 이미지 URL을 확인\n          console.log(response.data); // API 응답을 콘솔에 출력\n        } catch (error) {\n          this.error = error.response ? error.response.data.message : '질문 정보를 불러오는 중 오류가 발생했습니다.';\n        }\n      },\n      async fetchComments() {\n        const questionId = this.$route.params.id;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/comment/qna/${questionId}`);\n          this.comments = response.data.result;\n        } catch (error) {\n          this.error = '댓글을 불러오는 중 오류가 발생했습니다.';\n        }\n      },\n      async submitComment() {\n        const questionId = this.$route.params.id;\n        try {\n          const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/comment/create`, {\n            qnaId: questionId,\n            content: this.newComment,\n            userId: localStorage.getItem('userId') // 로그인한 사용자 ID\n          });\n          console.log(response)\n          this.newComment = '';\n          this.fetchComments(); // 댓글 목록 갱신\n        } catch (error) {\n          this.error = '댓글 등록에 실패했습니다.';\n        }\n      },\n      formatDate(date) {\n        if (!date) return '';\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      },\n      goBack() {\n        this.$router.push('/qna/list');\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  .my-3 {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}