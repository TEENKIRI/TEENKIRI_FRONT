{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"QnAList\",\n  data() {\n    return {\n      qnaList: [] // 초기값은 빈 배열\n    };\n  },\n  async mounted() {\n    await this.fetchQnAList(); // 컴포넌트가 마운트될 때 Q&A 리스트를 불러옵니다.\n  },\n  methods: {\n    async fetchQnAList() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/qna`);\n        console.log(response.data);\n        if (response.status === 200) {\n          this.qnaList = response.data.result; // 응답 데이터에서 Q&A 리스트를 추출\n        } else {\n          console.error('Q&A 리스트 가져오기 실패:', response.data.message || response.statusText);\n        }\n      } catch (error) {\n        console.error('Q&A 리스트 가져오기 중 오류 발생:', error.response ? error.response.data.message : error.message);\n      }\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleString();\n    },\n    viewDetails(id) {\n      this.$router.push(`/qna/detail/${id}`); // ID를 포함한 상세 페이지 URL로 이동\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","qnaList","mounted","fetchQnAList","methods","response","get","process","env","VUE_APP_API_BASE_URL","console","log","status","result","error","message","statusText","formatDate","dateString","Date","toLocaleString","viewDetails","id","$router","push"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/user/myQnAListPage.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row class=\"qna-header\">\n      <v-col>\n        <h1 class=\"mb-4\">내 질문 목록</h1>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col\n        v-for=\"item in qnaList\"\n        :key=\"item.id\"\n        cols=\"12\" sm=\"6\" md=\"4\"\n      >\n        <v-card class=\"qna-card ma-4\" :elevation=\"6\">\n          <v-card-title class=\"title\">{{ item.title }}</v-card-title>\n          <v-card-subtitle class=\"subtitle\">\n            작성일: {{ formatDate(item.createdTime) }}\n          </v-card-subtitle>\n          <v-card-subtitle v-if=\"item.answeredAt\" class=\"subtitle\">\n            답변일: {{ formatDate(item.answeredAt) }}\n          </v-card-subtitle>\n          <v-card-actions>\n            <v-btn @click=\"viewDetails(item.id)\" color=\"primary\" class=\"view-btn\">\n              내 질문 보러가기\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"QnAList\",\n  data() {\n    return {\n      qnaList: [] // 초기값은 빈 배열\n    };\n  },\n  async mounted() {\n    await this.fetchQnAList(); // 컴포넌트가 마운트될 때 Q&A 리스트를 불러옵니다.\n  },\n  methods: {\n    async fetchQnAList() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/qna`);\n        console.log(response.data);\n        if (response.status === 200) {\n          this.qnaList = response.data.result; // 응답 데이터에서 Q&A 리스트를 추출\n        } else {\n          console.error('Q&A 리스트 가져오기 실패:', response.data.message || response.statusText);\n        }\n      } catch (error) {\n        console.error('Q&A 리스트 가져오기 중 오류 발생:', error.response ? error.response.data.message : error.message);\n      }\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleString();\n    },\n    viewDetails(id) {\n      this.$router.push(`/qna/detail/${id}`); // ID를 포함한 상세 페이지 URL로 이동\n    }\n  }\n};\n</script>\n\n<style scoped>\n.qna-header {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.qna-card {\n  max-width: 400px;\n  margin: auto;\n  border-radius: 10px;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.qna-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);\n}\n\n.v-card-title.title {\n  font-weight: bold;\n  font-size: 20px;\n  color: #333;\n}\n\n.v-card-subtitle.subtitle {\n  color: #757575;\n  font-size: 14px;\n}\n\n.v-btn.view-btn {\n  background-color: #1976d2;\n  color: white;\n  width: 100%;\n  padding: 10px 0;\n  border-radius: 5px;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n.v-btn.view-btn:hover {\n  background-color: #1565c0;\n}\n\n.v-btn {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AAiCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAC,CAAE;IACd,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EAC7B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,WAAW,CAAC;QAChFC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACL,IAAI,CAAC;QAC1B,IAAIK,QAAQ,CAACO,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACX,OAAM,GAAII,QAAQ,CAACL,IAAI,CAACa,MAAM,EAAE;QACvC,OAAO;UACLH,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAET,QAAQ,CAACL,IAAI,CAACe,OAAM,IAAKV,QAAQ,CAACW,UAAU,CAAC;QACjF;MACF,EAAE,OAAOF,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACT,QAAO,GAAIS,KAAK,CAACT,QAAQ,CAACL,IAAI,CAACe,OAAM,GAAID,KAAK,CAACC,OAAO,CAAC;MACtG;IACF,CAAC;IACDE,UAAUA,CAACC,UAAU,EAAE;MACrB,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,cAAc,CAAC,CAAC;IAC9C,CAAC;IACDC,WAAWA,CAACC,EAAE,EAAE;MACd,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAeF,EAAE,EAAE,CAAC,EAAE;IAC1C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}