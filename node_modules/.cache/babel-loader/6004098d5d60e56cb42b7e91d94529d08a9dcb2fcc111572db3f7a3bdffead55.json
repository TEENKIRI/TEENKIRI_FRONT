{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport axios from 'axios';\nexport default {\n  name: 'HeaderComponent',\n  data() {\n    return {\n      logo: require('@/assets/images/ico_logo.png'),\n      isLogin: false,\n      isAdmin: false,\n      notifications: []\n    };\n  },\n  computed: {\n    unreadNotificationsCount() {\n      return this.notifications.filter(notification => notification.delYN === 'N').length;\n    },\n    sortedNotifications() {\n      return this.notifications.filter(notification => notification.delYN === 'N').sort((a, b) => new Date(b.createdTime) - new Date(a.createdTime));\n    }\n  },\n  mounted() {\n    const token = localStorage.getItem('token');\n    this.isLogin = !!token;\n    if (this.isLogin) {\n      this.isAdmin = localStorage.getItem('role') === 'ADMIN';\n      this.fetchNotifications();\n      const eventSource = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/subscribe`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      eventSource.addEventListener('notification', event => {\n        const notification = JSON.parse(event.data);\n        this.notifications.push(notification);\n      });\n      eventSource.onerror = error => {\n        console.error('SSE 연결 오류:', error);\n      };\n    }\n  },\n  methods: {\n    async fetchNotifications() {\n      if (this.isLogin) {\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/list`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          this.notifications = response.data;\n        } catch (error) {\n          console.error('알림 목록을 가져오는 중 오류 발생:', error);\n        }\n      }\n    },\n    async markAsReadAndNavigate(notification, index) {\n      if (notification.delYN === 'N') {\n        try {\n          const id = notification.id;\n          await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/update/${id}`, null, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          this.notifications[index].delYN = 'Y';\n          if (notification.postId) {\n            window.location.href = `/board/detail/post/${notification.postId}`;\n          } else if (notification.qnaId) {\n            window.location.href = `/qna/detail/${notification.qnaId}`;\n          } else if (notification.reportId) {\n            window.location.href = `/report/list`;\n          } else {\n            console.log('error!!!!!!!!!!!');\n          }\n        } catch (error) {\n          console.error('알림을 읽음으로 표시하는 중 오류 발생:', error);\n        }\n      }\n    },\n    navigate(section) {\n      if (section === '강좌') {\n        this.$router.push({\n          name: 'SubjectList',\n          params: {\n            category: 'subject'\n          }\n        });\n      } else if (section === '추천') {\n        this.$router.push({\n          name: 'SubjectRecommendList',\n          params: {\n            category: 'subjectRecommend'\n          }\n        });\n      } else if (section === '이벤트') {\n        this.$router.push({\n          name: 'BoardList',\n          params: {\n            category: 'event'\n          }\n        });\n      } else if (section === '공지사항') {\n        this.$router.push({\n          name: 'BoardList',\n          params: {\n            category: 'notice'\n          }\n        });\n      } else if (section === '자유게시판') {\n        this.$router.push({\n          name: 'BoardList',\n          params: {\n            category: 'post'\n          }\n        });\n      } else if (section === 'QnA') {\n        this.$router.push({\n          name: 'QnaList',\n          params: {\n            category: 'qna'\n          }\n        });\n      } else if (section === '신고리스트') {\n        if (this.isAdmin) {\n          this.$router.push({\n            name: 'ReportList',\n            params: {\n              category: 'report'\n            }\n          });\n        } else {\n          console.log('관리자만 접근할 수 있습니다.');\n        }\n      } else {\n        console.log(section);\n      }\n    },\n    goToMember() {\n      if (this.isLogin) {\n        this.$router.push('/user/edit-info');\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    handleAccountClick() {\n      if (this.isLogin) {\n        this.$emit('open-sidebar');\n      } else {\n        alert(\"로그인 후 사용이 가능합니다.\");\n        this.$router.push('/login');\n      }\n    }\n  }\n};","map":{"version":3,"names":["EventSourcePolyfill","axios","name","data","logo","require","isLogin","isAdmin","notifications","computed","unreadNotificationsCount","filter","notification","delYN","length","sortedNotifications","sort","a","b","Date","createdTime","mounted","token","localStorage","getItem","fetchNotifications","eventSource","process","env","VUE_APP_API_BASE_URL","headers","Authorization","addEventListener","event","JSON","parse","push","onerror","error","console","methods","response","get","markAsReadAndNavigate","index","id","postId","window","location","href","qnaId","reportId","log","navigate","section","$router","params","category","goToMember","handleAccountClick","$emit","alert"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/components/HeaderComponent.vue"],"sourcesContent":["<template>\n  <v-app-bar app>\n    <v-container>\n      <v-row align=\"center\">\n        <v-col cols=\"3\">\n          <v-toolbar-title>\n            <router-link to=\"/\" class=\"logo\">\n              <img :src=\"logo\" alt=\"로고\" class=\"logo-image\" />\n            </router-link>\n          </v-toolbar-title>\n        </v-col>\n        <v-col cols=\"6\">\n          <v-row justify=\"center\">\n            <v-btn text @click=\"navigate('강좌')\">강좌</v-btn>\n            <v-btn text @click=\"navigate('추천')\">추천</v-btn>\n            <v-btn text @click=\"navigate('이벤트')\">이벤트</v-btn>\n            <v-btn text @click=\"navigate('공지사항')\">공지사항</v-btn>\n            <v-btn text @click=\"navigate('자유게시판')\">자유게시판</v-btn>\n            <v-btn text @click=\"navigate('QnA')\">질문게시판</v-btn>\n            <v-btn v-if=\"isAdmin\" text @click=\"navigate('신고리스트')\">신고리스트</v-btn>\n          </v-row>\n        </v-col>\n        <v-col cols=\"3\" class=\"text-right\">\n          <v-btn icon @click=\"handleAccountClick\">\n            <v-icon>mdi-account</v-icon>\n          </v-btn>\n          <v-btn icon color=\"primary\">\n            <v-badge\n              color=\"red\"\n              :content=\"unreadNotificationsCount\"\n              overlap\n              v-if=\"unreadNotificationsCount > 0\"\n            >\n              <v-icon>mdi-bell</v-icon>\n            </v-badge>\n            <v-icon v-else>mdi-bell</v-icon>\n\n            <v-menu activator=\"parent\" offset-y>\n              <v-list max-width=\"300\" max-height=\"400\" style=\"overflow-y: auto;\">\n                <template v-if=\"sortedNotifications.length > 0\">\n                  <v-list-item\n                    v-for=\"(notification, index) in sortedNotifications\"\n                    :key=\"index\"\n                    :class=\"{'unread-notification': notification.delYN === 'N'}\"\n                    @click=\"markAsReadAndNavigate(notification, index)\"\n                  >\n                    <v-list-item-content>\n                      <v-list-item-title>{{ notification.message }}</v-list-item-title>\n                    </v-list-item-content>\n                  </v-list-item>\n                </template>\n                <template v-else>\n                  <v-list-item>\n                    <v-list-item-content>\n                      <v-list-item-title>알림이 없습니다</v-list-item-title>\n                    </v-list-item-content>\n                  </v-list-item>\n                </template>\n              </v-list>\n            </v-menu>\n          </v-btn>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-app-bar>\n</template>\n\n<script>\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport axios from 'axios';\n\nexport default {\n  name: 'HeaderComponent',\n  data() {\n    return {\n      logo: require('@/assets/images/ico_logo.png'),\n      isLogin: false,\n      isAdmin: false,\n      notifications: [],\n    };\n  },\n  computed: {\n    unreadNotificationsCount() {\n      return this.notifications.filter(notification => notification.delYN === 'N').length;\n    },\n    sortedNotifications() {\n      return this.notifications\n        .filter(notification => notification.delYN === 'N')\n        .sort((a, b) => new Date(b.createdTime) - new Date(a.createdTime));\n    }\n  },\n  mounted() {\n    const token = localStorage.getItem('token');\n    this.isLogin = !!token;\n\n    if (this.isLogin) {\n      this.isAdmin = localStorage.getItem('role') === 'ADMIN';\n      this.fetchNotifications();\n\n      const eventSource = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/subscribe`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      eventSource.addEventListener('notification', (event) => {\n        const notification = JSON.parse(event.data);\n        this.notifications.push(notification);\n      });\n\n      eventSource.onerror = (error) => {\n        console.error('SSE 연결 오류:', error);\n      };\n    }\n  },\n  methods: {\n    async fetchNotifications() {\n      if (this.isLogin) {\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/list`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n\n          this.notifications = response.data;\n        } catch (error) {\n          console.error('알림 목록을 가져오는 중 오류 발생:', error);\n        }\n      }\n    },\n    async markAsReadAndNavigate(notification, index) {\n      if (notification.delYN === 'N') {\n        try {\n          const id = notification.id;\n          await axios.get(`${process.env.VUE_APP_API_BASE_URL}/api/notifications/update/${id}`, null, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n          this.notifications[index].delYN = 'Y';\n\n          if (notification.postId) {\n            window.location.href = `/board/detail/post/${notification.postId}`;\n          } else if (notification.qnaId) {\n            window.location.href = `/qna/detail/${notification.qnaId}`;\n          } else if (notification.reportId) {\n            window.location.href = `/report/list`;\n          } else {\n            console.log('error!!!!!!!!!!!');\n          }\n        } catch (error) {\n          console.error('알림을 읽음으로 표시하는 중 오류 발생:', error);\n        }\n      }\n    },\n    navigate(section) {\n      if (section === '강좌') {\n        this.$router.push({ name: 'SubjectList', params: { category: 'subject' } });\n      } else if (section === '추천') {\n        this.$router.push({ name: 'SubjectRecommendList', params: { category: 'subjectRecommend' } });\n      } else if (section === '이벤트') {\n        this.$router.push({ name: 'BoardList', params: { category: 'event' } });\n      } else if (section === '공지사항') {\n        this.$router.push({ name: 'BoardList', params: { category: 'notice' } });\n      } else if (section === '자유게시판') {\n        this.$router.push({ name: 'BoardList', params: { category: 'post' } });\n      } else if (section === 'QnA') {\n        this.$router.push({ name: 'QnaList', params: { category: 'qna' } });\n      } else if (section === '신고리스트') {\n        if (this.isAdmin) {\n          this.$router.push({ name: 'ReportList', params: { category: 'report' } });\n        } else {\n          console.log('관리자만 접근할 수 있습니다.');\n        }\n      } else {\n        console.log(section);\n      }\n    },\n    goToMember() {\n      if (this.isLogin) {\n        this.$router.push('/user/edit-info');\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    handleAccountClick() {\n      if (this.isLogin) {\n        this.$emit('open-sidebar');\n      } else {\n        alert(\"로그인 후 사용이 가능합니다.\");\n        this.$router.push('/login');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.logo {\n  font-weight: bold;\n  color: inherit;\n  text-decoration: none;\n}\n\n.logo-image {\n  height: 10%;\n}\n\n.unread-notification {\n  background-color: white;\n}\n\n.v-list-item {\n  background-color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}