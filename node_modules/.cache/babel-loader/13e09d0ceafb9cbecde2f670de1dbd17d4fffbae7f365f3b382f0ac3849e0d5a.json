{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      formData: {\n        title: '',\n        questionText: '',\n        qImage: null\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formData = new FormData();\n      formData.append('title', this.formData.title);\n      formData.append('questionText', this.formData.questionText);\n      if (this.formData.qImage) {\n        formData.append('image', this.formData.qImage);\n      }\n      try {\n        const response = await axios.post('/api/create', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('Question created successfully!');\n      } catch (error) {\n        alert('Failed to create question');\n        console.error(error, response.e);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","formData","title","questionText","qImage","methods","submitForm","FormData","append","response","post","headers","alert","error","console","e"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/CreateQuestion.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-form ref=\"form\" @submit.prevent=\"submitForm\">\n      <v-text-field\n        v-model=\"formData.title\"\n        label=\"Title\"\n        required\n      ></v-text-field>\n\n      <v-textarea\n        v-model=\"formData.questionText\"\n        label=\"Question\"\n        required\n      ></v-textarea>\n\n      <v-file-input\n        v-model=\"formData.qImage\"\n        label=\"Upload Image\"\n        accept=\"image/*\"\n      ></v-file-input>\n\n      <v-btn color=\"primary\" type=\"submit\">Submit</v-btn>\n    </v-form>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      formData: {\n        title: '',\n        questionText: '',\n        qImage: null,\n      },\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formData = new FormData();\n      formData.append('title', this.formData.title);\n      formData.append('questionText', this.formData.questionText);\n      if (this.formData.qImage) {\n        formData.append('image', this.formData.qImage);\n      }\n\n      try {\n        const response = await axios.post('/api/create', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n        alert('Question created successfully!');\n      } catch (error) {\n        alert('Failed to create question');\n        console.error(error, response.e);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding-top: 50px;\n}\n</style>\n"],"mappings":"AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE;MACV;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAML,QAAO,GAAI,IAAIM,QAAQ,CAAC,CAAC;MAC/BN,QAAQ,CAACO,MAAM,CAAC,OAAO,EAAE,IAAI,CAACP,QAAQ,CAACC,KAAK,CAAC;MAC7CD,QAAQ,CAACO,MAAM,CAAC,cAAc,EAAE,IAAI,CAACP,QAAQ,CAACE,YAAY,CAAC;MAC3D,IAAI,IAAI,CAACF,QAAQ,CAACG,MAAM,EAAE;QACxBH,QAAQ,CAACO,MAAM,CAAC,OAAO,EAAE,IAAI,CAACP,QAAQ,CAACG,MAAM,CAAC;MAChD;MAEA,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,aAAa,EAAET,QAAQ,EAAE;UACzDU,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFC,KAAK,CAAC,gCAAgC,CAAC;MACzC,EAAE,OAAOC,KAAK,EAAE;QACdD,KAAK,CAAC,2BAA2B,CAAC;QAClCE,OAAO,CAACD,KAAK,CAACA,KAAK,EAAEJ,QAAQ,CAACM,CAAC,CAAC;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}