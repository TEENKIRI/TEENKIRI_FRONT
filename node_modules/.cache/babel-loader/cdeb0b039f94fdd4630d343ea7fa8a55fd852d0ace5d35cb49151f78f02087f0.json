{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3f11768f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"게시글 작성\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\",\n          onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 게시판 종류 \"), _createVNode(_component_v_select, {\n            modelValue: $data.category,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.category = $event),\n            items: $data.availableCategory,\n            \"item-value\": \"value\",\n            \"item-text\": \"text\",\n            label: \"게시판 종류\",\n            required: \"\",\n            outlined: \"\",\n            dense: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createCommentVNode(\" 제목 \"), _createVNode(_component_v_text_field, {\n            label: \"제목\",\n            modelValue: $data.title,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.title = $event),\n            required: \"\",\n            outlined: \"\",\n            dense: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 내용 \"), _createVNode(_component_v_textarea, {\n            label: \"내용\",\n            modelValue: $data.content,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.content = $event),\n            rows: \"5\",\n            required: \"\",\n            outlined: \"\",\n            dense: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 이미지 선택 \"), _createVNode(_component_v_file_input, {\n            onChange: $options.onFileChange,\n            label: \"이미지 선택\",\n            accept: \"image/*\",\n            outlined: \"\",\n            dense: \"\"\n          }, null, 8 /* PROPS */, [\"onChange\"]), _createCommentVNode(\" 미리보기 이미지 \"), $data.previewImageSrc ? (_openBlock(), _createBlock(_component_v_img, {\n            key: 0,\n            src: $data.previewImageSrc,\n            \"max-width\": \"200\",\n            class: \"my-3\"\n          }, null, 8 /* PROPS */, [\"src\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n            type: \"submit\",\n            color: \"primary\",\n            class: \"mt-3\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"저장\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onSubmit\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","class","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_","_component_v_card_text","_component_v_form","ref","onSubmit","_withModifiers","$options","submitForm","_createCommentVNode","_component_v_select","modelValue","$data","category","_cache","$event","items","availableCategory","label","required","outlined","dense","_component_v_text_field","title","_component_v_textarea","content","rows","_component_v_file_input","onChange","onFileChange","accept","previewImageSrc","_component_v_img","key","src","_component_v_btn","type","color","_createTextVNode"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/board/BoardCreate.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card>\n      <v-card-title>\n        <h3>게시글 작성</h3>\n      </v-card-title>\n\n      <v-card-text>\n        <v-form ref=\"form\" @submit.prevent=\"submitForm\">\n          <!-- 게시판 종류 -->\n          <v-select\n            v-model=\"category\"\n            :items=\"availableCategory\"\n            item-value=\"value\"\n            item-text=\"text\"\n            label=\"게시판 종류\"\n            required\n            outlined\n            dense\n          ></v-select>\n\n          <!-- 제목 -->\n          <v-text-field\n            label=\"제목\"\n            v-model=\"title\"\n            required\n            outlined\n            dense\n          />\n\n          <!-- 내용 -->\n          <v-textarea\n            label=\"내용\"\n            v-model=\"content\"\n            rows=\"5\"\n            required\n            outlined\n            dense\n          />\n\n          <!-- 이미지 선택 -->\n          <v-file-input\n            @change=\"onFileChange\"\n            label=\"이미지 선택\"\n            accept=\"image/*\"\n            outlined\n            dense\n          />\n\n          <!-- 미리보기 이미지 -->\n          <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" class=\"my-3\"/>\n\n          <v-btn type=\"submit\" color=\"primary\" class=\"mt-3\">저장</v-btn>\n        </v-form>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      image: null,\n      previewImageSrc: null,\n      category: 'post', // 기본 게시판 종류\n      availableCategory: [], // 선택 가능한 게시판 종류\n    };\n  },\n  created() {\n    this.setAvailableCategory(); // 컴포넌트가 생성될 때 선택 가능한 게시판 종류를 설정\n  },\n  methods: {\n    setAvailableCategory() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('로그인이 필요합니다.');\n        this.$router.push('/login');\n        return;\n      }\n\n      const decodedToken = this.parseJwt(token);\n      const role = decodedToken.role;\n\n      if (role === 'ADMIN') {\n        this.availableCategory = [\n          { value: 'event', text: '이벤트' },\n          { value: 'notice', text: '공지' },\n          { value: 'post', text: '자유게시판' },\n        ];\n      } else {\n        this.availableCategory = [\n          { value: 'post', text: '자유게시판' },\n        ];\n      }\n    },\n    parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(\n          atob(base64)\n            .split('')\n            .map(function (c) {\n              return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n        );\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    },\n    onFileChange(event) {\n      const files = event?.target?.files || event?.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.image = files[0];\n        this.previewImage();\n      } else {\n        this.image = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.image) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.image);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async submitForm() {\n      // 토큰 확인 및 관리자 여부 체크\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('로그인이 필요합니다.');\n        return;\n      }\n\n      const decodedToken = this.parseJwt(token);\n      if (decodedToken.role !== 'ADMIN' && this.category !== 'post') {\n        alert('관리자만 공지와 이벤트 게시글을 작성할 수 있습니다.');\n        return;\n      }\n\n      // 폼 데이터 생성\n      const formData = new FormData();\n      formData.append('title', this.title);\n      formData.append('content', this.content);\n      formData.append('category', this.category); // 게시판 종류 추가\n      if (this.image) {\n        formData.append('image', this.image);\n      }\n\n      try {\n        let apiUrl = '';\n        switch (this.category) {\n          case 'event':\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/create`;\n            break;\n          case 'notice':\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/create`;\n            break;\n          case 'post':\n          default:\n            apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/create`;\n            break;\n        }\n\n        // 서버로 POST 요청 보내기\n        const response = await axios.post(apiUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${token}`, // 토큰을 헤더에 추가\n          },\n        });\n        console.log('저장 성공:', response.data);\n\n        // 저장 후 적절한 게시판으로 이동\n        this.$router.push({ name: 'BoardList', params: { category: this.category } });\n      } catch (error) {\n        if (error.response) {\n          console.error('저장 실패:', error.response.data);\n        } else {\n          console.error('저장 실패: 서버와의 통신에 실패했습니다.');\n        }\n        alert('게시글 저장에 실패했습니다.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 600px;\n  margin: auto;\n}\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n"],"mappings":";;gEAIQA,mBAAA,CAAe,YAAX,QAAM;;;;;;;;;;;;;uBAHhBC,YAAA,CAuDcC,sBAAA;IAvDDC,KAAK,EAAC;EAAM;IAD3BC,OAAA,EAAAC,QAAA,CAEI,MAqDS,CArDTC,YAAA,CAqDSC,iBAAA;MAvDbH,OAAA,EAAAC,QAAA,CAGM,MAEe,CAFfC,YAAA,CAEeE,uBAAA;QALrBJ,OAAA,EAAAC,QAAA,CAIQ,MAAe,CAAfI,UAAe,C;QAJvBC,CAAA;UAOMJ,YAAA,CA+CcK,sBAAA;QAtDpBP,OAAA,EAAAC,QAAA,CAQQ,MA6CS,CA7CTC,YAAA,CA6CSM,iBAAA;UA7CDC,GAAG,EAAC,MAAM;UAAEC,QAAM,EARlCC,cAAA,CAQ4CC,QAAA,CAAAC,UAAU;;UARtDb,OAAA,EAAAC,QAAA,CASU,MAAe,CAAfa,mBAAA,YAAe,EACfZ,YAAA,CASYa,mBAAA;YAnBtBC,UAAA,EAWqBC,KAAA,CAAAC,QAAQ;YAX7B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWqBH,KAAA,CAAAC,QAAQ,GAAAE,MAAA;YAChBC,KAAK,EAAEJ,KAAA,CAAAK,iBAAiB;YACzB,YAAU,EAAC,OAAO;YAClB,WAAS,EAAC,MAAM;YAChBC,KAAK,EAAC,QAAQ;YACdC,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR,EAAQ;YACRC,KAAK,EAAL;4DAGFZ,mBAAA,QAAW,EACXZ,YAAA,CAMEyB,uBAAA;YALAJ,KAAK,EAAC,IAAI;YAvBtBP,UAAA,EAwBqBC,KAAA,CAAAW,KAAK;YAxB1B,uBAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAwBqBH,KAAA,CAAAW,KAAK,GAAAR,MAAA;YACdI,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR,EAAQ;YACRC,KAAK,EAAL;mDAGFZ,mBAAA,QAAW,EACXZ,YAAA,CAOE2B,qBAAA;YANAN,KAAK,EAAC,IAAI;YAhCtBP,UAAA,EAiCqBC,KAAA,CAAAa,OAAO;YAjC5B,uBAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiCqBH,KAAA,CAAAa,OAAO,GAAAV,MAAA;YAChBW,IAAI,EAAC,GAAG;YACRP,QAAQ,EAAR,EAAQ;YACRC,QAAQ,EAAR,EAAQ;YACRC,KAAK,EAAL;mDAGFZ,mBAAA,YAAe,EACfZ,YAAA,CAME8B,uBAAA;YALCC,QAAM,EAAErB,QAAA,CAAAsB,YAAY;YACrBX,KAAK,EAAC,QAAQ;YACdY,MAAM,EAAC,SAAS;YAChBV,QAAQ,EAAR,EAAQ;YACRC,KAAK,EAAL;iDAGFZ,mBAAA,cAAiB,EACJG,KAAA,CAAAmB,eAAe,I,cAA5BvC,YAAA,CAAmFwC,gBAAA;YAlD7FC,GAAA;YAkDyCC,GAAG,EAAEtB,KAAA,CAAAmB,eAAe;YAAE,WAAS,EAAC,KAAK;YAACrC,KAAK,EAAC;8CAlDrFe,mBAAA,gBAoDUZ,YAAA,CAA4DsC,gBAAA;YAArDC,IAAI,EAAC,QAAQ;YAACC,KAAK,EAAC,SAAS;YAAC3C,KAAK,EAAC;;YApDrDC,OAAA,EAAAC,QAAA,CAoD4D,MAAE,CApD9D0C,gBAAA,CAoD4D,IAAE,E;YApD9DrC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}