{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-439adaa3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"신고 목록\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_spacer), _createVNode(_component_v_select, {\n          modelValue: $data.selectedType,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedType = $event),\n          items: $data.types,\n          \"item-text\": \"text\",\n          \"<!--\": \"\",\n          text로: \"\",\n          사용할: \"\",\n          항목을: \"\",\n          명시적으로: \"\",\n          지정: \"\",\n          \"--\": \"\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" item-value=\\\"value\\\" \"), _createCommentVNode(\" value로 사용할 항목을 명시적으로 지정 \"), _createTextVNode(\" label=\\\"신고 유형 필터\\\" @change=\\\"fetchReports\\\" >\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_data_table, {\n          headers: $data.headers,\n          items: $data.reports,\n          \"items-per-page\": 10,\n          class: \"elevation-1\",\n          loading: $data.loading\n        }, {\n          [`item.createdTime`]: _withCtx(({\n            item\n          }) => [_createTextVNode(_toDisplayString($options.formatDate(item.createdTime)), 1 /* TEXT */)]),\n          [`item.reason`]: _withCtx(({\n            item\n          }) => [_createTextVNode(_toDisplayString($options.formatReason(item.reason)), 1 /* TEXT */)]),\n          [`item.details`]: _withCtx(({\n            item\n          }) => [_createTextVNode(_toDisplayString(item.details), 1 /* TEXT */)]),\n          [`item.action`]: _withCtx(({\n            item\n          }) => [_createVNode(_component_v_btn, {\n            onClick: $event => _ctx.viewReportDetail(item),\n            color: \"primary\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"상세 보기\")]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"headers\", \"items\", \"loading\"]), $data.totalPages > 1 ? (_openBlock(), _createBlock(_component_v_pagination, {\n          key: 0,\n          modelValue: $data.page,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.page = $event),\n          length: $data.totalPages,\n          onInput: $options.fetchReports,\n          class: \"mt-3\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"length\", \"onInput\"])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","class","default","_withCtx","_createVNode","_component_v_card","_component_v_card_title","_hoisted_1","_component_v_spacer","_component_v_select","modelValue","$data","selectedType","_cache","$event","items","types","text로","사용할","항목을","명시적으로","지정","_createTextVNode","_createCommentVNode","_","_component_v_card_text","_component_v_data_table","headers","reports","loading","item","_toDisplayString","$options","formatDate","createdTime","formatReason","reason","details","_component_v_btn","onClick","_ctx","viewReportDetail","color","totalPages","_component_v_pagination","key","page","length","onInput","fetchReports"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/report/ReportList.vue"],"sourcesContent":["<template>\n    <v-container class=\"mt-5\">\n      <v-card>\n        <v-card-title>\n          <h3>신고 목록</h3>\n          <v-spacer></v-spacer>\n          <v-select\n            v-model=\"selectedType\"\n            :items=\"types\"\n            item-text=\"text\"      <!-- text로 사용할 항목을 명시적으로 지정 -->\n            item-value=\"value\"    <!-- value로 사용할 항목을 명시적으로 지정 -->\n            label=\"신고 유형 필터\"\n            @change=\"fetchReports\"\n          ></v-select>\n        </v-card-title>\n  \n        <v-card-text>\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"reports\"\n            :items-per-page=\"10\"\n            class=\"elevation-1\"\n            :loading=\"loading\"\n          >\n            <template v-slot:[`item.createdTime`]=\"{ item }\">\n              {{ formatDate(item.createdTime) }}\n            </template>\n            <template v-slot:[`item.reason`]=\"{ item }\">\n              {{ formatReason(item.reason) }}\n            </template>\n            <template v-slot:[`item.details`]=\"{ item }\">\n              {{ item.details }}\n            </template>\n            <template v-slot:[`item.action`]=\"{ item }\">\n              <v-btn @click=\"viewReportDetail(item)\" color=\"primary\">상세 보기</v-btn>\n            </template>\n          </v-data-table>\n  \n          <v-pagination\n            v-if=\"totalPages > 1\"\n            v-model=\"page\"\n            :length=\"totalPages\"\n            @input=\"fetchReports\"\n            class=\"mt-3\"\n          ></v-pagination>\n        </v-card-text>\n      </v-card>\n    </v-container>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        reports: [],\n        headers: [\n          { text: '신고자', value: 'reportEmail', align: 'start' },\n          { text: '피신고자', value: 'suspectEmail' },\n          { text: '사유', value: 'reason' },\n          { text: '상세 내용', value: 'details' },\n          { text: '신고 날짜', value: 'createdTime' },\n          { text: '조치', value: 'action', sortable: false }\n        ],\n        selectedType: '',\n        types: [\n          { text: '전체', value: '' },\n          { text: 'QnA 신고', value: 'qna' },\n          { text: '게시글 신고', value: 'post' },\n          { text: '댓글 신고', value: 'comment' }\n        ],\n        page: 1,\n        totalPages: 1,\n        loading: false,\n      };\n    },\n    methods: {\n      async fetchReports() {\n        this.loading = true;\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/report/list`, {\n            params: {\n              type: this.selectedType || '',  // type이 선택되지 않았을 경우 빈 문자열로 설정\n              page: this.page - 1             // page는 1부터 시작하는 UI에서 -1을 해서 0부터 서버로 요청\n            }\n          });\n          this.reports = response.data.result.content;\n          this.totalPages = response.data.result.totalPages;\n        } catch (error) {\n          console.error('신고 목록을 불러오는 중 오류가 발생했습니다:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n      \n      // Reason을 사용자 친화적인 텍스트로 변환하는 메서드\n      formatReason(reason) {\n        const reasonMap = {\n          SPAM: '스팸홍보/도배글',\n          PORNOGRAPHY: '음란물',\n          ILLEGAL_INFORMATION: '불법정보 포함',\n          HARMFUL_TO_MINORS: '청소년에게 유해한 내용',\n          ABUSIVE_LANGUAGE: '욕설/생명경시/혐오/차별적 표현',\n          PRIVACY_VIOLATION: '개인정보 노출',\n          OFFENSIVE_CONTENT: '불쾌한 표현'\n        };\n        return reasonMap[reason] || '알 수 없는 이유';\n      },\n      \n      formatDate(date) {\n        if (!date) return '';\n        const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\n        return new Date(date).toLocaleDateString('ko-KR', options);\n      }\n    },\n    created() {\n      this.fetchReports();\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .v-container {\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  </style>\n  "],"mappings":";;gEAIUA,mBAAA,CAAc,YAAV,OAAK;;;;;;;;;;;uBAHfC,YAAA,CA8CcC,sBAAA;IA9CDC,KAAK,EAAC;EAAM;IAD7BC,OAAA,EAAAC,QAAA,CAEM,MA4CS,CA5CTC,YAAA,CA4CSC,iBAAA;MA9CfH,OAAA,EAAAC,QAAA,CAGQ,MAWe,CAXfC,YAAA,CAWeE,uBAAA;QAdvBJ,OAAA,EAAAC,QAAA,CAIU,MAAc,CAAdI,UAAc,EACdH,YAAA,CAAqBI,mBAAA,GACrBJ,YAAA,CAOYK,mBAAA;UAbtBC,UAAA,EAOqBC,KAAA,CAAAC,YAAY;UAPjC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOqBH,KAAA,CAAAC,YAAY,GAAAE,MAAA;UACpBC,KAAK,EAAEJ,KAAA,CAAAK,KAAK;UACb,WAAS,EAAC,MAAM;UAAM,MAAI,EAAJ,EAAI;UAACC,KAAK,EAAL,EAAK;UAACC,GAAG,EAAH,EAAG;UAACC,GAAG,EAAH,EAAG;UAACC,KAAK,EAAL,EAAK;UAACC,EAAE,EAAF,EAAE;UAAC,IAAE,EAAF;;UAT9DnB,OAAA,EAAAC,QAAA,CASiE,MAC/B,CAVlCmB,gBAAA,CASiE,wBAC/B,GAAAC,mBAAA,6BAAgC,EAVlED,gBAAA,CAUkE,gDAGvD,E;UAbXE,CAAA;;QAAAA,CAAA;UAgBQpB,YAAA,CA6BcqB,sBAAA;QA7CtBvB,OAAA,EAAAC,QAAA,CAiBU,MAmBe,CAnBfC,YAAA,CAmBesB,uBAAA;UAlBZC,OAAO,EAAEhB,KAAA,CAAAgB,OAAO;UAChBZ,KAAK,EAAEJ,KAAA,CAAAiB,OAAO;UACd,gBAAc,EAAE,EAAE;UACnB3B,KAAK,EAAC,aAAa;UAClB4B,OAAO,EAAElB,KAAA,CAAAkB;;UAEO,sBAAoB1B,QAAA,CACnC,CAAkC;YADK2B;UAAI,OAxBzDR,gBAAA,CAAAS,gBAAA,CAyBiBC,QAAA,CAAAC,UAAU,CAACH,IAAI,CAACI,WAAW,kB;UAEf,iBAAe/B,QAAA,CAC9B,CAA+B;YADG2B;UAAI,OA3BpDR,gBAAA,CAAAS,gBAAA,CA4BiBC,QAAA,CAAAG,YAAY,CAACL,IAAI,CAACM,MAAM,kB;UAEZ,kBAAgBjC,QAAA,CAC/B,CAAkB;YADiB2B;UAAI,OA9BrDR,gBAAA,CAAAS,gBAAA,CA+BiBD,IAAI,CAACO,OAAO,iB;UAEA,iBAAelC,QAAA,CAC9B,CAAoE;YADlC2B;UAAI,OACtC1B,YAAA,CAAoEkC,gBAAA;YAA5DC,OAAK,EAAAzB,MAAA,IAAE0B,IAAA,CAAAC,gBAAgB,CAACX,IAAI;YAAGY,KAAK,EAAC;;YAlC3DxC,OAAA,EAAAC,QAAA,CAkCqE,MAAK,CAlC1EmB,gBAAA,CAkCqE,OAAK,E;YAlC1EE,CAAA;;UAAAA,CAAA;8EAuCkBb,KAAA,CAAAgC,UAAU,Q,cADlB5C,YAAA,CAMgB6C,uBAAA;UA5C1BC,GAAA;UAAAnC,UAAA,EAwCqBC,KAAA,CAAAmC,IAAI;UAxCzB,uBAAAjC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAwCqBH,KAAA,CAAAmC,IAAI,GAAAhC,MAAA;UACZiC,MAAM,EAAEpC,KAAA,CAAAgC,UAAU;UAClBK,OAAK,EAAEhB,QAAA,CAAAiB,YAAY;UACpBhD,KAAK,EAAC;wEA3ClBsB,mBAAA,e;QAAAC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}