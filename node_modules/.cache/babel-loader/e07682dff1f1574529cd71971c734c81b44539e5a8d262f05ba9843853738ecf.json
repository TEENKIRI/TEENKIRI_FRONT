{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      notifications: [],\n      currentPage: 1,\n      itemsPerPage: 20,\n      totalPages: 1\n    };\n  },\n  created() {\n    this.fetchNotifications();\n  },\n  computed: {\n    paginatedNotifications() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.notifications.slice(start, end);\n    }\n  },\n  methods: {\n    async fetchNotifications() {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/notification`);\n        if (response.status === 200) {\n          this.notifications = response.data.result;\n          this.totalPages = Math.ceil(this.notifications.length / this.itemsPerPage);\n        } else {\n          console.error('알림 목록을 불러오는 데 실패했습니다:', response.data.message || response.statusText);\n        }\n      } catch (error) {\n        console.error('알림 목록을 불러오는 중 오류가 발생했습니다:', error);\n      }\n    },\n    viewDetail(notification) {\n      if (notification.qnaId) {\n        this.$router.push(`/qna/detail/${notification.qnaId}`);\n      } else if (notification.postId) {\n        this.$router.push(`/post/detail/${notification.postId}`);\n      } else if (notification.reportId) {\n        this.$router.push(`/report/detail/${notification.reportId}`);\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","notifications","currentPage","itemsPerPage","totalPages","created","fetchNotifications","computed","paginatedNotifications","start","end","slice","methods","response","get","process","env","VUE_APP_API_BASE_URL","status","result","Math","ceil","length","console","error","message","statusText","viewDetail","notification","qnaId","$router","push","postId","reportId","goToPage","page","goToPreviousPage","goToNextPage"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/user/UserNotificaion.vue"],"sourcesContent":["<template>\n    <v-app>\n      <v-container>\n        <h1 class=\"board-title\">알림 내역</h1>\n  \n        <table class=\"tbl_list\">\n          <caption></caption>\n          <colgroup>\n            <col width=\"80\" />\n            <col width=\"auto\" />\n            <col width=\"160\" />\n          </colgroup>\n          <thead>\n            <tr>\n              <th>번호</th>\n              <th>알림 내용</th>\n              <th>보기</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(notification, index) in paginatedNotifications\" :key=\"notification.id\">\n              <td>{{ index + 1 + (currentPage - 1) * itemsPerPage }}</td>\n              <td class=\"text_left\">{{ notification.message }}</td>\n              <td>\n                <v-btn @click=\"viewDetail(notification)\" class=\"btn_view\" color=\"grey\">\n                  보기\n                </v-btn>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n  \n        <div class=\"pagingWrap\">\n          <ul>\n            <li><a href=\"javascript:void(0)\" @click=\"goToPage(1)\" class=\"btn_paging_start\"></a></li>\n            <li><a href=\"javascript:void(0)\" @click=\"goToPreviousPage\" class=\"btn_paging_prev\"></a></li>\n            <li v-for=\"page in totalPages\" :key=\"page\">\n              <a href=\"javascript:void(0)\" @click=\"goToPage(page)\" :class=\"{ btn_paging: true, active: currentPage === page }\">{{ page }}</a>\n            </li>\n            <li><a href=\"javascript:void(0)\" @click=\"goToNextPage\" class=\"btn_paging_next\"></a></li>\n            <li><a href=\"javascript:void(0)\" @click=\"goToPage(totalPages)\" class=\"btn_paging_end\"></a></li>\n          </ul>\n        </div>\n      </v-container>\n    </v-app>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        notifications: [],\n        currentPage: 1,\n        itemsPerPage: 20,\n        totalPages: 1,\n      };\n    },\n    created() {\n      this.fetchNotifications();\n    },\n    computed: {\n      paginatedNotifications() {\n        const start = (this.currentPage - 1) * this.itemsPerPage;\n        const end = start + this.itemsPerPage;\n        return this.notifications.slice(start, end);\n      },\n    },\n    methods: {\n      async fetchNotifications() {\n        try {\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/user/notification`);\n          if (response.status === 200) {\n            this.notifications = response.data.result;\n            this.totalPages = Math.ceil(this.notifications.length / this.itemsPerPage);\n          } else {\n            console.error('알림 목록을 불러오는 데 실패했습니다:', response.data.message || response.statusText);\n          }\n        } catch (error) {\n          console.error('알림 목록을 불러오는 중 오류가 발생했습니다:', error);\n        }\n      },\n      viewDetail(notification) {\n        if (notification.qnaId) {\n          this.$router.push(`/qna/detail/${notification.qnaId}`);\n        } else if (notification.postId) {\n          this.$router.push(`/post/detail/${notification.postId}`);\n        } else if (notification.reportId) {\n          this.$router.push(`/report/detail/${notification.reportId}`);\n        }\n      },\n      goToPage(page) {\n        this.currentPage = page;\n      },\n      goToPreviousPage() {\n        if (this.currentPage > 1) {\n          this.currentPage--;\n        }\n      },\n      goToNextPage() {\n        if (this.currentPage < this.totalPages) {\n          this.currentPage++;\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .board-title {\n    font-size: 26px;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n  \n  .tbl_list {\n    width: 100%;\n    border-collapse: collapse;\n    margin-bottom: 20px;\n  }\n  \n  .tbl_list th,\n  .tbl_list td {\n    border-top: 1px solid #ddd;\n    border-bottom: 1px solid #ddd;\n    padding: 10px;\n    text-align: left;\n  }\n  \n  .tbl_list th {\n    background-color: #f4f4f4;\n    font-weight: bold;\n  }\n  \n  .text_left {\n    text-align: left;\n  }\n  \n  .btn_view {\n    text-transform: uppercase;\n    color: #fff; /* 텍스트 색상 흰색 */\n  }\n  \n  .v-btn.btn_view {\n    background-color: grey !important; /* 기본 회색 */\n  }\n  \n  .v-btn.btn_view:hover {\n    background-color: #777 !important; /* hover 시 더 진한 회색 */\n  }\n  \n  .pagingWrap ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    text-align: center;\n    margin-top: 20px;\n  }\n  \n  .pagingWrap li {\n    display: inline-block;\n  }\n  \n  .pagingWrap li a {\n    margin: 0 5px;\n    text-decoration: none;\n    color: #333;\n    cursor: pointer;\n  }\n  \n  .pagingWrap li a.active {\n    font-weight: bold;\n    color: #0056b3;\n  }\n  \n  .pagingWrap .btn_paging_start:before {\n    content: \"<<\";\n  }\n  \n  .pagingWrap .btn_paging_prev:before {\n    content: \"<\";\n  }\n  \n  .pagingWrap .btn_paging_next:before {\n    content: \">\";\n  }\n  \n  .pagingWrap .btn_paging_end:before {\n    content: \">>\";\n  }\n  </style>\n  "],"mappings":";AAgDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EACDC,QAAQ,EAAE;IACRC,sBAAsBA,CAAA,EAAG;MACvB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACP,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMO,GAAE,GAAID,KAAI,GAAI,IAAI,CAACN,YAAY;MACrC,OAAO,IAAI,CAACF,aAAa,CAACU,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IAC7C;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMN,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMO,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,oBAAoB,CAAC;QACzF,IAAIJ,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACjB,aAAY,GAAIY,QAAQ,CAACb,IAAI,CAACmB,MAAM;UACzC,IAAI,CAACf,UAAS,GAAIgB,IAAI,CAACC,IAAI,CAAC,IAAI,CAACpB,aAAa,CAACqB,MAAK,GAAI,IAAI,CAACnB,YAAY,CAAC;QAC5E,OAAO;UACLoB,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEX,QAAQ,CAACb,IAAI,CAACyB,OAAM,IAAKZ,QAAQ,CAACa,UAAU,CAAC;QACtF;MACF,EAAE,OAAOF,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDG,UAAUA,CAACC,YAAY,EAAE;MACvB,IAAIA,YAAY,CAACC,KAAK,EAAE;QACtB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAeH,YAAY,CAACC,KAAK,EAAE,CAAC;MACxD,OAAO,IAAID,YAAY,CAACI,MAAM,EAAE;QAC9B,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,gBAAgBH,YAAY,CAACI,MAAM,EAAE,CAAC;MAC1D,OAAO,IAAIJ,YAAY,CAACK,QAAQ,EAAE;QAChC,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,kBAAkBH,YAAY,CAACK,QAAQ,EAAE,CAAC;MAC9D;IACF,CAAC;IACDC,QAAQA,CAACC,IAAI,EAAE;MACb,IAAI,CAACjC,WAAU,GAAIiC,IAAI;IACzB,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAAClC,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDmC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACnC,WAAU,GAAI,IAAI,CAACE,UAAU,EAAE;QACtC,IAAI,CAACF,WAAW,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}