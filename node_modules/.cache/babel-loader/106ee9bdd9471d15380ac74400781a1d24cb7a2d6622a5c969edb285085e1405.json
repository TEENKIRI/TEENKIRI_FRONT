{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      image: null,\n      previewImageSrc: null,\n      category: '' // 현재 게시판 종류\n    };\n  },\n  created() {\n    this.category = this.$route.params.category;\n    this.fetchPostDetail(); // 컴포넌트 생성 시 기존 게시글 정보를 로드\n  },\n  methods: {\n    async fetchPostDetail() {\n      try {\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/detail/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/detail/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/detail/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n        const response = await axios.get(apiUrl);\n        const post = response.data.result;\n        this.title = post.title;\n        this.content = post.content;\n      } catch (error) {\n        console.error('게시글을 불러오는 데 실패했습니다:', error);\n        alert('게시글을 불러오는 데 실패했습니다.');\n      }\n    },\n    onFileChange(event) {\n      const files = event?.target?.files || event?.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.image = files[0];\n        this.previewImage();\n      } else {\n        this.image = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.image) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.image);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        if (this.image) {\n          formData.append('image', this.image);\n        }\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/update/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/update/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/update/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n        await axios.post(apiUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('게시글이 성공적으로 수정되었습니다.');\n        this.$router.push({\n          name: 'BoardDetail',\n          params: {\n            id: postId,\n            category: this.category\n          }\n        }); // 수정 후 상세 페이지로 이동\n      } catch (error) {\n        console.error('게시글을 수정하는 데 실패했습니다:', error);\n        alert('게시글 수정에 실패했습니다.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","title","content","image","previewImageSrc","category","created","$route","params","fetchPostDetail","methods","postId","id","apiUrl","process","env","VUE_APP_API_BASE_URL","Error","response","get","post","result","error","console","alert","onFileChange","event","files","target","dataTransfer","length","previewImage","reader","FileReader","onload","e","readAsDataURL","submitForm","formData","FormData","append","headers","$router","push","name"],"sources":["/Users/milcho/Project/TEENKIRI/teenkiri_front/teenkiri_front/src/views/board/BoardUpdate.vue"],"sourcesContent":["<template>\n  <v-container class=\"mt-5\">\n    <v-card>\n      <v-card-title>\n        <h3>게시글 수정</h3>\n      </v-card-title>\n\n      <v-card-text>\n        <v-form ref=\"form\" @submit.prevent=\"submitForm\">\n          <!-- 제목 -->\n          <v-text-field\n            label=\"제목\"\n            v-model=\"title\"\n            required\n            outlined\n            dense\n          />\n\n          <!-- 내용 -->\n          <v-textarea\n            label=\"내용\"\n            v-model=\"content\"\n            rows=\"5\"\n            required\n            outlined\n            dense\n          />\n\n          <!-- 이미지 선택 -->\n          <v-file-input\n            @change=\"onFileChange\"\n            label=\"이미지 선택\"\n            accept=\"image/*\"\n            outlined\n            dense\n          />\n\n          <!-- 미리보기 이미지 -->\n          <v-img v-if=\"previewImageSrc\" :src=\"previewImageSrc\" max-width=\"200\" class=\"my-3\"/>\n\n          <v-btn type=\"submit\" color=\"primary\" class=\"mt-3\">저장</v-btn>\n        </v-form>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      image: null,\n      previewImageSrc: null,\n      category: '', // 현재 게시판 종류\n    };\n  },\n  created() {\n    this.category = this.$route.params.category;\n    this.fetchPostDetail(); // 컴포넌트 생성 시 기존 게시글 정보를 로드\n  },\n  methods: {\n    async fetchPostDetail() {\n      try {\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/detail/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/detail/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/detail/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n\n        const response = await axios.get(apiUrl);\n        const post = response.data.result;\n        this.title = post.title;\n        this.content = post.content;\n      } catch (error) {\n        console.error('게시글을 불러오는 데 실패했습니다:', error);\n        alert('게시글을 불러오는 데 실패했습니다.');\n      }\n    },\n    onFileChange(event) {\n      const files = event?.target?.files || event?.dataTransfer?.files;\n      if (files && files.length > 0) {\n        this.image = files[0];\n        this.previewImage();\n      } else {\n        this.image = null;\n        this.previewImageSrc = null;\n      }\n    },\n    previewImage() {\n      if (this.image) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.previewImageSrc = e.target.result;\n        };\n        reader.readAsDataURL(this.image);\n      } else {\n        this.previewImageSrc = null;\n      }\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        if (this.image) {\n          formData.append('image', this.image);\n        }\n\n        const postId = this.$route.params.id;\n        let apiUrl;\n\n        // 카테고리별로 API URL을 설정\n        if (this.category === 'event') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/event/update/${postId}`;\n        } else if (this.category === 'notice') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/notice/update/${postId}`;\n        } else if (this.category === 'post') {\n          apiUrl = `${process.env.VUE_APP_API_BASE_URL}/board/post/update/${postId}`;\n        } else {\n          throw new Error('잘못된 카테고리입니다.');\n        }\n\n        await axios.post(apiUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n\n        alert('게시글이 성공적으로 수정되었습니다.');\n        this.$router.push({ name: 'BoardDetail', params: { id: postId, category: this.category } }); // 수정 후 상세 페이지로 이동\n      } catch (error) {\n        console.error('게시글을 수정하는 데 실패했습니다:', error);\n        alert('게시글 수정에 실패했습니다.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-container {\n  max-width: 600px;\n  margin: auto;\n}\n.my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}